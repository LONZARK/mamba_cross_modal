CUDA extension for cauchy multiplication not found. Install by going to extensions/cauchy/ and running `python setup.py install`. This should speed up end-to-end training by 10-50%
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/modules/transformer.py:282: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 1 [0/10000 (0%)]	Loss: 2.092087
Train Epoch: 1 [800/10000 (8%)]	Loss: 0.706946
Train Epoch: 1 [1600/10000 (16%)]	Loss: 0.619734
Train Epoch: 1 [2400/10000 (24%)]	Loss: 0.522002
Train Epoch: 1 [3200/10000 (32%)]	Loss: 0.505810
Train Epoch: 1 [4000/10000 (40%)]	Loss: 0.448138
Train Epoch: 1 [4800/10000 (48%)]	Loss: 0.453571
Train Epoch: 1 [5600/10000 (56%)]	Loss: 0.433509
Train Epoch: 1 [6400/10000 (64%)]	Loss: 0.556392
Train Epoch: 1 [7200/10000 (72%)]	Loss: 0.452034
Train Epoch: 1 [8000/10000 (80%)]	Loss: 0.443167
Train Epoch: 1 [8800/10000 (88%)]	Loss: 0.435828
Train Epoch: 1 [9600/10000 (96%)]	Loss: 0.506836
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 45.4
Visual Event Detection Segment-level F1: 45.3
Audio-Visual Event Detection Segment-level F1: 36.1
Segment-levelType@Avg. F1: 42.2
Segment-level Event@Avg. F1: 45.7
Audio Event Detection Event-level F1: 38.4
Visual Event Detection Event-level F1: 42.2
Audio-Visual Event Detection Event-level F1: 32.4
Event-level Type@Avg. F1: 37.7
Event-level Event@Avg. F1: 38.9
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 2 [0/10000 (0%)]	Loss: 0.441184
Train Epoch: 2 [800/10000 (8%)]	Loss: 0.523353
Train Epoch: 2 [1600/10000 (16%)]	Loss: 0.470253
Train Epoch: 2 [2400/10000 (24%)]	Loss: 0.443344
Train Epoch: 2 [3200/10000 (32%)]	Loss: 0.389597
Train Epoch: 2 [4000/10000 (40%)]	Loss: 0.485933
Train Epoch: 2 [4800/10000 (48%)]	Loss: 0.466017
Train Epoch: 2 [5600/10000 (56%)]	Loss: 0.409047
Train Epoch: 2 [6400/10000 (64%)]	Loss: 0.479997
Train Epoch: 2 [7200/10000 (72%)]	Loss: 0.446085
Train Epoch: 2 [8000/10000 (80%)]	Loss: 0.446729
Train Epoch: 2 [8800/10000 (88%)]	Loss: 0.451994
Train Epoch: 2 [9600/10000 (96%)]	Loss: 0.496049
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 48.2
Visual Event Detection Segment-level F1: 51.6
Audio-Visual Event Detection Segment-level F1: 38.0
Segment-levelType@Avg. F1: 45.9
Segment-level Event@Avg. F1: 50.6
Audio Event Detection Event-level F1: 41.2
Visual Event Detection Event-level F1: 48.7
Audio-Visual Event Detection Event-level F1: 34.5
Event-level Type@Avg. F1: 41.4
Event-level Event@Avg. F1: 43.5
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 3 [0/10000 (0%)]	Loss: 0.390359
Train Epoch: 3 [800/10000 (8%)]	Loss: 0.439923
Train Epoch: 3 [1600/10000 (16%)]	Loss: 0.389941
Train Epoch: 3 [2400/10000 (24%)]	Loss: 0.403493
Train Epoch: 3 [3200/10000 (32%)]	Loss: 0.412275
Train Epoch: 3 [4000/10000 (40%)]	Loss: 0.387929
Train Epoch: 3 [4800/10000 (48%)]	Loss: 0.378410
Train Epoch: 3 [5600/10000 (56%)]	Loss: 0.415131
Train Epoch: 3 [6400/10000 (64%)]	Loss: 0.374697
Train Epoch: 3 [7200/10000 (72%)]	Loss: 0.392056
Train Epoch: 3 [8000/10000 (80%)]	Loss: 0.368718
Train Epoch: 3 [8800/10000 (88%)]	Loss: 0.393759
Train Epoch: 3 [9600/10000 (96%)]	Loss: 0.413440
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 49.1
Visual Event Detection Segment-level F1: 54.7
Audio-Visual Event Detection Segment-level F1: 40.9
Segment-levelType@Avg. F1: 48.3
Segment-level Event@Avg. F1: 52.6
Audio Event Detection Event-level F1: 42.3
Visual Event Detection Event-level F1: 51.6
Audio-Visual Event Detection Event-level F1: 37.7
Event-level Type@Avg. F1: 43.9
Event-level Event@Avg. F1: 45.4
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 4 [0/10000 (0%)]	Loss: 0.345998
Train Epoch: 4 [800/10000 (8%)]	Loss: 0.450167
Train Epoch: 4 [1600/10000 (16%)]	Loss: 0.446117
Train Epoch: 4 [2400/10000 (24%)]	Loss: 0.365156
Train Epoch: 4 [3200/10000 (32%)]	Loss: 0.421754
Train Epoch: 4 [4000/10000 (40%)]	Loss: 0.326194
Train Epoch: 4 [4800/10000 (48%)]	Loss: 0.357154
Train Epoch: 4 [5600/10000 (56%)]	Loss: 0.358461
Train Epoch: 4 [6400/10000 (64%)]	Loss: 0.351133
Train Epoch: 4 [7200/10000 (72%)]	Loss: 0.399484
Train Epoch: 4 [8000/10000 (80%)]	Loss: 0.385326
Train Epoch: 4 [8800/10000 (88%)]	Loss: 0.399752
Train Epoch: 4 [9600/10000 (96%)]	Loss: 0.444636
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 48.8
Visual Event Detection Segment-level F1: 55.8
Audio-Visual Event Detection Segment-level F1: 42.9
Segment-levelType@Avg. F1: 49.1
Segment-level Event@Avg. F1: 52.5
Audio Event Detection Event-level F1: 42.4
Visual Event Detection Event-level F1: 52.7
Audio-Visual Event Detection Event-level F1: 38.8
Event-level Type@Avg. F1: 44.6
Event-level Event@Avg. F1: 45.8
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 5 [0/10000 (0%)]	Loss: 0.370928
Train Epoch: 5 [800/10000 (8%)]	Loss: 0.385738
Train Epoch: 5 [1600/10000 (16%)]	Loss: 0.341170
Train Epoch: 5 [2400/10000 (24%)]	Loss: 0.398079
Train Epoch: 5 [3200/10000 (32%)]	Loss: 0.366994
Train Epoch: 5 [4000/10000 (40%)]	Loss: 0.355627
Train Epoch: 5 [4800/10000 (48%)]	Loss: 0.364886
Train Epoch: 5 [5600/10000 (56%)]	Loss: 0.380647
Train Epoch: 5 [6400/10000 (64%)]	Loss: 0.422789
Train Epoch: 5 [7200/10000 (72%)]	Loss: 0.403855
Train Epoch: 5 [8000/10000 (80%)]	Loss: 0.429459
Train Epoch: 5 [8800/10000 (88%)]	Loss: 0.367091
Train Epoch: 5 [9600/10000 (96%)]	Loss: 0.387022
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 49.5
Visual Event Detection Segment-level F1: 52.8
Audio-Visual Event Detection Segment-level F1: 41.9
Segment-levelType@Avg. F1: 48.1
Segment-level Event@Avg. F1: 51.0
Audio Event Detection Event-level F1: 42.2
Visual Event Detection Event-level F1: 50.3
Audio-Visual Event Detection Event-level F1: 38.8
Event-level Type@Avg. F1: 43.8
Event-level Event@Avg. F1: 43.7
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 6 [0/10000 (0%)]	Loss: 0.410028
Train Epoch: 6 [800/10000 (8%)]	Loss: 0.335640
Train Epoch: 6 [1600/10000 (16%)]	Loss: 0.316569
Train Epoch: 6 [2400/10000 (24%)]	Loss: 0.352847
Train Epoch: 6 [3200/10000 (32%)]	Loss: 0.389074
Train Epoch: 6 [4000/10000 (40%)]	Loss: 0.406711
Train Epoch: 6 [4800/10000 (48%)]	Loss: 0.423558
Train Epoch: 6 [5600/10000 (56%)]	Loss: 0.320430
Train Epoch: 6 [6400/10000 (64%)]	Loss: 0.397218
Train Epoch: 6 [7200/10000 (72%)]	Loss: 0.346090
Train Epoch: 6 [8000/10000 (80%)]	Loss: 0.372361
Train Epoch: 6 [8800/10000 (88%)]	Loss: 0.408862
Train Epoch: 6 [9600/10000 (96%)]	Loss: 0.441392
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.3
Visual Event Detection Segment-level F1: 57.4
Audio-Visual Event Detection Segment-level F1: 44.5
Segment-levelType@Avg. F1: 51.1
Segment-level Event@Avg. F1: 54.2
Audio Event Detection Event-level F1: 43.9
Visual Event Detection Event-level F1: 54.0
Audio-Visual Event Detection Event-level F1: 40.4
Event-level Type@Avg. F1: 46.1
Event-level Event@Avg. F1: 46.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 7 [0/10000 (0%)]	Loss: 0.365881
Train Epoch: 7 [800/10000 (8%)]	Loss: 0.390565
Train Epoch: 7 [1600/10000 (16%)]	Loss: 0.331958
Train Epoch: 7 [2400/10000 (24%)]	Loss: 0.359755
Train Epoch: 7 [3200/10000 (32%)]	Loss: 0.375435
Train Epoch: 7 [4000/10000 (40%)]	Loss: 0.343446
Train Epoch: 7 [4800/10000 (48%)]	Loss: 0.428893
Train Epoch: 7 [5600/10000 (56%)]	Loss: 0.343968
Train Epoch: 7 [6400/10000 (64%)]	Loss: 0.362629
Train Epoch: 7 [7200/10000 (72%)]	Loss: 0.337058
Train Epoch: 7 [8000/10000 (80%)]	Loss: 0.354599
Train Epoch: 7 [8800/10000 (88%)]	Loss: 0.444865
Train Epoch: 7 [9600/10000 (96%)]	Loss: 0.375918
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 50.2
Visual Event Detection Segment-level F1: 56.9
Audio-Visual Event Detection Segment-level F1: 44.0
Segment-levelType@Avg. F1: 50.3
Segment-level Event@Avg. F1: 53.7
Audio Event Detection Event-level F1: 43.0
Visual Event Detection Event-level F1: 53.9
Audio-Visual Event Detection Event-level F1: 40.1
Event-level Type@Avg. F1: 45.7
Event-level Event@Avg. F1: 46.0
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 8 [0/10000 (0%)]	Loss: 0.399942
Train Epoch: 8 [800/10000 (8%)]	Loss: 0.374637
Train Epoch: 8 [1600/10000 (16%)]	Loss: 0.353828
Train Epoch: 8 [2400/10000 (24%)]	Loss: 0.336733
Train Epoch: 8 [3200/10000 (32%)]	Loss: 0.381821
Train Epoch: 8 [4000/10000 (40%)]	Loss: 0.326613
Train Epoch: 8 [4800/10000 (48%)]	Loss: 0.345494
Train Epoch: 8 [5600/10000 (56%)]	Loss: 0.489192
Train Epoch: 8 [6400/10000 (64%)]	Loss: 0.371010
Train Epoch: 8 [7200/10000 (72%)]	Loss: 0.357213
Train Epoch: 8 [8000/10000 (80%)]	Loss: 0.385994
Train Epoch: 8 [8800/10000 (88%)]	Loss: 0.403256
Train Epoch: 8 [9600/10000 (96%)]	Loss: 0.339933
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 48.5
Visual Event Detection Segment-level F1: 54.8
Audio-Visual Event Detection Segment-level F1: 40.7
Segment-levelType@Avg. F1: 48.0
Segment-level Event@Avg. F1: 51.7
Audio Event Detection Event-level F1: 41.3
Visual Event Detection Event-level F1: 51.9
Audio-Visual Event Detection Event-level F1: 36.9
Event-level Type@Avg. F1: 43.4
Event-level Event@Avg. F1: 44.3
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 9 [0/10000 (0%)]	Loss: 0.367061
Train Epoch: 9 [800/10000 (8%)]	Loss: 0.315981
Train Epoch: 9 [1600/10000 (16%)]	Loss: 0.372610
Train Epoch: 9 [2400/10000 (24%)]	Loss: 0.318786
Train Epoch: 9 [3200/10000 (32%)]	Loss: 0.415752
Train Epoch: 9 [4000/10000 (40%)]	Loss: 0.399497
Train Epoch: 9 [4800/10000 (48%)]	Loss: 0.441277
Train Epoch: 9 [5600/10000 (56%)]	Loss: 0.370729
Train Epoch: 9 [6400/10000 (64%)]	Loss: 0.393631
Train Epoch: 9 [7200/10000 (72%)]	Loss: 0.360066
Train Epoch: 9 [8000/10000 (80%)]	Loss: 0.343146
Train Epoch: 9 [8800/10000 (88%)]	Loss: 0.312374
Train Epoch: 9 [9600/10000 (96%)]	Loss: 0.373811
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.2
Visual Event Detection Segment-level F1: 56.9
Audio-Visual Event Detection Segment-level F1: 44.2
Segment-levelType@Avg. F1: 50.8
Segment-level Event@Avg. F1: 53.8
Audio Event Detection Event-level F1: 43.8
Visual Event Detection Event-level F1: 53.8
Audio-Visual Event Detection Event-level F1: 40.1
Event-level Type@Avg. F1: 45.9
Event-level Event@Avg. F1: 46.2
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 10 [0/10000 (0%)]	Loss: 0.423708
Train Epoch: 10 [800/10000 (8%)]	Loss: 0.372613
Train Epoch: 10 [1600/10000 (16%)]	Loss: 0.452347
Train Epoch: 10 [2400/10000 (24%)]	Loss: 0.347058
Train Epoch: 10 [3200/10000 (32%)]	Loss: 0.368771
Train Epoch: 10 [4000/10000 (40%)]	Loss: 0.366685
Train Epoch: 10 [4800/10000 (48%)]	Loss: 0.406982
Train Epoch: 10 [5600/10000 (56%)]	Loss: 0.393994
Train Epoch: 10 [6400/10000 (64%)]	Loss: 0.412197
Train Epoch: 10 [7200/10000 (72%)]	Loss: 0.381760
Train Epoch: 10 [8000/10000 (80%)]	Loss: 0.467593
Train Epoch: 10 [8800/10000 (88%)]	Loss: 0.384946
Train Epoch: 10 [9600/10000 (96%)]	Loss: 0.344018
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.4
Visual Event Detection Segment-level F1: 54.3
Audio-Visual Event Detection Segment-level F1: 41.7
Segment-levelType@Avg. F1: 49.1
Segment-level Event@Avg. F1: 53.5
Audio Event Detection Event-level F1: 43.3
Visual Event Detection Event-level F1: 51.3
Audio-Visual Event Detection Event-level F1: 37.6
Event-level Type@Avg. F1: 44.1
Event-level Event@Avg. F1: 45.7
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 11 [0/10000 (0%)]	Loss: 0.331080
Train Epoch: 11 [800/10000 (8%)]	Loss: 0.380615
Train Epoch: 11 [1600/10000 (16%)]	Loss: 0.361887
Train Epoch: 11 [2400/10000 (24%)]	Loss: 0.323747
Train Epoch: 11 [3200/10000 (32%)]	Loss: 0.339290
Train Epoch: 11 [4000/10000 (40%)]	Loss: 0.351220
Train Epoch: 11 [4800/10000 (48%)]	Loss: 0.341973
Train Epoch: 11 [5600/10000 (56%)]	Loss: 0.346391
Train Epoch: 11 [6400/10000 (64%)]	Loss: 0.311704
Train Epoch: 11 [7200/10000 (72%)]	Loss: 0.295201
Train Epoch: 11 [8000/10000 (80%)]	Loss: 0.298161
Train Epoch: 11 [8800/10000 (88%)]	Loss: 0.346737
Train Epoch: 11 [9600/10000 (96%)]	Loss: 0.329024
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.7
Visual Event Detection Segment-level F1: 56.2
Audio-Visual Event Detection Segment-level F1: 43.0
Segment-levelType@Avg. F1: 50.7
Segment-level Event@Avg. F1: 54.7
Audio Event Detection Event-level F1: 44.8
Visual Event Detection Event-level F1: 53.0
Audio-Visual Event Detection Event-level F1: 39.0
Event-level Type@Avg. F1: 45.6
Event-level Event@Avg. F1: 46.9
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 12 [0/10000 (0%)]	Loss: 0.339005
Train Epoch: 12 [800/10000 (8%)]	Loss: 0.309046
Train Epoch: 12 [1600/10000 (16%)]	Loss: 0.314419
Train Epoch: 12 [2400/10000 (24%)]	Loss: 0.286249
Train Epoch: 12 [3200/10000 (32%)]	Loss: 0.341950
Train Epoch: 12 [4000/10000 (40%)]	Loss: 0.389162
Train Epoch: 12 [4800/10000 (48%)]	Loss: 0.346185
Train Epoch: 12 [5600/10000 (56%)]	Loss: 0.377989
Train Epoch: 12 [6400/10000 (64%)]	Loss: 0.348192
Train Epoch: 12 [7200/10000 (72%)]	Loss: 0.348967
Train Epoch: 12 [8000/10000 (80%)]	Loss: 0.296435
Train Epoch: 12 [8800/10000 (88%)]	Loss: 0.359805
Train Epoch: 12 [9600/10000 (96%)]	Loss: 0.311192
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.2
Visual Event Detection Segment-level F1: 57.1
Audio-Visual Event Detection Segment-level F1: 44.0
Segment-levelType@Avg. F1: 51.1
Segment-level Event@Avg. F1: 54.4
Audio Event Detection Event-level F1: 44.4
Visual Event Detection Event-level F1: 53.8
Audio-Visual Event Detection Event-level F1: 39.7
Event-level Type@Avg. F1: 46.0
Event-level Event@Avg. F1: 46.8
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 13 [0/10000 (0%)]	Loss: 0.316379
Train Epoch: 13 [800/10000 (8%)]	Loss: 0.300460
Train Epoch: 13 [1600/10000 (16%)]	Loss: 0.330060
Train Epoch: 13 [2400/10000 (24%)]	Loss: 0.295667
Train Epoch: 13 [3200/10000 (32%)]	Loss: 0.361762
Train Epoch: 13 [4000/10000 (40%)]	Loss: 0.306196
Train Epoch: 13 [4800/10000 (48%)]	Loss: 0.378308
Train Epoch: 13 [5600/10000 (56%)]	Loss: 0.296785
Train Epoch: 13 [6400/10000 (64%)]	Loss: 0.298442
Train Epoch: 13 [7200/10000 (72%)]	Loss: 0.377135
Train Epoch: 13 [8000/10000 (80%)]	Loss: 0.359585
Train Epoch: 13 [8800/10000 (88%)]	Loss: 0.361664
Train Epoch: 13 [9600/10000 (96%)]	Loss: 0.388278
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.0
Visual Event Detection Segment-level F1: 57.2
Audio-Visual Event Detection Segment-level F1: 45.0
Segment-levelType@Avg. F1: 51.4
Segment-level Event@Avg. F1: 54.1
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 54.1
Audio-Visual Event Detection Event-level F1: 40.6
Event-level Type@Avg. F1: 46.3
Event-level Event@Avg. F1: 46.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 14 [0/10000 (0%)]	Loss: 0.305578
Train Epoch: 14 [800/10000 (8%)]	Loss: 0.272528
Train Epoch: 14 [1600/10000 (16%)]	Loss: 0.282597
Train Epoch: 14 [2400/10000 (24%)]	Loss: 0.342115
Train Epoch: 14 [3200/10000 (32%)]	Loss: 0.331848
Train Epoch: 14 [4000/10000 (40%)]	Loss: 0.362387
Train Epoch: 14 [4800/10000 (48%)]	Loss: 0.319414
Train Epoch: 14 [5600/10000 (56%)]	Loss: 0.359467
Train Epoch: 14 [6400/10000 (64%)]	Loss: 0.278133
Train Epoch: 14 [7200/10000 (72%)]	Loss: 0.284178
Train Epoch: 14 [8000/10000 (80%)]	Loss: 0.286230
Train Epoch: 14 [8800/10000 (88%)]	Loss: 0.327420
Train Epoch: 14 [9600/10000 (96%)]	Loss: 0.351453
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.3
Visual Event Detection Segment-level F1: 55.7
Audio-Visual Event Detection Segment-level F1: 43.8
Segment-levelType@Avg. F1: 50.6
Segment-level Event@Avg. F1: 54.0
Audio Event Detection Event-level F1: 44.4
Visual Event Detection Event-level F1: 52.6
Audio-Visual Event Detection Event-level F1: 39.4
Event-level Type@Avg. F1: 45.5
Event-level Event@Avg. F1: 46.4
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 15 [0/10000 (0%)]	Loss: 0.317125
Train Epoch: 15 [800/10000 (8%)]	Loss: 0.303914
Train Epoch: 15 [1600/10000 (16%)]	Loss: 0.333885
Train Epoch: 15 [2400/10000 (24%)]	Loss: 0.350101
Train Epoch: 15 [3200/10000 (32%)]	Loss: 0.369131
Train Epoch: 15 [4000/10000 (40%)]	Loss: 0.322489
Train Epoch: 15 [4800/10000 (48%)]	Loss: 0.371621
Train Epoch: 15 [5600/10000 (56%)]	Loss: 0.302592
Train Epoch: 15 [6400/10000 (64%)]	Loss: 0.374398
Train Epoch: 15 [7200/10000 (72%)]	Loss: 0.358158
Train Epoch: 15 [8000/10000 (80%)]	Loss: 0.333424
Train Epoch: 15 [8800/10000 (88%)]	Loss: 0.352407
Train Epoch: 15 [9600/10000 (96%)]	Loss: 0.367182
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 55.9
Audio-Visual Event Detection Segment-level F1: 43.7
Segment-levelType@Avg. F1: 50.5
Segment-level Event@Avg. F1: 53.4
Audio Event Detection Event-level F1: 44.2
Visual Event Detection Event-level F1: 52.8
Audio-Visual Event Detection Event-level F1: 39.4
Event-level Type@Avg. F1: 45.5
Event-level Event@Avg. F1: 46.0
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 16 [0/10000 (0%)]	Loss: 0.318171
Train Epoch: 16 [800/10000 (8%)]	Loss: 0.275089
Train Epoch: 16 [1600/10000 (16%)]	Loss: 0.299904
Train Epoch: 16 [2400/10000 (24%)]	Loss: 0.307022
Train Epoch: 16 [3200/10000 (32%)]	Loss: 0.300281
Train Epoch: 16 [4000/10000 (40%)]	Loss: 0.351362
Train Epoch: 16 [4800/10000 (48%)]	Loss: 0.318573
Train Epoch: 16 [5600/10000 (56%)]	Loss: 0.300183
Train Epoch: 16 [6400/10000 (64%)]	Loss: 0.283760
Train Epoch: 16 [7200/10000 (72%)]	Loss: 0.287850
Train Epoch: 16 [8000/10000 (80%)]	Loss: 0.291232
Train Epoch: 16 [8800/10000 (88%)]	Loss: 0.340955
Train Epoch: 16 [9600/10000 (96%)]	Loss: 0.299513
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.2
Visual Event Detection Segment-level F1: 56.5
Audio-Visual Event Detection Segment-level F1: 45.0
Segment-levelType@Avg. F1: 51.2
Segment-level Event@Avg. F1: 54.0
Audio Event Detection Event-level F1: 44.5
Visual Event Detection Event-level F1: 53.4
Audio-Visual Event Detection Event-level F1: 40.6
Event-level Type@Avg. F1: 46.2
Event-level Event@Avg. F1: 46.5
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 17 [0/10000 (0%)]	Loss: 0.336298
Train Epoch: 17 [800/10000 (8%)]	Loss: 0.275913
Train Epoch: 17 [1600/10000 (16%)]	Loss: 0.340895
Train Epoch: 17 [2400/10000 (24%)]	Loss: 0.345936
Train Epoch: 17 [3200/10000 (32%)]	Loss: 0.328458
Train Epoch: 17 [4000/10000 (40%)]	Loss: 0.340547
Train Epoch: 17 [4800/10000 (48%)]	Loss: 0.292306
Train Epoch: 17 [5600/10000 (56%)]	Loss: 0.302129
Train Epoch: 17 [6400/10000 (64%)]	Loss: 0.267637
Train Epoch: 17 [7200/10000 (72%)]	Loss: 0.288497
Train Epoch: 17 [8000/10000 (80%)]	Loss: 0.326843
Train Epoch: 17 [8800/10000 (88%)]	Loss: 0.310916
Train Epoch: 17 [9600/10000 (96%)]	Loss: 0.315814
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 55.4
Audio-Visual Event Detection Segment-level F1: 43.9
Segment-levelType@Avg. F1: 50.4
Segment-level Event@Avg. F1: 53.1
Audio Event Detection Event-level F1: 44.0
Visual Event Detection Event-level F1: 52.4
Audio-Visual Event Detection Event-level F1: 39.7
Event-level Type@Avg. F1: 45.4
Event-level Event@Avg. F1: 45.7
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 18 [0/10000 (0%)]	Loss: 0.361671
Train Epoch: 18 [800/10000 (8%)]	Loss: 0.310313
Train Epoch: 18 [1600/10000 (16%)]	Loss: 0.300637
Train Epoch: 18 [2400/10000 (24%)]	Loss: 0.314187
Train Epoch: 18 [3200/10000 (32%)]	Loss: 0.318935
Train Epoch: 18 [4000/10000 (40%)]	Loss: 0.300725
Train Epoch: 18 [4800/10000 (48%)]	Loss: 0.383486
Train Epoch: 18 [5600/10000 (56%)]	Loss: 0.314332
Train Epoch: 18 [6400/10000 (64%)]	Loss: 0.330374
Train Epoch: 18 [7200/10000 (72%)]	Loss: 0.269703
Train Epoch: 18 [8000/10000 (80%)]	Loss: 0.305563
Train Epoch: 18 [8800/10000 (88%)]	Loss: 0.292671
Train Epoch: 18 [9600/10000 (96%)]	Loss: 0.291598
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.2
Visual Event Detection Segment-level F1: 56.0
Audio-Visual Event Detection Segment-level F1: 44.6
Segment-levelType@Avg. F1: 50.9
Segment-level Event@Avg. F1: 54.2
Audio Event Detection Event-level F1: 44.6
Visual Event Detection Event-level F1: 52.9
Audio-Visual Event Detection Event-level F1: 40.2
Event-level Type@Avg. F1: 45.9
Event-level Event@Avg. F1: 46.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 19 [0/10000 (0%)]	Loss: 0.326348
Train Epoch: 19 [800/10000 (8%)]	Loss: 0.324793
Train Epoch: 19 [1600/10000 (16%)]	Loss: 0.326883
Train Epoch: 19 [2400/10000 (24%)]	Loss: 0.305099
Train Epoch: 19 [3200/10000 (32%)]	Loss: 0.309416
Train Epoch: 19 [4000/10000 (40%)]	Loss: 0.279607
Train Epoch: 19 [4800/10000 (48%)]	Loss: 0.344412
Train Epoch: 19 [5600/10000 (56%)]	Loss: 0.280795
Train Epoch: 19 [6400/10000 (64%)]	Loss: 0.275844
Train Epoch: 19 [7200/10000 (72%)]	Loss: 0.283193
Train Epoch: 19 [8000/10000 (80%)]	Loss: 0.331260
Train Epoch: 19 [8800/10000 (88%)]	Loss: 0.354287
Train Epoch: 19 [9600/10000 (96%)]	Loss: 0.329253
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.4
Visual Event Detection Segment-level F1: 54.8
Audio-Visual Event Detection Segment-level F1: 43.1
Segment-levelType@Avg. F1: 49.8
Segment-level Event@Avg. F1: 53.3
Audio Event Detection Event-level F1: 43.8
Visual Event Detection Event-level F1: 51.7
Audio-Visual Event Detection Event-level F1: 38.8
Event-level Type@Avg. F1: 44.8
Event-level Event@Avg. F1: 45.8
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 20 [0/10000 (0%)]	Loss: 0.325301
Train Epoch: 20 [800/10000 (8%)]	Loss: 0.310368
Train Epoch: 20 [1600/10000 (16%)]	Loss: 0.296697
Train Epoch: 20 [2400/10000 (24%)]	Loss: 0.272356
Train Epoch: 20 [3200/10000 (32%)]	Loss: 0.308853
Train Epoch: 20 [4000/10000 (40%)]	Loss: 0.290385
Train Epoch: 20 [4800/10000 (48%)]	Loss: 0.306412
Train Epoch: 20 [5600/10000 (56%)]	Loss: 0.287054
Train Epoch: 20 [6400/10000 (64%)]	Loss: 0.294013
Train Epoch: 20 [7200/10000 (72%)]	Loss: 0.322550
Train Epoch: 20 [8000/10000 (80%)]	Loss: 0.294453
Train Epoch: 20 [8800/10000 (88%)]	Loss: 0.305433
Train Epoch: 20 [9600/10000 (96%)]	Loss: 0.304283
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.8
Visual Event Detection Segment-level F1: 53.2
Audio-Visual Event Detection Segment-level F1: 42.6
Segment-levelType@Avg. F1: 49.5
Segment-level Event@Avg. F1: 53.1
Audio Event Detection Event-level F1: 44.9
Visual Event Detection Event-level F1: 50.2
Audio-Visual Event Detection Event-level F1: 38.4
Event-level Type@Avg. F1: 44.5
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 21 [0/10000 (0%)]	Loss: 0.309714
Train Epoch: 21 [800/10000 (8%)]	Loss: 0.274982
Train Epoch: 21 [1600/10000 (16%)]	Loss: 0.303313
Train Epoch: 21 [2400/10000 (24%)]	Loss: 0.267754
Train Epoch: 21 [3200/10000 (32%)]	Loss: 0.299159
Train Epoch: 21 [4000/10000 (40%)]	Loss: 0.277988
Train Epoch: 21 [4800/10000 (48%)]	Loss: 0.298887
Train Epoch: 21 [5600/10000 (56%)]	Loss: 0.304598
Train Epoch: 21 [6400/10000 (64%)]	Loss: 0.341293
Train Epoch: 21 [7200/10000 (72%)]	Loss: 0.308876
Train Epoch: 21 [8000/10000 (80%)]	Loss: 0.305980
Train Epoch: 21 [8800/10000 (88%)]	Loss: 0.262497
Train Epoch: 21 [9600/10000 (96%)]	Loss: 0.330539
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.7
Audio-Visual Event Detection Segment-level F1: 43.5
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 53.1
Audio Event Detection Event-level F1: 44.2
Visual Event Detection Event-level F1: 51.6
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.7
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 22 [0/10000 (0%)]	Loss: 0.329732
Train Epoch: 22 [800/10000 (8%)]	Loss: 0.317062
Train Epoch: 22 [1600/10000 (16%)]	Loss: 0.295422
Train Epoch: 22 [2400/10000 (24%)]	Loss: 0.338222
Train Epoch: 22 [3200/10000 (32%)]	Loss: 0.336177
Train Epoch: 22 [4000/10000 (40%)]	Loss: 0.271821
Train Epoch: 22 [4800/10000 (48%)]	Loss: 0.312061
Train Epoch: 22 [5600/10000 (56%)]	Loss: 0.332463
Train Epoch: 22 [6400/10000 (64%)]	Loss: 0.303917
Train Epoch: 22 [7200/10000 (72%)]	Loss: 0.287768
Train Epoch: 22 [8000/10000 (80%)]	Loss: 0.406575
Train Epoch: 22 [8800/10000 (88%)]	Loss: 0.336606
Train Epoch: 22 [9600/10000 (96%)]	Loss: 0.294574
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.0
Visual Event Detection Segment-level F1: 54.4
Audio-Visual Event Detection Segment-level F1: 43.3
Segment-levelType@Avg. F1: 49.9
Segment-level Event@Avg. F1: 53.0
Audio Event Detection Event-level F1: 44.4
Visual Event Detection Event-level F1: 51.3
Audio-Visual Event Detection Event-level F1: 39.1
Event-level Type@Avg. F1: 44.9
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 23 [0/10000 (0%)]	Loss: 0.320039
Train Epoch: 23 [800/10000 (8%)]	Loss: 0.345438
Train Epoch: 23 [1600/10000 (16%)]	Loss: 0.302883
Train Epoch: 23 [2400/10000 (24%)]	Loss: 0.306121
Train Epoch: 23 [3200/10000 (32%)]	Loss: 0.293222
Train Epoch: 23 [4000/10000 (40%)]	Loss: 0.327266
Train Epoch: 23 [4800/10000 (48%)]	Loss: 0.297151
Train Epoch: 23 [5600/10000 (56%)]	Loss: 0.305559
Train Epoch: 23 [6400/10000 (64%)]	Loss: 0.304825
Train Epoch: 23 [7200/10000 (72%)]	Loss: 0.291015
Train Epoch: 23 [8000/10000 (80%)]	Loss: 0.326437
Train Epoch: 23 [8800/10000 (88%)]	Loss: 0.290791
Train Epoch: 23 [9600/10000 (96%)]	Loss: 0.327781
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.1
Visual Event Detection Segment-level F1: 54.3
Audio-Visual Event Detection Segment-level F1: 43.5
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 53.0
Audio Event Detection Event-level F1: 44.5
Visual Event Detection Event-level F1: 51.2
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 24 [0/10000 (0%)]	Loss: 0.296199
Train Epoch: 24 [800/10000 (8%)]	Loss: 0.343313
Train Epoch: 24 [1600/10000 (16%)]	Loss: 0.343333
Train Epoch: 24 [2400/10000 (24%)]	Loss: 0.308806
Train Epoch: 24 [3200/10000 (32%)]	Loss: 0.255045
Train Epoch: 24 [4000/10000 (40%)]	Loss: 0.332219
Train Epoch: 24 [4800/10000 (48%)]	Loss: 0.308375
Train Epoch: 24 [5600/10000 (56%)]	Loss: 0.264771
Train Epoch: 24 [6400/10000 (64%)]	Loss: 0.274735
Train Epoch: 24 [7200/10000 (72%)]	Loss: 0.319957
Train Epoch: 24 [8000/10000 (80%)]	Loss: 0.308944
Train Epoch: 24 [8800/10000 (88%)]	Loss: 0.336756
Train Epoch: 24 [9600/10000 (96%)]	Loss: 0.266404
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.7
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.2
Segment-levelType@Avg. F1: 49.8
Segment-level Event@Avg. F1: 53.0
Audio Event Detection Event-level F1: 44.0
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.0
Event-level Type@Avg. F1: 44.8
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 25 [0/10000 (0%)]	Loss: 0.338169
Train Epoch: 25 [800/10000 (8%)]	Loss: 0.302073
Train Epoch: 25 [1600/10000 (16%)]	Loss: 0.368178
Train Epoch: 25 [2400/10000 (24%)]	Loss: 0.279472
Train Epoch: 25 [3200/10000 (32%)]	Loss: 0.303562
Train Epoch: 25 [4000/10000 (40%)]	Loss: 0.299933
Train Epoch: 25 [4800/10000 (48%)]	Loss: 0.290947
Train Epoch: 25 [5600/10000 (56%)]	Loss: 0.377020
Train Epoch: 25 [6400/10000 (64%)]	Loss: 0.277896
Train Epoch: 25 [7200/10000 (72%)]	Loss: 0.319089
Train Epoch: 25 [8000/10000 (80%)]	Loss: 0.342228
Train Epoch: 25 [8800/10000 (88%)]	Loss: 0.342533
Train Epoch: 25 [9600/10000 (96%)]	Loss: 0.313151
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.7
Visual Event Detection Segment-level F1: 54.7
Audio-Visual Event Detection Segment-level F1: 43.4
Segment-levelType@Avg. F1: 49.9
Segment-level Event@Avg. F1: 53.1
Audio Event Detection Event-level F1: 44.1
Visual Event Detection Event-level F1: 51.6
Audio-Visual Event Detection Event-level F1: 39.2
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.7
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 26 [0/10000 (0%)]	Loss: 0.256986
Train Epoch: 26 [800/10000 (8%)]	Loss: 0.361211
Train Epoch: 26 [1600/10000 (16%)]	Loss: 0.283494
Train Epoch: 26 [2400/10000 (24%)]	Loss: 0.295456
Train Epoch: 26 [3200/10000 (32%)]	Loss: 0.294202
Train Epoch: 26 [4000/10000 (40%)]	Loss: 0.359828
Train Epoch: 26 [4800/10000 (48%)]	Loss: 0.309891
Train Epoch: 26 [5600/10000 (56%)]	Loss: 0.296547
Train Epoch: 26 [6400/10000 (64%)]	Loss: 0.326938
Train Epoch: 26 [7200/10000 (72%)]	Loss: 0.302247
Train Epoch: 26 [8000/10000 (80%)]	Loss: 0.285107
Train Epoch: 26 [8800/10000 (88%)]	Loss: 0.315563
Train Epoch: 26 [9600/10000 (96%)]	Loss: 0.296445
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.0
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.8
Segment-levelType@Avg. F1: 50.1
Segment-level Event@Avg. F1: 53.0
Audio Event Detection Event-level F1: 44.4
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.5
Event-level Type@Avg. F1: 45.1
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 27 [0/10000 (0%)]	Loss: 0.285486
Train Epoch: 27 [800/10000 (8%)]	Loss: 0.367822
Train Epoch: 27 [1600/10000 (16%)]	Loss: 0.266383
Train Epoch: 27 [2400/10000 (24%)]	Loss: 0.296060
Train Epoch: 27 [3200/10000 (32%)]	Loss: 0.283977
Train Epoch: 27 [4000/10000 (40%)]	Loss: 0.280887
Train Epoch: 27 [4800/10000 (48%)]	Loss: 0.342839
Train Epoch: 27 [5600/10000 (56%)]	Loss: 0.319225
Train Epoch: 27 [6400/10000 (64%)]	Loss: 0.347849
Train Epoch: 27 [7200/10000 (72%)]	Loss: 0.281281
Train Epoch: 27 [8000/10000 (80%)]	Loss: 0.310671
Train Epoch: 27 [8800/10000 (88%)]	Loss: 0.289092
Train Epoch: 27 [9600/10000 (96%)]	Loss: 0.325393
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.3
Visual Event Detection Segment-level F1: 53.7
Audio-Visual Event Detection Segment-level F1: 43.2
Segment-levelType@Avg. F1: 49.7
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.6
Visual Event Detection Event-level F1: 50.6
Audio-Visual Event Detection Event-level F1: 38.9
Event-level Type@Avg. F1: 44.7
Event-level Event@Avg. F1: 45.4
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 28 [0/10000 (0%)]	Loss: 0.313894
Train Epoch: 28 [800/10000 (8%)]	Loss: 0.289749
Train Epoch: 28 [1600/10000 (16%)]	Loss: 0.296023
Train Epoch: 28 [2400/10000 (24%)]	Loss: 0.303115
Train Epoch: 28 [3200/10000 (32%)]	Loss: 0.291090
Train Epoch: 28 [4000/10000 (40%)]	Loss: 0.333388
Train Epoch: 28 [4800/10000 (48%)]	Loss: 0.329053
Train Epoch: 28 [5600/10000 (56%)]	Loss: 0.288714
Train Epoch: 28 [6400/10000 (64%)]	Loss: 0.297499
Train Epoch: 28 [7200/10000 (72%)]	Loss: 0.321285
Train Epoch: 28 [8000/10000 (80%)]	Loss: 0.270534
Train Epoch: 28 [8800/10000 (88%)]	Loss: 0.275844
Train Epoch: 28 [9600/10000 (96%)]	Loss: 0.272561
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.6
Visual Event Detection Segment-level F1: 54.4
Audio-Visual Event Detection Segment-level F1: 43.2
Segment-levelType@Avg. F1: 49.7
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.0
Visual Event Detection Event-level F1: 51.3
Audio-Visual Event Detection Event-level F1: 39.1
Event-level Type@Avg. F1: 44.8
Event-level Event@Avg. F1: 45.5
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 29 [0/10000 (0%)]	Loss: 0.317165
Train Epoch: 29 [800/10000 (8%)]	Loss: 0.327912
Train Epoch: 29 [1600/10000 (16%)]	Loss: 0.295199
Train Epoch: 29 [2400/10000 (24%)]	Loss: 0.268321
Train Epoch: 29 [3200/10000 (32%)]	Loss: 0.308428
Train Epoch: 29 [4000/10000 (40%)]	Loss: 0.271897
Train Epoch: 29 [4800/10000 (48%)]	Loss: 0.306670
Train Epoch: 29 [5600/10000 (56%)]	Loss: 0.351483
Train Epoch: 29 [6400/10000 (64%)]	Loss: 0.315526
Train Epoch: 29 [7200/10000 (72%)]	Loss: 0.249515
Train Epoch: 29 [8000/10000 (80%)]	Loss: 0.313401
Train Epoch: 29 [8800/10000 (88%)]	Loss: 0.311120
Train Epoch: 29 [9600/10000 (96%)]	Loss: 0.403497
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.7
Visual Event Detection Segment-level F1: 54.3
Audio-Visual Event Detection Segment-level F1: 43.2
Segment-levelType@Avg. F1: 49.7
Segment-level Event@Avg. F1: 52.8
Audio Event Detection Event-level F1: 44.2
Visual Event Detection Event-level F1: 51.2
Audio-Visual Event Detection Event-level F1: 39.0
Event-level Type@Avg. F1: 44.8
Event-level Event@Avg. F1: 45.5
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 30 [0/10000 (0%)]	Loss: 0.310052
Train Epoch: 30 [800/10000 (8%)]	Loss: 0.348796
Train Epoch: 30 [1600/10000 (16%)]	Loss: 0.299214
Train Epoch: 30 [2400/10000 (24%)]	Loss: 0.284690
Train Epoch: 30 [3200/10000 (32%)]	Loss: 0.311891
Train Epoch: 30 [4000/10000 (40%)]	Loss: 0.345328
Train Epoch: 30 [4800/10000 (48%)]	Loss: 0.292420
Train Epoch: 30 [5600/10000 (56%)]	Loss: 0.272641
Train Epoch: 30 [6400/10000 (64%)]	Loss: 0.327086
Train Epoch: 30 [7200/10000 (72%)]	Loss: 0.348314
Train Epoch: 30 [8000/10000 (80%)]	Loss: 0.272791
Train Epoch: 30 [8800/10000 (88%)]	Loss: 0.335146
Train Epoch: 30 [9600/10000 (96%)]	Loss: 0.349146
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.2
Audio-Visual Event Detection Segment-level F1: 43.2
Segment-levelType@Avg. F1: 49.7
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.1
Visual Event Detection Event-level F1: 51.1
Audio-Visual Event Detection Event-level F1: 38.9
Event-level Type@Avg. F1: 44.7
Event-level Event@Avg. F1: 45.4
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 31 [0/10000 (0%)]	Loss: 0.330013
Train Epoch: 31 [800/10000 (8%)]	Loss: 0.326579
Train Epoch: 31 [1600/10000 (16%)]	Loss: 0.291503
Train Epoch: 31 [2400/10000 (24%)]	Loss: 0.284738
Train Epoch: 31 [3200/10000 (32%)]	Loss: 0.336744
Train Epoch: 31 [4000/10000 (40%)]	Loss: 0.263111
Train Epoch: 31 [4800/10000 (48%)]	Loss: 0.273023
Train Epoch: 31 [5600/10000 (56%)]	Loss: 0.318164
Train Epoch: 31 [6400/10000 (64%)]	Loss: 0.313233
Train Epoch: 31 [7200/10000 (72%)]	Loss: 0.303715
Train Epoch: 31 [8000/10000 (80%)]	Loss: 0.282220
Train Epoch: 31 [8800/10000 (88%)]	Loss: 0.323208
Train Epoch: 31 [9600/10000 (96%)]	Loss: 0.342301
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.6
Audio-Visual Event Detection Segment-level F1: 43.4
Segment-levelType@Avg. F1: 49.9
Segment-level Event@Avg. F1: 53.0
Audio Event Detection Event-level F1: 44.1
Visual Event Detection Event-level F1: 51.5
Audio-Visual Event Detection Event-level F1: 39.1
Event-level Type@Avg. F1: 44.9
Event-level Event@Avg. F1: 45.5
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 32 [0/10000 (0%)]	Loss: 0.298309
Train Epoch: 32 [800/10000 (8%)]	Loss: 0.351827
Train Epoch: 32 [1600/10000 (16%)]	Loss: 0.327078
Train Epoch: 32 [2400/10000 (24%)]	Loss: 0.315280
Train Epoch: 32 [3200/10000 (32%)]	Loss: 0.326284
Train Epoch: 32 [4000/10000 (40%)]	Loss: 0.274766
Train Epoch: 32 [4800/10000 (48%)]	Loss: 0.299167
Train Epoch: 32 [5600/10000 (56%)]	Loss: 0.303742
Train Epoch: 32 [6400/10000 (64%)]	Loss: 0.283512
Train Epoch: 32 [7200/10000 (72%)]	Loss: 0.305029
Train Epoch: 32 [8000/10000 (80%)]	Loss: 0.318458
Train Epoch: 32 [8800/10000 (88%)]	Loss: 0.291643
Train Epoch: 32 [9600/10000 (96%)]	Loss: 0.352281
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.8
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 53.1
Audio Event Detection Event-level F1: 44.1
Visual Event Detection Event-level F1: 51.7
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 33 [0/10000 (0%)]	Loss: 0.321007
Train Epoch: 33 [800/10000 (8%)]	Loss: 0.295136
Train Epoch: 33 [1600/10000 (16%)]	Loss: 0.337402
Train Epoch: 33 [2400/10000 (24%)]	Loss: 0.344669
Train Epoch: 33 [3200/10000 (32%)]	Loss: 0.313241
Train Epoch: 33 [4000/10000 (40%)]	Loss: 0.296624
Train Epoch: 33 [4800/10000 (48%)]	Loss: 0.280997
Train Epoch: 33 [5600/10000 (56%)]	Loss: 0.332266
Train Epoch: 33 [6400/10000 (64%)]	Loss: 0.344004
Train Epoch: 33 [7200/10000 (72%)]	Loss: 0.324317
Train Epoch: 33 [8000/10000 (80%)]	Loss: 0.294956
Train Epoch: 33 [8800/10000 (88%)]	Loss: 0.323120
Train Epoch: 33 [9600/10000 (96%)]	Loss: 0.346282
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.6
Audio-Visual Event Detection Segment-level F1: 43.4
Segment-levelType@Avg. F1: 49.9
Segment-level Event@Avg. F1: 53.0
Audio Event Detection Event-level F1: 44.1
Visual Event Detection Event-level F1: 51.5
Audio-Visual Event Detection Event-level F1: 39.1
Event-level Type@Avg. F1: 44.9
Event-level Event@Avg. F1: 45.7
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 34 [0/10000 (0%)]	Loss: 0.325735
Train Epoch: 34 [800/10000 (8%)]	Loss: 0.337141
Train Epoch: 34 [1600/10000 (16%)]	Loss: 0.263143
Train Epoch: 34 [2400/10000 (24%)]	Loss: 0.313369
Train Epoch: 34 [3200/10000 (32%)]	Loss: 0.285904
Train Epoch: 34 [4000/10000 (40%)]	Loss: 0.274086
Train Epoch: 34 [4800/10000 (48%)]	Loss: 0.308701
Train Epoch: 34 [5600/10000 (56%)]	Loss: 0.282702
Train Epoch: 34 [6400/10000 (64%)]	Loss: 0.306356
Train Epoch: 34 [7200/10000 (72%)]	Loss: 0.324127
Train Epoch: 34 [8000/10000 (80%)]	Loss: 0.308211
Train Epoch: 34 [8800/10000 (88%)]	Loss: 0.296905
Train Epoch: 34 [9600/10000 (96%)]	Loss: 0.326058
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.9
Visual Event Detection Segment-level F1: 54.4
Audio-Visual Event Detection Segment-level F1: 43.7
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.4
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 35 [0/10000 (0%)]	Loss: 0.312829
Train Epoch: 35 [800/10000 (8%)]	Loss: 0.279296
Train Epoch: 35 [1600/10000 (16%)]	Loss: 0.292237
Train Epoch: 35 [2400/10000 (24%)]	Loss: 0.313545
Train Epoch: 35 [3200/10000 (32%)]	Loss: 0.288377
Train Epoch: 35 [4000/10000 (40%)]	Loss: 0.333008
Train Epoch: 35 [4800/10000 (48%)]	Loss: 0.319226
Train Epoch: 35 [5600/10000 (56%)]	Loss: 0.317696
Train Epoch: 35 [6400/10000 (64%)]	Loss: 0.330822
Train Epoch: 35 [7200/10000 (72%)]	Loss: 0.266747
Train Epoch: 35 [8000/10000 (80%)]	Loss: 0.286195
Train Epoch: 35 [8800/10000 (88%)]	Loss: 0.311810
Train Epoch: 35 [9600/10000 (96%)]	Loss: 0.294965
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 49.9
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.2
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.2
Event-level Type@Avg. F1: 44.9
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 36 [0/10000 (0%)]	Loss: 0.309644
Train Epoch: 36 [800/10000 (8%)]	Loss: 0.330586
Train Epoch: 36 [1600/10000 (16%)]	Loss: 0.297555
Train Epoch: 36 [2400/10000 (24%)]	Loss: 0.316210
Train Epoch: 36 [3200/10000 (32%)]	Loss: 0.381612
Train Epoch: 36 [4000/10000 (40%)]	Loss: 0.304058
Train Epoch: 36 [4800/10000 (48%)]	Loss: 0.315846
Train Epoch: 36 [5600/10000 (56%)]	Loss: 0.297900
Train Epoch: 36 [6400/10000 (64%)]	Loss: 0.283649
Train Epoch: 36 [7200/10000 (72%)]	Loss: 0.319287
Train Epoch: 36 [8000/10000 (80%)]	Loss: 0.300315
Train Epoch: 36 [8800/10000 (88%)]	Loss: 0.345858
Train Epoch: 36 [9600/10000 (96%)]	Loss: 0.299726
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.9
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.4
Segment-levelType@Avg. F1: 49.9
Segment-level Event@Avg. F1: 53.0
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.2
Event-level Type@Avg. F1: 44.9
Event-level Event@Avg. F1: 45.7
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 37 [0/10000 (0%)]	Loss: 0.350206
Train Epoch: 37 [800/10000 (8%)]	Loss: 0.288908
Train Epoch: 37 [1600/10000 (16%)]	Loss: 0.290190
Train Epoch: 37 [2400/10000 (24%)]	Loss: 0.371627
Train Epoch: 37 [3200/10000 (32%)]	Loss: 0.270592
Train Epoch: 37 [4000/10000 (40%)]	Loss: 0.351270
Train Epoch: 37 [4800/10000 (48%)]	Loss: 0.330333
Train Epoch: 37 [5600/10000 (56%)]	Loss: 0.271040
Train Epoch: 37 [6400/10000 (64%)]	Loss: 0.326721
Train Epoch: 37 [7200/10000 (72%)]	Loss: 0.307134
Train Epoch: 37 [8000/10000 (80%)]	Loss: 0.365667
Train Epoch: 37 [8800/10000 (88%)]	Loss: 0.302446
Train Epoch: 37 [9600/10000 (96%)]	Loss: 0.267284
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.9
Visual Event Detection Segment-level F1: 54.6
Audio-Visual Event Detection Segment-level F1: 43.7
Segment-levelType@Avg. F1: 50.1
Segment-level Event@Avg. F1: 53.1
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.5
Audio-Visual Event Detection Event-level F1: 39.5
Event-level Type@Avg. F1: 45.1
Event-level Event@Avg. F1: 45.7
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 38 [0/10000 (0%)]	Loss: 0.318149
Train Epoch: 38 [800/10000 (8%)]	Loss: 0.291282
Train Epoch: 38 [1600/10000 (16%)]	Loss: 0.327807
Train Epoch: 38 [2400/10000 (24%)]	Loss: 0.339413
Train Epoch: 38 [3200/10000 (32%)]	Loss: 0.340604
Train Epoch: 38 [4000/10000 (40%)]	Loss: 0.331147
Train Epoch: 38 [4800/10000 (48%)]	Loss: 0.351535
Train Epoch: 38 [5600/10000 (56%)]	Loss: 0.267410
Train Epoch: 38 [6400/10000 (64%)]	Loss: 0.318916
Train Epoch: 38 [7200/10000 (72%)]	Loss: 0.325241
Train Epoch: 38 [8000/10000 (80%)]	Loss: 0.331899
Train Epoch: 38 [8800/10000 (88%)]	Loss: 0.329774
Train Epoch: 38 [9600/10000 (96%)]	Loss: 0.288353
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.3
Audio-Visual Event Detection Segment-level F1: 43.4
Segment-levelType@Avg. F1: 49.9
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.2
Audio-Visual Event Detection Event-level F1: 39.2
Event-level Type@Avg. F1: 44.9
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 39 [0/10000 (0%)]	Loss: 0.257798
Train Epoch: 39 [800/10000 (8%)]	Loss: 0.301014
Train Epoch: 39 [1600/10000 (16%)]	Loss: 0.338550
Train Epoch: 39 [2400/10000 (24%)]	Loss: 0.314812
Train Epoch: 39 [3200/10000 (32%)]	Loss: 0.303465
Train Epoch: 39 [4000/10000 (40%)]	Loss: 0.283658
Train Epoch: 39 [4800/10000 (48%)]	Loss: 0.377249
Train Epoch: 39 [5600/10000 (56%)]	Loss: 0.297197
Train Epoch: 39 [6400/10000 (64%)]	Loss: 0.329402
Train Epoch: 39 [7200/10000 (72%)]	Loss: 0.317921
Train Epoch: 39 [8000/10000 (80%)]	Loss: 0.266163
Train Epoch: 39 [8800/10000 (88%)]	Loss: 0.290594
Train Epoch: 39 [9600/10000 (96%)]	Loss: 0.330867
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.9
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.7
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.5
Event-level Type@Avg. F1: 45.1
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 40 [0/10000 (0%)]	Loss: 0.332699
Train Epoch: 40 [800/10000 (8%)]	Loss: 0.356605
Train Epoch: 40 [1600/10000 (16%)]	Loss: 0.291945
Train Epoch: 40 [2400/10000 (24%)]	Loss: 0.328491
Train Epoch: 40 [3200/10000 (32%)]	Loss: 0.309887
Train Epoch: 40 [4000/10000 (40%)]	Loss: 0.290645
Train Epoch: 40 [4800/10000 (48%)]	Loss: 0.269508
Train Epoch: 40 [5600/10000 (56%)]	Loss: 0.323056
Train Epoch: 40 [6400/10000 (64%)]	Loss: 0.333100
Train Epoch: 40 [7200/10000 (72%)]	Loss: 0.295107
Train Epoch: 40 [8000/10000 (80%)]	Loss: 0.280596
Train Epoch: 40 [8800/10000 (88%)]	Loss: 0.298176
Train Epoch: 40 [9600/10000 (96%)]	Loss: 0.292820
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 41 [0/10000 (0%)]	Loss: 0.356708
Train Epoch: 41 [800/10000 (8%)]	Loss: 0.302360
Train Epoch: 41 [1600/10000 (16%)]	Loss: 0.303877
Train Epoch: 41 [2400/10000 (24%)]	Loss: 0.341938
Train Epoch: 41 [3200/10000 (32%)]	Loss: 0.303616
Train Epoch: 41 [4000/10000 (40%)]	Loss: 0.303223
Train Epoch: 41 [4800/10000 (48%)]	Loss: 0.360835
Train Epoch: 41 [5600/10000 (56%)]	Loss: 0.287193
Train Epoch: 41 [6400/10000 (64%)]	Loss: 0.298250
Train Epoch: 41 [7200/10000 (72%)]	Loss: 0.334099
Train Epoch: 41 [8000/10000 (80%)]	Loss: 0.306377
Train Epoch: 41 [8800/10000 (88%)]	Loss: 0.303206
Train Epoch: 41 [9600/10000 (96%)]	Loss: 0.289684
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 42 [0/10000 (0%)]	Loss: 0.293861
Train Epoch: 42 [800/10000 (8%)]	Loss: 0.333967
Train Epoch: 42 [1600/10000 (16%)]	Loss: 0.315228
Train Epoch: 42 [2400/10000 (24%)]	Loss: 0.327556
Train Epoch: 42 [3200/10000 (32%)]	Loss: 0.326577
Train Epoch: 42 [4000/10000 (40%)]	Loss: 0.311727
Train Epoch: 42 [4800/10000 (48%)]	Loss: 0.319342
Train Epoch: 42 [5600/10000 (56%)]	Loss: 0.293082
Train Epoch: 42 [6400/10000 (64%)]	Loss: 0.289350
Train Epoch: 42 [7200/10000 (72%)]	Loss: 0.359656
Train Epoch: 42 [8000/10000 (80%)]	Loss: 0.313104
Train Epoch: 42 [8800/10000 (88%)]	Loss: 0.333576
Train Epoch: 42 [9600/10000 (96%)]	Loss: 0.321734
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 43 [0/10000 (0%)]	Loss: 0.291003
Train Epoch: 43 [800/10000 (8%)]	Loss: 0.307252
Train Epoch: 43 [1600/10000 (16%)]	Loss: 0.324413
Train Epoch: 43 [2400/10000 (24%)]	Loss: 0.337587
Train Epoch: 43 [3200/10000 (32%)]	Loss: 0.340966
Train Epoch: 43 [4000/10000 (40%)]	Loss: 0.304529
Train Epoch: 43 [4800/10000 (48%)]	Loss: 0.313433
Train Epoch: 43 [5600/10000 (56%)]	Loss: 0.297835
Train Epoch: 43 [6400/10000 (64%)]	Loss: 0.326522
Train Epoch: 43 [7200/10000 (72%)]	Loss: 0.311622
Train Epoch: 43 [8000/10000 (80%)]	Loss: 0.295211
Train Epoch: 43 [8800/10000 (88%)]	Loss: 0.284492
Train Epoch: 43 [9600/10000 (96%)]	Loss: 0.286607
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 44 [0/10000 (0%)]	Loss: 0.320884
Train Epoch: 44 [800/10000 (8%)]	Loss: 0.276082
Train Epoch: 44 [1600/10000 (16%)]	Loss: 0.338666
Train Epoch: 44 [2400/10000 (24%)]	Loss: 0.283820
Train Epoch: 44 [3200/10000 (32%)]	Loss: 0.331258
Train Epoch: 44 [4000/10000 (40%)]	Loss: 0.327194
Train Epoch: 44 [4800/10000 (48%)]	Loss: 0.292391
Train Epoch: 44 [5600/10000 (56%)]	Loss: 0.285149
Train Epoch: 44 [6400/10000 (64%)]	Loss: 0.360332
Train Epoch: 44 [7200/10000 (72%)]	Loss: 0.342871
Train Epoch: 44 [8000/10000 (80%)]	Loss: 0.365862
Train Epoch: 44 [8800/10000 (88%)]	Loss: 0.303421
Train Epoch: 44 [9600/10000 (96%)]	Loss: 0.314734
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 45 [0/10000 (0%)]	Loss: 0.309557
Train Epoch: 45 [800/10000 (8%)]	Loss: 0.312580
Train Epoch: 45 [1600/10000 (16%)]	Loss: 0.313414
Train Epoch: 45 [2400/10000 (24%)]	Loss: 0.347548
Train Epoch: 45 [3200/10000 (32%)]	Loss: 0.326133
Train Epoch: 45 [4000/10000 (40%)]	Loss: 0.316812
Train Epoch: 45 [4800/10000 (48%)]	Loss: 0.349285
Train Epoch: 45 [5600/10000 (56%)]	Loss: 0.302799
Train Epoch: 45 [6400/10000 (64%)]	Loss: 0.293417
Train Epoch: 45 [7200/10000 (72%)]	Loss: 0.326621
Train Epoch: 45 [8000/10000 (80%)]	Loss: 0.295743
Train Epoch: 45 [8800/10000 (88%)]	Loss: 0.291761
Train Epoch: 45 [9600/10000 (96%)]	Loss: 0.311613
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 46 [0/10000 (0%)]	Loss: 0.298133
Train Epoch: 46 [800/10000 (8%)]	Loss: 0.274884
Train Epoch: 46 [1600/10000 (16%)]	Loss: 0.304535
Train Epoch: 46 [2400/10000 (24%)]	Loss: 0.305976
Train Epoch: 46 [3200/10000 (32%)]	Loss: 0.310217
Train Epoch: 46 [4000/10000 (40%)]	Loss: 0.308882
Train Epoch: 46 [4800/10000 (48%)]	Loss: 0.279274
Train Epoch: 46 [5600/10000 (56%)]	Loss: 0.305233
Train Epoch: 46 [6400/10000 (64%)]	Loss: 0.322565
Train Epoch: 46 [7200/10000 (72%)]	Loss: 0.266189
Train Epoch: 46 [8000/10000 (80%)]	Loss: 0.325578
Train Epoch: 46 [8800/10000 (88%)]	Loss: 0.273456
Train Epoch: 46 [9600/10000 (96%)]	Loss: 0.297410
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 47 [0/10000 (0%)]	Loss: 0.367534
Train Epoch: 47 [800/10000 (8%)]	Loss: 0.334633
Train Epoch: 47 [1600/10000 (16%)]	Loss: 0.325947
Train Epoch: 47 [2400/10000 (24%)]	Loss: 0.335276
Train Epoch: 47 [3200/10000 (32%)]	Loss: 0.314705
Train Epoch: 47 [4000/10000 (40%)]	Loss: 0.310617
Train Epoch: 47 [4800/10000 (48%)]	Loss: 0.309808
Train Epoch: 47 [5600/10000 (56%)]	Loss: 0.299804
Train Epoch: 47 [6400/10000 (64%)]	Loss: 0.316813
Train Epoch: 47 [7200/10000 (72%)]	Loss: 0.301076
Train Epoch: 47 [8000/10000 (80%)]	Loss: 0.309846
Train Epoch: 47 [8800/10000 (88%)]	Loss: 0.291637
Train Epoch: 47 [9600/10000 (96%)]	Loss: 0.325366
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 48 [0/10000 (0%)]	Loss: 0.338788
Train Epoch: 48 [800/10000 (8%)]	Loss: 0.297039
Train Epoch: 48 [1600/10000 (16%)]	Loss: 0.306297
Train Epoch: 48 [2400/10000 (24%)]	Loss: 0.356383
Train Epoch: 48 [3200/10000 (32%)]	Loss: 0.296658
Train Epoch: 48 [4000/10000 (40%)]	Loss: 0.317022
Train Epoch: 48 [4800/10000 (48%)]	Loss: 0.297706
Train Epoch: 48 [5600/10000 (56%)]	Loss: 0.286573
Train Epoch: 48 [6400/10000 (64%)]	Loss: 0.295229
Train Epoch: 48 [7200/10000 (72%)]	Loss: 0.279016
Train Epoch: 48 [8000/10000 (80%)]	Loss: 0.349680
Train Epoch: 48 [8800/10000 (88%)]	Loss: 0.266094
Train Epoch: 48 [9600/10000 (96%)]	Loss: 0.291515
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 49 [0/10000 (0%)]	Loss: 0.352026
Train Epoch: 49 [800/10000 (8%)]	Loss: 0.284098
Train Epoch: 49 [1600/10000 (16%)]	Loss: 0.311940
Train Epoch: 49 [2400/10000 (24%)]	Loss: 0.296906
Train Epoch: 49 [3200/10000 (32%)]	Loss: 0.307052
Train Epoch: 49 [4000/10000 (40%)]	Loss: 0.271688
Train Epoch: 49 [4800/10000 (48%)]	Loss: 0.327675
Train Epoch: 49 [5600/10000 (56%)]	Loss: 0.319155
Train Epoch: 49 [6400/10000 (64%)]	Loss: 0.309208
Train Epoch: 49 [7200/10000 (72%)]	Loss: 0.299051
Train Epoch: 49 [8000/10000 (80%)]	Loss: 0.322073
Train Epoch: 49 [8800/10000 (88%)]	Loss: 0.310901
Train Epoch: 49 [9600/10000 (96%)]	Loss: 0.272814
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 50 [0/10000 (0%)]	Loss: 0.338036
Train Epoch: 50 [800/10000 (8%)]	Loss: 0.355526
Train Epoch: 50 [1600/10000 (16%)]	Loss: 0.346129
Train Epoch: 50 [2400/10000 (24%)]	Loss: 0.325064
Train Epoch: 50 [3200/10000 (32%)]	Loss: 0.302176
Train Epoch: 50 [4000/10000 (40%)]	Loss: 0.305187
Train Epoch: 50 [4800/10000 (48%)]	Loss: 0.295228
Train Epoch: 50 [5600/10000 (56%)]	Loss: 0.337485
Train Epoch: 50 [6400/10000 (64%)]	Loss: 0.298394
Train Epoch: 50 [7200/10000 (72%)]	Loss: 0.315976
Train Epoch: 50 [8000/10000 (80%)]	Loss: 0.383453
Train Epoch: 50 [8800/10000 (88%)]	Loss: 0.314484
Train Epoch: 50 [9600/10000 (96%)]	Loss: 0.286699
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 51 [0/10000 (0%)]	Loss: 0.315562
Train Epoch: 51 [800/10000 (8%)]	Loss: 0.329273
Train Epoch: 51 [1600/10000 (16%)]	Loss: 0.304298
Train Epoch: 51 [2400/10000 (24%)]	Loss: 0.314668
Train Epoch: 51 [3200/10000 (32%)]	Loss: 0.298704
Train Epoch: 51 [4000/10000 (40%)]	Loss: 0.414968
Train Epoch: 51 [4800/10000 (48%)]	Loss: 0.315469
Train Epoch: 51 [5600/10000 (56%)]	Loss: 0.260383
Train Epoch: 51 [6400/10000 (64%)]	Loss: 0.319428
Train Epoch: 51 [7200/10000 (72%)]	Loss: 0.311788
Train Epoch: 51 [8000/10000 (80%)]	Loss: 0.332284
Train Epoch: 51 [8800/10000 (88%)]	Loss: 0.295956
Train Epoch: 51 [9600/10000 (96%)]	Loss: 0.293313
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 52 [0/10000 (0%)]	Loss: 0.278510
Train Epoch: 52 [800/10000 (8%)]	Loss: 0.310527
Train Epoch: 52 [1600/10000 (16%)]	Loss: 0.280142
Train Epoch: 52 [2400/10000 (24%)]	Loss: 0.294939
Train Epoch: 52 [3200/10000 (32%)]	Loss: 0.284603
Train Epoch: 52 [4000/10000 (40%)]	Loss: 0.281263
Train Epoch: 52 [4800/10000 (48%)]	Loss: 0.301245
Train Epoch: 52 [5600/10000 (56%)]	Loss: 0.330220
Train Epoch: 52 [6400/10000 (64%)]	Loss: 0.280376
Train Epoch: 52 [7200/10000 (72%)]	Loss: 0.272958
Train Epoch: 52 [8000/10000 (80%)]	Loss: 0.298756
Train Epoch: 52 [8800/10000 (88%)]	Loss: 0.299499
Train Epoch: 52 [9600/10000 (96%)]	Loss: 0.305138
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 53 [0/10000 (0%)]	Loss: 0.306768
Train Epoch: 53 [800/10000 (8%)]	Loss: 0.337701
Train Epoch: 53 [1600/10000 (16%)]	Loss: 0.279109
Train Epoch: 53 [2400/10000 (24%)]	Loss: 0.284454
Train Epoch: 53 [3200/10000 (32%)]	Loss: 0.298063
Train Epoch: 53 [4000/10000 (40%)]	Loss: 0.347434
Train Epoch: 53 [4800/10000 (48%)]	Loss: 0.306085
Train Epoch: 53 [5600/10000 (56%)]	Loss: 0.317239
Train Epoch: 53 [6400/10000 (64%)]	Loss: 0.284229
Train Epoch: 53 [7200/10000 (72%)]	Loss: 0.282916
Train Epoch: 53 [8000/10000 (80%)]	Loss: 0.311246
Train Epoch: 53 [8800/10000 (88%)]	Loss: 0.279342
Train Epoch: 53 [9600/10000 (96%)]	Loss: 0.295424
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 54 [0/10000 (0%)]	Loss: 0.268988
Train Epoch: 54 [800/10000 (8%)]	Loss: 0.308515
Train Epoch: 54 [1600/10000 (16%)]	Loss: 0.303108
Train Epoch: 54 [2400/10000 (24%)]	Loss: 0.305626
Train Epoch: 54 [3200/10000 (32%)]	Loss: 0.298828
Train Epoch: 54 [4000/10000 (40%)]	Loss: 0.330021
Train Epoch: 54 [4800/10000 (48%)]	Loss: 0.318680
Train Epoch: 54 [5600/10000 (56%)]	Loss: 0.318536
Train Epoch: 54 [6400/10000 (64%)]	Loss: 0.300317
Train Epoch: 54 [7200/10000 (72%)]	Loss: 0.348762
Train Epoch: 54 [8000/10000 (80%)]	Loss: 0.299047
Train Epoch: 54 [8800/10000 (88%)]	Loss: 0.355357
Train Epoch: 54 [9600/10000 (96%)]	Loss: 0.361866
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 55 [0/10000 (0%)]	Loss: 0.315746
Train Epoch: 55 [800/10000 (8%)]	Loss: 0.286459
Train Epoch: 55 [1600/10000 (16%)]	Loss: 0.314784
Train Epoch: 55 [2400/10000 (24%)]	Loss: 0.300116
Train Epoch: 55 [3200/10000 (32%)]	Loss: 0.365893
Train Epoch: 55 [4000/10000 (40%)]	Loss: 0.273734
Train Epoch: 55 [4800/10000 (48%)]	Loss: 0.300522
Train Epoch: 55 [5600/10000 (56%)]	Loss: 0.299076
Train Epoch: 55 [6400/10000 (64%)]	Loss: 0.337379
Train Epoch: 55 [7200/10000 (72%)]	Loss: 0.322537
Train Epoch: 55 [8000/10000 (80%)]	Loss: 0.332145
Train Epoch: 55 [8800/10000 (88%)]	Loss: 0.282319
Train Epoch: 55 [9600/10000 (96%)]	Loss: 0.307312
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 56 [0/10000 (0%)]	Loss: 0.277332
Train Epoch: 56 [800/10000 (8%)]	Loss: 0.266764
Train Epoch: 56 [1600/10000 (16%)]	Loss: 0.304060
Train Epoch: 56 [2400/10000 (24%)]	Loss: 0.333817
Train Epoch: 56 [3200/10000 (32%)]	Loss: 0.300035
Train Epoch: 56 [4000/10000 (40%)]	Loss: 0.320329
Train Epoch: 56 [4800/10000 (48%)]	Loss: 0.292932
Train Epoch: 56 [5600/10000 (56%)]	Loss: 0.281238
Train Epoch: 56 [6400/10000 (64%)]	Loss: 0.319645
Train Epoch: 56 [7200/10000 (72%)]	Loss: 0.322845
Train Epoch: 56 [8000/10000 (80%)]	Loss: 0.288510
Train Epoch: 56 [8800/10000 (88%)]	Loss: 0.283133
Train Epoch: 56 [9600/10000 (96%)]	Loss: 0.293556
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 57 [0/10000 (0%)]	Loss: 0.281701
Train Epoch: 57 [800/10000 (8%)]	Loss: 0.331687
Train Epoch: 57 [1600/10000 (16%)]	Loss: 0.368464
Train Epoch: 57 [2400/10000 (24%)]	Loss: 0.314401
Train Epoch: 57 [3200/10000 (32%)]	Loss: 0.291019
Train Epoch: 57 [4000/10000 (40%)]	Loss: 0.303196
Train Epoch: 57 [4800/10000 (48%)]	Loss: 0.306874
Train Epoch: 57 [5600/10000 (56%)]	Loss: 0.309147
Train Epoch: 57 [6400/10000 (64%)]	Loss: 0.337623
Train Epoch: 57 [7200/10000 (72%)]	Loss: 0.315692
Train Epoch: 57 [8000/10000 (80%)]	Loss: 0.305233
Train Epoch: 57 [8800/10000 (88%)]	Loss: 0.299219
Train Epoch: 57 [9600/10000 (96%)]	Loss: 0.308717
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 58 [0/10000 (0%)]	Loss: 0.298051
Train Epoch: 58 [800/10000 (8%)]	Loss: 0.327004
Train Epoch: 58 [1600/10000 (16%)]	Loss: 0.351709
Train Epoch: 58 [2400/10000 (24%)]	Loss: 0.305542
Train Epoch: 58 [3200/10000 (32%)]	Loss: 0.329624
Train Epoch: 58 [4000/10000 (40%)]	Loss: 0.291957
Train Epoch: 58 [4800/10000 (48%)]	Loss: 0.295662
Train Epoch: 58 [5600/10000 (56%)]	Loss: 0.297067
Train Epoch: 58 [6400/10000 (64%)]	Loss: 0.279039
Train Epoch: 58 [7200/10000 (72%)]	Loss: 0.291447
Train Epoch: 58 [8000/10000 (80%)]	Loss: 0.305335
Train Epoch: 58 [8800/10000 (88%)]	Loss: 0.300440
Train Epoch: 58 [9600/10000 (96%)]	Loss: 0.325637
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 59 [0/10000 (0%)]	Loss: 0.313218
Train Epoch: 59 [800/10000 (8%)]	Loss: 0.313959
Train Epoch: 59 [1600/10000 (16%)]	Loss: 0.312040
Train Epoch: 59 [2400/10000 (24%)]	Loss: 0.334411
Train Epoch: 59 [3200/10000 (32%)]	Loss: 0.299949
Train Epoch: 59 [4000/10000 (40%)]	Loss: 0.306665
Train Epoch: 59 [4800/10000 (48%)]	Loss: 0.326370
Train Epoch: 59 [5600/10000 (56%)]	Loss: 0.284970
Train Epoch: 59 [6400/10000 (64%)]	Loss: 0.313685
Train Epoch: 59 [7200/10000 (72%)]	Loss: 0.307516
Train Epoch: 59 [8000/10000 (80%)]	Loss: 0.311869
Train Epoch: 59 [8800/10000 (88%)]	Loss: 0.317639
Train Epoch: 59 [9600/10000 (96%)]	Loss: 0.278665
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 60 [0/10000 (0%)]	Loss: 0.328122
Train Epoch: 60 [800/10000 (8%)]	Loss: 0.259617
Train Epoch: 60 [1600/10000 (16%)]	Loss: 0.289940
Train Epoch: 60 [2400/10000 (24%)]	Loss: 0.310755
Train Epoch: 60 [3200/10000 (32%)]	Loss: 0.273975
Train Epoch: 60 [4000/10000 (40%)]	Loss: 0.355135
Train Epoch: 60 [4800/10000 (48%)]	Loss: 0.308109
Train Epoch: 60 [5600/10000 (56%)]	Loss: 0.330703
Train Epoch: 60 [6400/10000 (64%)]	Loss: 0.285336
Train Epoch: 60 [7200/10000 (72%)]	Loss: 0.320515
Train Epoch: 60 [8000/10000 (80%)]	Loss: 0.257949
Train Epoch: 60 [8800/10000 (88%)]	Loss: 0.305652
Train Epoch: 60 [9600/10000 (96%)]	Loss: 0.327760
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 61 [0/10000 (0%)]	Loss: 0.318026
Train Epoch: 61 [800/10000 (8%)]	Loss: 0.345985
Train Epoch: 61 [1600/10000 (16%)]	Loss: 0.297585
Train Epoch: 61 [2400/10000 (24%)]	Loss: 0.288533
Train Epoch: 61 [3200/10000 (32%)]	Loss: 0.315908
Train Epoch: 61 [4000/10000 (40%)]	Loss: 0.330578
Train Epoch: 61 [4800/10000 (48%)]	Loss: 0.321413
Train Epoch: 61 [5600/10000 (56%)]	Loss: 0.349739
Train Epoch: 61 [6400/10000 (64%)]	Loss: 0.295656
Train Epoch: 61 [7200/10000 (72%)]	Loss: 0.290478
Train Epoch: 61 [8000/10000 (80%)]	Loss: 0.305487
Train Epoch: 61 [8800/10000 (88%)]	Loss: 0.278582
Train Epoch: 61 [9600/10000 (96%)]	Loss: 0.321056
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 62 [0/10000 (0%)]	Loss: 0.285701
Train Epoch: 62 [800/10000 (8%)]	Loss: 0.312893
Train Epoch: 62 [1600/10000 (16%)]	Loss: 0.341209
Train Epoch: 62 [2400/10000 (24%)]	Loss: 0.303537
Train Epoch: 62 [3200/10000 (32%)]	Loss: 0.272343
Train Epoch: 62 [4000/10000 (40%)]	Loss: 0.289924
Train Epoch: 62 [4800/10000 (48%)]	Loss: 0.317699
Train Epoch: 62 [5600/10000 (56%)]	Loss: 0.339406
Train Epoch: 62 [6400/10000 (64%)]	Loss: 0.266102
Train Epoch: 62 [7200/10000 (72%)]	Loss: 0.302588
Train Epoch: 62 [8000/10000 (80%)]	Loss: 0.315115
Train Epoch: 62 [8800/10000 (88%)]	Loss: 0.277825
Train Epoch: 62 [9600/10000 (96%)]	Loss: 0.317644
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 63 [0/10000 (0%)]	Loss: 0.315083
Train Epoch: 63 [800/10000 (8%)]	Loss: 0.295708
Train Epoch: 63 [1600/10000 (16%)]	Loss: 0.323166
Train Epoch: 63 [2400/10000 (24%)]	Loss: 0.305249
Train Epoch: 63 [3200/10000 (32%)]	Loss: 0.314040
Train Epoch: 63 [4000/10000 (40%)]	Loss: 0.311467
Train Epoch: 63 [4800/10000 (48%)]	Loss: 0.258650
Train Epoch: 63 [5600/10000 (56%)]	Loss: 0.304735
Train Epoch: 63 [6400/10000 (64%)]	Loss: 0.306521
Train Epoch: 63 [7200/10000 (72%)]	Loss: 0.344102
Train Epoch: 63 [8000/10000 (80%)]	Loss: 0.302766
Train Epoch: 63 [8800/10000 (88%)]	Loss: 0.300720
Train Epoch: 63 [9600/10000 (96%)]	Loss: 0.271296
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 64 [0/10000 (0%)]	Loss: 0.323877
Train Epoch: 64 [800/10000 (8%)]	Loss: 0.309158
Train Epoch: 64 [1600/10000 (16%)]	Loss: 0.317201
Train Epoch: 64 [2400/10000 (24%)]	Loss: 0.298118
Train Epoch: 64 [3200/10000 (32%)]	Loss: 0.295497
Train Epoch: 64 [4000/10000 (40%)]	Loss: 0.331917
Train Epoch: 64 [4800/10000 (48%)]	Loss: 0.341996
Train Epoch: 64 [5600/10000 (56%)]	Loss: 0.277277
Train Epoch: 64 [6400/10000 (64%)]	Loss: 0.325310
Train Epoch: 64 [7200/10000 (72%)]	Loss: 0.299663
Train Epoch: 64 [8000/10000 (80%)]	Loss: 0.337386
Train Epoch: 64 [8800/10000 (88%)]	Loss: 0.325102
Train Epoch: 64 [9600/10000 (96%)]	Loss: 0.340312
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 65 [0/10000 (0%)]	Loss: 0.331284
Train Epoch: 65 [800/10000 (8%)]	Loss: 0.298787
Train Epoch: 65 [1600/10000 (16%)]	Loss: 0.339854
Train Epoch: 65 [2400/10000 (24%)]	Loss: 0.296855
Train Epoch: 65 [3200/10000 (32%)]	Loss: 0.295460
Train Epoch: 65 [4000/10000 (40%)]	Loss: 0.279281
Train Epoch: 65 [4800/10000 (48%)]	Loss: 0.318710
Train Epoch: 65 [5600/10000 (56%)]	Loss: 0.329753
Train Epoch: 65 [6400/10000 (64%)]	Loss: 0.328135
Train Epoch: 65 [7200/10000 (72%)]	Loss: 0.397038
Train Epoch: 65 [8000/10000 (80%)]	Loss: 0.278828
Train Epoch: 65 [8800/10000 (88%)]	Loss: 0.295784
Train Epoch: 65 [9600/10000 (96%)]	Loss: 0.291215
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 66 [0/10000 (0%)]	Loss: 0.290629
Train Epoch: 66 [800/10000 (8%)]	Loss: 0.297049
Train Epoch: 66 [1600/10000 (16%)]	Loss: 0.304713
Train Epoch: 66 [2400/10000 (24%)]	Loss: 0.278934
Train Epoch: 66 [3200/10000 (32%)]	Loss: 0.293546
Train Epoch: 66 [4000/10000 (40%)]	Loss: 0.329003
Train Epoch: 66 [4800/10000 (48%)]	Loss: 0.307942
Train Epoch: 66 [5600/10000 (56%)]	Loss: 0.339941
Train Epoch: 66 [6400/10000 (64%)]	Loss: 0.296202
Train Epoch: 66 [7200/10000 (72%)]	Loss: 0.335096
Train Epoch: 66 [8000/10000 (80%)]	Loss: 0.275805
Train Epoch: 66 [8800/10000 (88%)]	Loss: 0.319951
Train Epoch: 66 [9600/10000 (96%)]	Loss: 0.271678
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 67 [0/10000 (0%)]	Loss: 0.298560
Train Epoch: 67 [800/10000 (8%)]	Loss: 0.308408
Train Epoch: 67 [1600/10000 (16%)]	Loss: 0.272871
Train Epoch: 67 [2400/10000 (24%)]	Loss: 0.310983
Train Epoch: 67 [3200/10000 (32%)]	Loss: 0.289923
Train Epoch: 67 [4000/10000 (40%)]	Loss: 0.272775
Train Epoch: 67 [4800/10000 (48%)]	Loss: 0.325246
Train Epoch: 67 [5600/10000 (56%)]	Loss: 0.357186
Train Epoch: 67 [6400/10000 (64%)]	Loss: 0.283364
Train Epoch: 67 [7200/10000 (72%)]	Loss: 0.294326
Train Epoch: 67 [8000/10000 (80%)]	Loss: 0.277034
Train Epoch: 67 [8800/10000 (88%)]	Loss: 0.304628
Train Epoch: 67 [9600/10000 (96%)]	Loss: 0.310667
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 68 [0/10000 (0%)]	Loss: 0.297160
Train Epoch: 68 [800/10000 (8%)]	Loss: 0.309534
Train Epoch: 68 [1600/10000 (16%)]	Loss: 0.320300
Train Epoch: 68 [2400/10000 (24%)]	Loss: 0.305417
Train Epoch: 68 [3200/10000 (32%)]	Loss: 0.298575
Train Epoch: 68 [4000/10000 (40%)]	Loss: 0.333991
Train Epoch: 68 [4800/10000 (48%)]	Loss: 0.356579
Train Epoch: 68 [5600/10000 (56%)]	Loss: 0.299693
Train Epoch: 68 [6400/10000 (64%)]	Loss: 0.333394
Train Epoch: 68 [7200/10000 (72%)]	Loss: 0.306603
Train Epoch: 68 [8000/10000 (80%)]	Loss: 0.365420
Train Epoch: 68 [8800/10000 (88%)]	Loss: 0.327474
Train Epoch: 68 [9600/10000 (96%)]	Loss: 0.298251
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 69 [0/10000 (0%)]	Loss: 0.333475
Train Epoch: 69 [800/10000 (8%)]	Loss: 0.336392
Train Epoch: 69 [1600/10000 (16%)]	Loss: 0.287313
Train Epoch: 69 [2400/10000 (24%)]	Loss: 0.325555
Train Epoch: 69 [3200/10000 (32%)]	Loss: 0.295035
Train Epoch: 69 [4000/10000 (40%)]	Loss: 0.328983
Train Epoch: 69 [4800/10000 (48%)]	Loss: 0.299598
Train Epoch: 69 [5600/10000 (56%)]	Loss: 0.295550
Train Epoch: 69 [6400/10000 (64%)]	Loss: 0.308780
Train Epoch: 69 [7200/10000 (72%)]	Loss: 0.307422
Train Epoch: 69 [8000/10000 (80%)]	Loss: 0.303956
Train Epoch: 69 [8800/10000 (88%)]	Loss: 0.284044
Train Epoch: 69 [9600/10000 (96%)]	Loss: 0.296791
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 70 [0/10000 (0%)]	Loss: 0.279730
Train Epoch: 70 [800/10000 (8%)]	Loss: 0.305880
Train Epoch: 70 [1600/10000 (16%)]	Loss: 0.357688
Train Epoch: 70 [2400/10000 (24%)]	Loss: 0.290505
Train Epoch: 70 [3200/10000 (32%)]	Loss: 0.332335
Train Epoch: 70 [4000/10000 (40%)]	Loss: 0.298632
Train Epoch: 70 [4800/10000 (48%)]	Loss: 0.321622
Train Epoch: 70 [5600/10000 (56%)]	Loss: 0.346151
Train Epoch: 70 [6400/10000 (64%)]	Loss: 0.335958
Train Epoch: 70 [7200/10000 (72%)]	Loss: 0.330528
Train Epoch: 70 [8000/10000 (80%)]	Loss: 0.300927
Train Epoch: 70 [8800/10000 (88%)]	Loss: 0.291757
Train Epoch: 70 [9600/10000 (96%)]	Loss: 0.339655
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 71 [0/10000 (0%)]	Loss: 0.287562
Train Epoch: 71 [800/10000 (8%)]	Loss: 0.313221
Train Epoch: 71 [1600/10000 (16%)]	Loss: 0.298646
Train Epoch: 71 [2400/10000 (24%)]	Loss: 0.371787
Train Epoch: 71 [3200/10000 (32%)]	Loss: 0.287157
Train Epoch: 71 [4000/10000 (40%)]	Loss: 0.304674
Train Epoch: 71 [4800/10000 (48%)]	Loss: 0.303170
Train Epoch: 71 [5600/10000 (56%)]	Loss: 0.387955
Train Epoch: 71 [6400/10000 (64%)]	Loss: 0.320420
Train Epoch: 71 [7200/10000 (72%)]	Loss: 0.326435
Train Epoch: 71 [8000/10000 (80%)]	Loss: 0.371942
Train Epoch: 71 [8800/10000 (88%)]	Loss: 0.323142
Train Epoch: 71 [9600/10000 (96%)]	Loss: 0.367802
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 72 [0/10000 (0%)]	Loss: 0.328687
Train Epoch: 72 [800/10000 (8%)]	Loss: 0.312674
Train Epoch: 72 [1600/10000 (16%)]	Loss: 0.311136
Train Epoch: 72 [2400/10000 (24%)]	Loss: 0.335836
Train Epoch: 72 [3200/10000 (32%)]	Loss: 0.299643
Train Epoch: 72 [4000/10000 (40%)]	Loss: 0.356289
Train Epoch: 72 [4800/10000 (48%)]	Loss: 0.354088
Train Epoch: 72 [5600/10000 (56%)]	Loss: 0.328249
Train Epoch: 72 [6400/10000 (64%)]	Loss: 0.358775
Train Epoch: 72 [7200/10000 (72%)]	Loss: 0.275198
Train Epoch: 72 [8000/10000 (80%)]	Loss: 0.281114
Train Epoch: 72 [8800/10000 (88%)]	Loss: 0.289174
Train Epoch: 72 [9600/10000 (96%)]	Loss: 0.323865
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 73 [0/10000 (0%)]	Loss: 0.362521
Train Epoch: 73 [800/10000 (8%)]	Loss: 0.319095
Train Epoch: 73 [1600/10000 (16%)]	Loss: 0.310021
Train Epoch: 73 [2400/10000 (24%)]	Loss: 0.282567
Train Epoch: 73 [3200/10000 (32%)]	Loss: 0.299175
Train Epoch: 73 [4000/10000 (40%)]	Loss: 0.261274
Train Epoch: 73 [4800/10000 (48%)]	Loss: 0.291221
Train Epoch: 73 [5600/10000 (56%)]	Loss: 0.282261
Train Epoch: 73 [6400/10000 (64%)]	Loss: 0.298650
Train Epoch: 73 [7200/10000 (72%)]	Loss: 0.334845
Train Epoch: 73 [8000/10000 (80%)]	Loss: 0.360251
Train Epoch: 73 [8800/10000 (88%)]	Loss: 0.248371
Train Epoch: 73 [9600/10000 (96%)]	Loss: 0.309228
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 74 [0/10000 (0%)]	Loss: 0.409224
Train Epoch: 74 [800/10000 (8%)]	Loss: 0.307058
Train Epoch: 74 [1600/10000 (16%)]	Loss: 0.334249
Train Epoch: 74 [2400/10000 (24%)]	Loss: 0.294455
Train Epoch: 74 [3200/10000 (32%)]	Loss: 0.328317
Train Epoch: 74 [4000/10000 (40%)]	Loss: 0.276972
Train Epoch: 74 [4800/10000 (48%)]	Loss: 0.326077
Train Epoch: 74 [5600/10000 (56%)]	Loss: 0.295787
Train Epoch: 74 [6400/10000 (64%)]	Loss: 0.329657
Train Epoch: 74 [7200/10000 (72%)]	Loss: 0.374342
Train Epoch: 74 [8000/10000 (80%)]	Loss: 0.332570
Train Epoch: 74 [8800/10000 (88%)]	Loss: 0.309551
Train Epoch: 74 [9600/10000 (96%)]	Loss: 0.356453
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 75 [0/10000 (0%)]	Loss: 0.317713
Train Epoch: 75 [800/10000 (8%)]	Loss: 0.298706
Train Epoch: 75 [1600/10000 (16%)]	Loss: 0.314640
Train Epoch: 75 [2400/10000 (24%)]	Loss: 0.406913
Train Epoch: 75 [3200/10000 (32%)]	Loss: 0.285915
Train Epoch: 75 [4000/10000 (40%)]	Loss: 0.340039
Train Epoch: 75 [4800/10000 (48%)]	Loss: 0.294447
Train Epoch: 75 [5600/10000 (56%)]	Loss: 0.323902
Train Epoch: 75 [6400/10000 (64%)]	Loss: 0.312809
Train Epoch: 75 [7200/10000 (72%)]	Loss: 0.341627
Train Epoch: 75 [8000/10000 (80%)]	Loss: 0.331903
Train Epoch: 75 [8800/10000 (88%)]	Loss: 0.311140
Train Epoch: 75 [9600/10000 (96%)]	Loss: 0.328939
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 76 [0/10000 (0%)]	Loss: 0.327685
Train Epoch: 76 [800/10000 (8%)]	Loss: 0.314771
Train Epoch: 76 [1600/10000 (16%)]	Loss: 0.307923
Train Epoch: 76 [2400/10000 (24%)]	Loss: 0.297759
Train Epoch: 76 [3200/10000 (32%)]	Loss: 0.314810
Train Epoch: 76 [4000/10000 (40%)]	Loss: 0.310636
Train Epoch: 76 [4800/10000 (48%)]	Loss: 0.338469
Train Epoch: 76 [5600/10000 (56%)]	Loss: 0.323285
Train Epoch: 76 [6400/10000 (64%)]	Loss: 0.289849
Train Epoch: 76 [7200/10000 (72%)]	Loss: 0.337313
Train Epoch: 76 [8000/10000 (80%)]	Loss: 0.305415
Train Epoch: 76 [8800/10000 (88%)]	Loss: 0.368069
Train Epoch: 76 [9600/10000 (96%)]	Loss: 0.340676
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 77 [0/10000 (0%)]	Loss: 0.334331
Train Epoch: 77 [800/10000 (8%)]	Loss: 0.335794
Train Epoch: 77 [1600/10000 (16%)]	Loss: 0.300243
Train Epoch: 77 [2400/10000 (24%)]	Loss: 0.356175
Train Epoch: 77 [3200/10000 (32%)]	Loss: 0.283981
Train Epoch: 77 [4000/10000 (40%)]	Loss: 0.298519
Train Epoch: 77 [4800/10000 (48%)]	Loss: 0.332719
Train Epoch: 77 [5600/10000 (56%)]	Loss: 0.325361
Train Epoch: 77 [6400/10000 (64%)]	Loss: 0.331542
Train Epoch: 77 [7200/10000 (72%)]	Loss: 0.298665
Train Epoch: 77 [8000/10000 (80%)]	Loss: 0.284050
Train Epoch: 77 [8800/10000 (88%)]	Loss: 0.337888
Train Epoch: 77 [9600/10000 (96%)]	Loss: 0.310571
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 78 [0/10000 (0%)]	Loss: 0.310337
Train Epoch: 78 [800/10000 (8%)]	Loss: 0.298871
Train Epoch: 78 [1600/10000 (16%)]	Loss: 0.320855
Train Epoch: 78 [2400/10000 (24%)]	Loss: 0.297318
Train Epoch: 78 [3200/10000 (32%)]	Loss: 0.303606
Train Epoch: 78 [4000/10000 (40%)]	Loss: 0.346833
Train Epoch: 78 [4800/10000 (48%)]	Loss: 0.350925
Train Epoch: 78 [5600/10000 (56%)]	Loss: 0.349997
Train Epoch: 78 [6400/10000 (64%)]	Loss: 0.308283
Train Epoch: 78 [7200/10000 (72%)]	Loss: 0.338051
Train Epoch: 78 [8000/10000 (80%)]	Loss: 0.264368
Train Epoch: 78 [8800/10000 (88%)]	Loss: 0.295192
Train Epoch: 78 [9600/10000 (96%)]	Loss: 0.352998
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 79 [0/10000 (0%)]	Loss: 0.299231
Train Epoch: 79 [800/10000 (8%)]	Loss: 0.323966
Train Epoch: 79 [1600/10000 (16%)]	Loss: 0.338101
Train Epoch: 79 [2400/10000 (24%)]	Loss: 0.302696
Train Epoch: 79 [3200/10000 (32%)]	Loss: 0.309711
Train Epoch: 79 [4000/10000 (40%)]	Loss: 0.330510
Train Epoch: 79 [4800/10000 (48%)]	Loss: 0.305694
Train Epoch: 79 [5600/10000 (56%)]	Loss: 0.275802
Train Epoch: 79 [6400/10000 (64%)]	Loss: 0.319580
Train Epoch: 79 [7200/10000 (72%)]	Loss: 0.315252
Train Epoch: 79 [8000/10000 (80%)]	Loss: 0.265808
Train Epoch: 79 [8800/10000 (88%)]	Loss: 0.281459
Train Epoch: 79 [9600/10000 (96%)]	Loss: 0.329305
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 80 [0/10000 (0%)]	Loss: 0.348360
Train Epoch: 80 [800/10000 (8%)]	Loss: 0.312550
Train Epoch: 80 [1600/10000 (16%)]	Loss: 0.301398
Train Epoch: 80 [2400/10000 (24%)]	Loss: 0.315339
Train Epoch: 80 [3200/10000 (32%)]	Loss: 0.310822
Train Epoch: 80 [4000/10000 (40%)]	Loss: 0.286390
Train Epoch: 80 [4800/10000 (48%)]	Loss: 0.325905
Train Epoch: 80 [5600/10000 (56%)]	Loss: 0.335686
Train Epoch: 80 [6400/10000 (64%)]	Loss: 0.361033
Train Epoch: 80 [7200/10000 (72%)]	Loss: 0.325923
Train Epoch: 80 [8000/10000 (80%)]	Loss: 0.305627
Train Epoch: 80 [8800/10000 (88%)]	Loss: 0.275719
Train Epoch: 80 [9600/10000 (96%)]	Loss: 0.327066
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 81 [0/10000 (0%)]	Loss: 0.312697
Train Epoch: 81 [800/10000 (8%)]	Loss: 0.304410
Train Epoch: 81 [1600/10000 (16%)]	Loss: 0.332781
Train Epoch: 81 [2400/10000 (24%)]	Loss: 0.295127
Train Epoch: 81 [3200/10000 (32%)]	Loss: 0.316116
Train Epoch: 81 [4000/10000 (40%)]	Loss: 0.277154
Train Epoch: 81 [4800/10000 (48%)]	Loss: 0.278332
Train Epoch: 81 [5600/10000 (56%)]	Loss: 0.256114
Train Epoch: 81 [6400/10000 (64%)]	Loss: 0.347588
Train Epoch: 81 [7200/10000 (72%)]	Loss: 0.305071
Train Epoch: 81 [8000/10000 (80%)]	Loss: 0.332361
Train Epoch: 81 [8800/10000 (88%)]	Loss: 0.313435
Train Epoch: 81 [9600/10000 (96%)]	Loss: 0.340006
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 82 [0/10000 (0%)]	Loss: 0.346741
Train Epoch: 82 [800/10000 (8%)]	Loss: 0.290730
Train Epoch: 82 [1600/10000 (16%)]	Loss: 0.329298
Train Epoch: 82 [2400/10000 (24%)]	Loss: 0.309050
Train Epoch: 82 [3200/10000 (32%)]	Loss: 0.317874
Train Epoch: 82 [4000/10000 (40%)]	Loss: 0.265347
Train Epoch: 82 [4800/10000 (48%)]	Loss: 0.314016
Train Epoch: 82 [5600/10000 (56%)]	Loss: 0.314666
Train Epoch: 82 [6400/10000 (64%)]	Loss: 0.320752
Train Epoch: 82 [7200/10000 (72%)]	Loss: 0.347320
Train Epoch: 82 [8000/10000 (80%)]	Loss: 0.336035
Train Epoch: 82 [8800/10000 (88%)]	Loss: 0.323111
Train Epoch: 82 [9600/10000 (96%)]	Loss: 0.283551
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 83 [0/10000 (0%)]	Loss: 0.366673
Train Epoch: 83 [800/10000 (8%)]	Loss: 0.287799
Train Epoch: 83 [1600/10000 (16%)]	Loss: 0.339262
Train Epoch: 83 [2400/10000 (24%)]	Loss: 0.332468
Train Epoch: 83 [3200/10000 (32%)]	Loss: 0.333682
Train Epoch: 83 [4000/10000 (40%)]	Loss: 0.295421
Train Epoch: 83 [4800/10000 (48%)]	Loss: 0.303480
Train Epoch: 83 [5600/10000 (56%)]	Loss: 0.346914
Train Epoch: 83 [6400/10000 (64%)]	Loss: 0.346920
Train Epoch: 83 [7200/10000 (72%)]	Loss: 0.288050
Train Epoch: 83 [8000/10000 (80%)]	Loss: 0.313458
Train Epoch: 83 [8800/10000 (88%)]	Loss: 0.301116
Train Epoch: 83 [9600/10000 (96%)]	Loss: 0.338637
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 84 [0/10000 (0%)]	Loss: 0.307673
Train Epoch: 84 [800/10000 (8%)]	Loss: 0.320474
Train Epoch: 84 [1600/10000 (16%)]	Loss: 0.314944
Train Epoch: 84 [2400/10000 (24%)]	Loss: 0.317704
Train Epoch: 84 [3200/10000 (32%)]	Loss: 0.340063
Train Epoch: 84 [4000/10000 (40%)]	Loss: 0.304287
Train Epoch: 84 [4800/10000 (48%)]	Loss: 0.264103
Train Epoch: 84 [5600/10000 (56%)]	Loss: 0.310690
Train Epoch: 84 [6400/10000 (64%)]	Loss: 0.343212
Train Epoch: 84 [7200/10000 (72%)]	Loss: 0.279364
Train Epoch: 84 [8000/10000 (80%)]	Loss: 0.296132
Train Epoch: 84 [8800/10000 (88%)]	Loss: 0.285574
Train Epoch: 84 [9600/10000 (96%)]	Loss: 0.309874
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 85 [0/10000 (0%)]	Loss: 0.324000
Train Epoch: 85 [800/10000 (8%)]	Loss: 0.270460
Train Epoch: 85 [1600/10000 (16%)]	Loss: 0.294277
Train Epoch: 85 [2400/10000 (24%)]	Loss: 0.302156
Train Epoch: 85 [3200/10000 (32%)]	Loss: 0.322108
Train Epoch: 85 [4000/10000 (40%)]	Loss: 0.289908
Train Epoch: 85 [4800/10000 (48%)]	Loss: 0.343747
Train Epoch: 85 [5600/10000 (56%)]	Loss: 0.297182
Train Epoch: 85 [6400/10000 (64%)]	Loss: 0.253855
Train Epoch: 85 [7200/10000 (72%)]	Loss: 0.296494
Train Epoch: 85 [8000/10000 (80%)]	Loss: 0.343196
Train Epoch: 85 [8800/10000 (88%)]	Loss: 0.326434
Train Epoch: 85 [9600/10000 (96%)]	Loss: 0.311422
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 86 [0/10000 (0%)]	Loss: 0.323831
Train Epoch: 86 [800/10000 (8%)]	Loss: 0.317911
Train Epoch: 86 [1600/10000 (16%)]	Loss: 0.288486
Train Epoch: 86 [2400/10000 (24%)]	Loss: 0.351736
Train Epoch: 86 [3200/10000 (32%)]	Loss: 0.290466
Train Epoch: 86 [4000/10000 (40%)]	Loss: 0.351567
Train Epoch: 86 [4800/10000 (48%)]	Loss: 0.307422
Train Epoch: 86 [5600/10000 (56%)]	Loss: 0.304527
Train Epoch: 86 [6400/10000 (64%)]	Loss: 0.278804
Train Epoch: 86 [7200/10000 (72%)]	Loss: 0.318121
Train Epoch: 86 [8000/10000 (80%)]	Loss: 0.313971
Train Epoch: 86 [8800/10000 (88%)]	Loss: 0.294605
Train Epoch: 86 [9600/10000 (96%)]	Loss: 0.312380
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 87 [0/10000 (0%)]	Loss: 0.287642
Train Epoch: 87 [800/10000 (8%)]	Loss: 0.283209
Train Epoch: 87 [1600/10000 (16%)]	Loss: 0.346144
Train Epoch: 87 [2400/10000 (24%)]	Loss: 0.340301
Train Epoch: 87 [3200/10000 (32%)]	Loss: 0.303593
Train Epoch: 87 [4000/10000 (40%)]	Loss: 0.266041
Train Epoch: 87 [4800/10000 (48%)]	Loss: 0.284315
Train Epoch: 87 [5600/10000 (56%)]	Loss: 0.327858
Train Epoch: 87 [6400/10000 (64%)]	Loss: 0.301772
Train Epoch: 87 [7200/10000 (72%)]	Loss: 0.279298
Train Epoch: 87 [8000/10000 (80%)]	Loss: 0.299087
Train Epoch: 87 [8800/10000 (88%)]	Loss: 0.329409
Train Epoch: 87 [9600/10000 (96%)]	Loss: 0.336404
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 88 [0/10000 (0%)]	Loss: 0.313889
Train Epoch: 88 [800/10000 (8%)]	Loss: 0.367891
Train Epoch: 88 [1600/10000 (16%)]	Loss: 0.317125
Train Epoch: 88 [2400/10000 (24%)]	Loss: 0.305982
Train Epoch: 88 [3200/10000 (32%)]	Loss: 0.328660
Train Epoch: 88 [4000/10000 (40%)]	Loss: 0.336748
Train Epoch: 88 [4800/10000 (48%)]	Loss: 0.323484
Train Epoch: 88 [5600/10000 (56%)]	Loss: 0.293302
Train Epoch: 88 [6400/10000 (64%)]	Loss: 0.336587
Train Epoch: 88 [7200/10000 (72%)]	Loss: 0.318184
Train Epoch: 88 [8000/10000 (80%)]	Loss: 0.294948
Train Epoch: 88 [8800/10000 (88%)]	Loss: 0.312726
Train Epoch: 88 [9600/10000 (96%)]	Loss: 0.313630
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 89 [0/10000 (0%)]	Loss: 0.351960
Train Epoch: 89 [800/10000 (8%)]	Loss: 0.272871
Train Epoch: 89 [1600/10000 (16%)]	Loss: 0.315783
Train Epoch: 89 [2400/10000 (24%)]	Loss: 0.310504
Train Epoch: 89 [3200/10000 (32%)]	Loss: 0.368765
Train Epoch: 89 [4000/10000 (40%)]	Loss: 0.316460
Train Epoch: 89 [4800/10000 (48%)]	Loss: 0.293029
Train Epoch: 89 [5600/10000 (56%)]	Loss: 0.308486
Train Epoch: 89 [6400/10000 (64%)]	Loss: 0.267408
Train Epoch: 89 [7200/10000 (72%)]	Loss: 0.284290
Train Epoch: 89 [8000/10000 (80%)]	Loss: 0.303189
Train Epoch: 89 [8800/10000 (88%)]	Loss: 0.281375
Train Epoch: 89 [9600/10000 (96%)]	Loss: 0.320644
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 90 [0/10000 (0%)]	Loss: 0.309140
Train Epoch: 90 [800/10000 (8%)]	Loss: 0.300763
Train Epoch: 90 [1600/10000 (16%)]	Loss: 0.336112
Train Epoch: 90 [2400/10000 (24%)]	Loss: 0.273927
Train Epoch: 90 [3200/10000 (32%)]	Loss: 0.294541
Train Epoch: 90 [4000/10000 (40%)]	Loss: 0.347056
Train Epoch: 90 [4800/10000 (48%)]	Loss: 0.316732
Train Epoch: 90 [5600/10000 (56%)]	Loss: 0.304863
Train Epoch: 90 [6400/10000 (64%)]	Loss: 0.283272
Train Epoch: 90 [7200/10000 (72%)]	Loss: 0.290261
Train Epoch: 90 [8000/10000 (80%)]	Loss: 0.287305
Train Epoch: 90 [8800/10000 (88%)]	Loss: 0.306975
Train Epoch: 90 [9600/10000 (96%)]	Loss: 0.314155
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 91 [0/10000 (0%)]	Loss: 0.315620
Train Epoch: 91 [800/10000 (8%)]	Loss: 0.306665
Train Epoch: 91 [1600/10000 (16%)]	Loss: 0.290493
Train Epoch: 91 [2400/10000 (24%)]	Loss: 0.347140
Train Epoch: 91 [3200/10000 (32%)]	Loss: 0.293285
Train Epoch: 91 [4000/10000 (40%)]	Loss: 0.336501
Train Epoch: 91 [4800/10000 (48%)]	Loss: 0.348296
Train Epoch: 91 [5600/10000 (56%)]	Loss: 0.295096
Train Epoch: 91 [6400/10000 (64%)]	Loss: 0.311108
Train Epoch: 91 [7200/10000 (72%)]	Loss: 0.319073
Train Epoch: 91 [8000/10000 (80%)]	Loss: 0.307118
Train Epoch: 91 [8800/10000 (88%)]	Loss: 0.318286
Train Epoch: 91 [9600/10000 (96%)]	Loss: 0.323708
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 92 [0/10000 (0%)]	Loss: 0.333448
Train Epoch: 92 [800/10000 (8%)]	Loss: 0.318999
Train Epoch: 92 [1600/10000 (16%)]	Loss: 0.325624
Train Epoch: 92 [2400/10000 (24%)]	Loss: 0.305449
Train Epoch: 92 [3200/10000 (32%)]	Loss: 0.299246
Train Epoch: 92 [4000/10000 (40%)]	Loss: 0.304974
Train Epoch: 92 [4800/10000 (48%)]	Loss: 0.335616
Train Epoch: 92 [5600/10000 (56%)]	Loss: 0.318653
Train Epoch: 92 [6400/10000 (64%)]	Loss: 0.360682
Train Epoch: 92 [7200/10000 (72%)]	Loss: 0.286662
Train Epoch: 92 [8000/10000 (80%)]	Loss: 0.307292
Train Epoch: 92 [8800/10000 (88%)]	Loss: 0.273250
Train Epoch: 92 [9600/10000 (96%)]	Loss: 0.295068
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 93 [0/10000 (0%)]	Loss: 0.297425
Train Epoch: 93 [800/10000 (8%)]	Loss: 0.288854
Train Epoch: 93 [1600/10000 (16%)]	Loss: 0.310826
Train Epoch: 93 [2400/10000 (24%)]	Loss: 0.322194
Train Epoch: 93 [3200/10000 (32%)]	Loss: 0.317839
Train Epoch: 93 [4000/10000 (40%)]	Loss: 0.334547
Train Epoch: 93 [4800/10000 (48%)]	Loss: 0.299560
Train Epoch: 93 [5600/10000 (56%)]	Loss: 0.335346
Train Epoch: 93 [6400/10000 (64%)]	Loss: 0.296829
Train Epoch: 93 [7200/10000 (72%)]	Loss: 0.302228
Train Epoch: 93 [8000/10000 (80%)]	Loss: 0.312613
Train Epoch: 93 [8800/10000 (88%)]	Loss: 0.330242
Train Epoch: 93 [9600/10000 (96%)]	Loss: 0.337842
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 94 [0/10000 (0%)]	Loss: 0.293739
Train Epoch: 94 [800/10000 (8%)]	Loss: 0.330338
Train Epoch: 94 [1600/10000 (16%)]	Loss: 0.286585
Train Epoch: 94 [2400/10000 (24%)]	Loss: 0.325238
Train Epoch: 94 [3200/10000 (32%)]	Loss: 0.311640
Train Epoch: 94 [4000/10000 (40%)]	Loss: 0.329422
Train Epoch: 94 [4800/10000 (48%)]	Loss: 0.332677
Train Epoch: 94 [5600/10000 (56%)]	Loss: 0.292858
Train Epoch: 94 [6400/10000 (64%)]	Loss: 0.315749
Train Epoch: 94 [7200/10000 (72%)]	Loss: 0.308653
Train Epoch: 94 [8000/10000 (80%)]	Loss: 0.338012
Train Epoch: 94 [8800/10000 (88%)]	Loss: 0.309686
Train Epoch: 94 [9600/10000 (96%)]	Loss: 0.330606
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 95 [0/10000 (0%)]	Loss: 0.304871
Train Epoch: 95 [800/10000 (8%)]	Loss: 0.286395
Train Epoch: 95 [1600/10000 (16%)]	Loss: 0.323216
Train Epoch: 95 [2400/10000 (24%)]	Loss: 0.331295
Train Epoch: 95 [3200/10000 (32%)]	Loss: 0.326289
Train Epoch: 95 [4000/10000 (40%)]	Loss: 0.339599
Train Epoch: 95 [4800/10000 (48%)]	Loss: 0.276703
Train Epoch: 95 [5600/10000 (56%)]	Loss: 0.299964
Train Epoch: 95 [6400/10000 (64%)]	Loss: 0.304843
Train Epoch: 95 [7200/10000 (72%)]	Loss: 0.300353
Train Epoch: 95 [8000/10000 (80%)]	Loss: 0.347352
Train Epoch: 95 [8800/10000 (88%)]	Loss: 0.343098
Train Epoch: 95 [9600/10000 (96%)]	Loss: 0.286023
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 96 [0/10000 (0%)]	Loss: 0.347060
Train Epoch: 96 [800/10000 (8%)]	Loss: 0.295998
Train Epoch: 96 [1600/10000 (16%)]	Loss: 0.294082
Train Epoch: 96 [2400/10000 (24%)]	Loss: 0.343218
Train Epoch: 96 [3200/10000 (32%)]	Loss: 0.310498
Train Epoch: 96 [4000/10000 (40%)]	Loss: 0.300506
Train Epoch: 96 [4800/10000 (48%)]	Loss: 0.284807
Train Epoch: 96 [5600/10000 (56%)]	Loss: 0.281669
Train Epoch: 96 [6400/10000 (64%)]	Loss: 0.281633
Train Epoch: 96 [7200/10000 (72%)]	Loss: 0.333082
Train Epoch: 96 [8000/10000 (80%)]	Loss: 0.275072
Train Epoch: 96 [8800/10000 (88%)]	Loss: 0.372709
Train Epoch: 96 [9600/10000 (96%)]	Loss: 0.334093
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 97 [0/10000 (0%)]	Loss: 0.380127
Train Epoch: 97 [800/10000 (8%)]	Loss: 0.312099
Train Epoch: 97 [1600/10000 (16%)]	Loss: 0.294571
Train Epoch: 97 [2400/10000 (24%)]	Loss: 0.336459
Train Epoch: 97 [3200/10000 (32%)]	Loss: 0.293748
Train Epoch: 97 [4000/10000 (40%)]	Loss: 0.351325
Train Epoch: 97 [4800/10000 (48%)]	Loss: 0.282682
Train Epoch: 97 [5600/10000 (56%)]	Loss: 0.351875
Train Epoch: 97 [6400/10000 (64%)]	Loss: 0.303712
Train Epoch: 97 [7200/10000 (72%)]	Loss: 0.325246
Train Epoch: 97 [8000/10000 (80%)]	Loss: 0.306423
Train Epoch: 97 [8800/10000 (88%)]	Loss: 0.315378
Train Epoch: 97 [9600/10000 (96%)]	Loss: 0.319505
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 98 [0/10000 (0%)]	Loss: 0.291615
Train Epoch: 98 [800/10000 (8%)]	Loss: 0.307663
Train Epoch: 98 [1600/10000 (16%)]	Loss: 0.273045
Train Epoch: 98 [2400/10000 (24%)]	Loss: 0.301359
Train Epoch: 98 [3200/10000 (32%)]	Loss: 0.301010
Train Epoch: 98 [4000/10000 (40%)]	Loss: 0.284773
Train Epoch: 98 [4800/10000 (48%)]	Loss: 0.380853
Train Epoch: 98 [5600/10000 (56%)]	Loss: 0.289093
Train Epoch: 98 [6400/10000 (64%)]	Loss: 0.357939
Train Epoch: 98 [7200/10000 (72%)]	Loss: 0.298002
Train Epoch: 98 [8000/10000 (80%)]	Loss: 0.289628
Train Epoch: 98 [8800/10000 (88%)]	Loss: 0.329223
Train Epoch: 98 [9600/10000 (96%)]	Loss: 0.265857
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 99 [0/10000 (0%)]	Loss: 0.324937
Train Epoch: 99 [800/10000 (8%)]	Loss: 0.362735
Train Epoch: 99 [1600/10000 (16%)]	Loss: 0.300615
Train Epoch: 99 [2400/10000 (24%)]	Loss: 0.292589
Train Epoch: 99 [3200/10000 (32%)]	Loss: 0.308099
Train Epoch: 99 [4000/10000 (40%)]	Loss: 0.314216
Train Epoch: 99 [4800/10000 (48%)]	Loss: 0.286201
Train Epoch: 99 [5600/10000 (56%)]	Loss: 0.296351
Train Epoch: 99 [6400/10000 (64%)]	Loss: 0.300505
Train Epoch: 99 [7200/10000 (72%)]	Loss: 0.305395
Train Epoch: 99 [8000/10000 (80%)]	Loss: 0.293358
Train Epoch: 99 [8800/10000 (88%)]	Loss: 0.339441
Train Epoch: 99 [9600/10000 (96%)]	Loss: 0.334850
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 100 [0/10000 (0%)]	Loss: 0.305623
Train Epoch: 100 [800/10000 (8%)]	Loss: 0.315111
Train Epoch: 100 [1600/10000 (16%)]	Loss: 0.327073
Train Epoch: 100 [2400/10000 (24%)]	Loss: 0.394170
Train Epoch: 100 [3200/10000 (32%)]	Loss: 0.328026
Train Epoch: 100 [4000/10000 (40%)]	Loss: 0.279235
Train Epoch: 100 [4800/10000 (48%)]	Loss: 0.327743
Train Epoch: 100 [5600/10000 (56%)]	Loss: 0.313829
Train Epoch: 100 [6400/10000 (64%)]	Loss: 0.321038
Train Epoch: 100 [7200/10000 (72%)]	Loss: 0.328430
Train Epoch: 100 [8000/10000 (80%)]	Loss: 0.341783
Train Epoch: 100 [8800/10000 (88%)]	Loss: 0.299180
Train Epoch: 100 [9600/10000 (96%)]	Loss: 0.292955
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 101 [0/10000 (0%)]	Loss: 0.315172
Train Epoch: 101 [800/10000 (8%)]	Loss: 0.279564
Train Epoch: 101 [1600/10000 (16%)]	Loss: 0.292711
Train Epoch: 101 [2400/10000 (24%)]	Loss: 0.317324
Train Epoch: 101 [3200/10000 (32%)]	Loss: 0.287637
Train Epoch: 101 [4000/10000 (40%)]	Loss: 0.388372
Train Epoch: 101 [4800/10000 (48%)]	Loss: 0.308940
Train Epoch: 101 [5600/10000 (56%)]	Loss: 0.294359
Train Epoch: 101 [6400/10000 (64%)]	Loss: 0.316381
Train Epoch: 101 [7200/10000 (72%)]	Loss: 0.322268
Train Epoch: 101 [8000/10000 (80%)]	Loss: 0.310874
Train Epoch: 101 [8800/10000 (88%)]	Loss: 0.281364
Train Epoch: 101 [9600/10000 (96%)]	Loss: 0.312810
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 102 [0/10000 (0%)]	Loss: 0.309985
Train Epoch: 102 [800/10000 (8%)]	Loss: 0.314837
Train Epoch: 102 [1600/10000 (16%)]	Loss: 0.317741
Train Epoch: 102 [2400/10000 (24%)]	Loss: 0.297445
Train Epoch: 102 [3200/10000 (32%)]	Loss: 0.308995
Train Epoch: 102 [4000/10000 (40%)]	Loss: 0.278306
Train Epoch: 102 [4800/10000 (48%)]	Loss: 0.317536
Train Epoch: 102 [5600/10000 (56%)]	Loss: 0.262174
Train Epoch: 102 [6400/10000 (64%)]	Loss: 0.300270
Train Epoch: 102 [7200/10000 (72%)]	Loss: 0.315763
Train Epoch: 102 [8000/10000 (80%)]	Loss: 0.306102
Train Epoch: 102 [8800/10000 (88%)]	Loss: 0.295544
Train Epoch: 102 [9600/10000 (96%)]	Loss: 0.370184
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 103 [0/10000 (0%)]	Loss: 0.288760
Train Epoch: 103 [800/10000 (8%)]	Loss: 0.272638
Train Epoch: 103 [1600/10000 (16%)]	Loss: 0.302918
Train Epoch: 103 [2400/10000 (24%)]	Loss: 0.378939
Train Epoch: 103 [3200/10000 (32%)]	Loss: 0.328754
Train Epoch: 103 [4000/10000 (40%)]	Loss: 0.309166
Train Epoch: 103 [4800/10000 (48%)]	Loss: 0.306984
Train Epoch: 103 [5600/10000 (56%)]	Loss: 0.308945
Train Epoch: 103 [6400/10000 (64%)]	Loss: 0.318708
Train Epoch: 103 [7200/10000 (72%)]	Loss: 0.304795
Train Epoch: 103 [8000/10000 (80%)]	Loss: 0.313829
Train Epoch: 103 [8800/10000 (88%)]	Loss: 0.277564
Train Epoch: 103 [9600/10000 (96%)]	Loss: 0.322935
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 104 [0/10000 (0%)]	Loss: 0.362648
Train Epoch: 104 [800/10000 (8%)]	Loss: 0.326756
Train Epoch: 104 [1600/10000 (16%)]	Loss: 0.279843
Train Epoch: 104 [2400/10000 (24%)]	Loss: 0.296417
Train Epoch: 104 [3200/10000 (32%)]	Loss: 0.320853
Train Epoch: 104 [4000/10000 (40%)]	Loss: 0.364275
Train Epoch: 104 [4800/10000 (48%)]	Loss: 0.335771
Train Epoch: 104 [5600/10000 (56%)]	Loss: 0.280780
Train Epoch: 104 [6400/10000 (64%)]	Loss: 0.336269
Train Epoch: 104 [7200/10000 (72%)]	Loss: 0.270972
Train Epoch: 104 [8000/10000 (80%)]	Loss: 0.300514
Train Epoch: 104 [8800/10000 (88%)]	Loss: 0.323012
Train Epoch: 104 [9600/10000 (96%)]	Loss: 0.378409
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 105 [0/10000 (0%)]	Loss: 0.308126
Train Epoch: 105 [800/10000 (8%)]	Loss: 0.309745
Train Epoch: 105 [1600/10000 (16%)]	Loss: 0.352322
Train Epoch: 105 [2400/10000 (24%)]	Loss: 0.338421
Train Epoch: 105 [3200/10000 (32%)]	Loss: 0.322093
Train Epoch: 105 [4000/10000 (40%)]	Loss: 0.391180
Train Epoch: 105 [4800/10000 (48%)]	Loss: 0.280166
Train Epoch: 105 [5600/10000 (56%)]	Loss: 0.285850
Train Epoch: 105 [6400/10000 (64%)]	Loss: 0.315917
Train Epoch: 105 [7200/10000 (72%)]	Loss: 0.270315
Train Epoch: 105 [8000/10000 (80%)]	Loss: 0.271867
Train Epoch: 105 [8800/10000 (88%)]	Loss: 0.336671
Train Epoch: 105 [9600/10000 (96%)]	Loss: 0.320916
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 106 [0/10000 (0%)]	Loss: 0.293147
Train Epoch: 106 [800/10000 (8%)]	Loss: 0.294478
Train Epoch: 106 [1600/10000 (16%)]	Loss: 0.348211
Train Epoch: 106 [2400/10000 (24%)]	Loss: 0.280433
Train Epoch: 106 [3200/10000 (32%)]	Loss: 0.311638
Train Epoch: 106 [4000/10000 (40%)]	Loss: 0.294507
Train Epoch: 106 [4800/10000 (48%)]	Loss: 0.319977
Train Epoch: 106 [5600/10000 (56%)]	Loss: 0.320786
Train Epoch: 106 [6400/10000 (64%)]	Loss: 0.286454
Train Epoch: 106 [7200/10000 (72%)]	Loss: 0.314844
Train Epoch: 106 [8000/10000 (80%)]	Loss: 0.253592
Train Epoch: 106 [8800/10000 (88%)]	Loss: 0.351030
Train Epoch: 106 [9600/10000 (96%)]	Loss: 0.392233
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 107 [0/10000 (0%)]	Loss: 0.356153
Train Epoch: 107 [800/10000 (8%)]	Loss: 0.274720
Train Epoch: 107 [1600/10000 (16%)]	Loss: 0.361972
Train Epoch: 107 [2400/10000 (24%)]	Loss: 0.290087
Train Epoch: 107 [3200/10000 (32%)]	Loss: 0.361930
Train Epoch: 107 [4000/10000 (40%)]	Loss: 0.279638
Train Epoch: 107 [4800/10000 (48%)]	Loss: 0.279212
Train Epoch: 107 [5600/10000 (56%)]	Loss: 0.320099
Train Epoch: 107 [6400/10000 (64%)]	Loss: 0.315357
Train Epoch: 107 [7200/10000 (72%)]	Loss: 0.278012
Train Epoch: 107 [8000/10000 (80%)]	Loss: 0.337307
Train Epoch: 107 [8800/10000 (88%)]	Loss: 0.328422
Train Epoch: 107 [9600/10000 (96%)]	Loss: 0.309117
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 108 [0/10000 (0%)]	Loss: 0.305104
Train Epoch: 108 [800/10000 (8%)]	Loss: 0.271114
Train Epoch: 108 [1600/10000 (16%)]	Loss: 0.305695
Train Epoch: 108 [2400/10000 (24%)]	Loss: 0.309307
Train Epoch: 108 [3200/10000 (32%)]	Loss: 0.329346
Train Epoch: 108 [4000/10000 (40%)]	Loss: 0.339907
Train Epoch: 108 [4800/10000 (48%)]	Loss: 0.286334
Train Epoch: 108 [5600/10000 (56%)]	Loss: 0.266954
Train Epoch: 108 [6400/10000 (64%)]	Loss: 0.300462
Train Epoch: 108 [7200/10000 (72%)]	Loss: 0.308049
Train Epoch: 108 [8000/10000 (80%)]	Loss: 0.307605
Train Epoch: 108 [8800/10000 (88%)]	Loss: 0.358728
Train Epoch: 108 [9600/10000 (96%)]	Loss: 0.314814
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 109 [0/10000 (0%)]	Loss: 0.271206
Train Epoch: 109 [800/10000 (8%)]	Loss: 0.314492
Train Epoch: 109 [1600/10000 (16%)]	Loss: 0.326308
Train Epoch: 109 [2400/10000 (24%)]	Loss: 0.308345
Train Epoch: 109 [3200/10000 (32%)]	Loss: 0.271734
Train Epoch: 109 [4000/10000 (40%)]	Loss: 0.314378
Train Epoch: 109 [4800/10000 (48%)]	Loss: 0.320513
Train Epoch: 109 [5600/10000 (56%)]	Loss: 0.321472
Train Epoch: 109 [6400/10000 (64%)]	Loss: 0.323398
Train Epoch: 109 [7200/10000 (72%)]	Loss: 0.312129
Train Epoch: 109 [8000/10000 (80%)]	Loss: 0.304783
Train Epoch: 109 [8800/10000 (88%)]	Loss: 0.305867
Train Epoch: 109 [9600/10000 (96%)]	Loss: 0.310797
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 110 [0/10000 (0%)]	Loss: 0.300743
Train Epoch: 110 [800/10000 (8%)]	Loss: 0.321023
Train Epoch: 110 [1600/10000 (16%)]	Loss: 0.291252
Train Epoch: 110 [2400/10000 (24%)]	Loss: 0.301021
Train Epoch: 110 [3200/10000 (32%)]	Loss: 0.293319
Train Epoch: 110 [4000/10000 (40%)]	Loss: 0.266885
Train Epoch: 110 [4800/10000 (48%)]	Loss: 0.352413
Train Epoch: 110 [5600/10000 (56%)]	Loss: 0.275191
Train Epoch: 110 [6400/10000 (64%)]	Loss: 0.352849
Train Epoch: 110 [7200/10000 (72%)]	Loss: 0.290588
Train Epoch: 110 [8000/10000 (80%)]	Loss: 0.334361
Train Epoch: 110 [8800/10000 (88%)]	Loss: 0.292054
Train Epoch: 110 [9600/10000 (96%)]	Loss: 0.293912
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 111 [0/10000 (0%)]	Loss: 0.353366
Train Epoch: 111 [800/10000 (8%)]	Loss: 0.372775
Train Epoch: 111 [1600/10000 (16%)]	Loss: 0.303428
Train Epoch: 111 [2400/10000 (24%)]	Loss: 0.279296
Train Epoch: 111 [3200/10000 (32%)]	Loss: 0.331399
Train Epoch: 111 [4000/10000 (40%)]	Loss: 0.369286
Train Epoch: 111 [4800/10000 (48%)]	Loss: 0.340085
Train Epoch: 111 [5600/10000 (56%)]	Loss: 0.312489
Train Epoch: 111 [6400/10000 (64%)]	Loss: 0.290060
Train Epoch: 111 [7200/10000 (72%)]	Loss: 0.324067
Train Epoch: 111 [8000/10000 (80%)]	Loss: 0.316475
Train Epoch: 111 [8800/10000 (88%)]	Loss: 0.272430
Train Epoch: 111 [9600/10000 (96%)]	Loss: 0.247097
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 112 [0/10000 (0%)]	Loss: 0.296631
Train Epoch: 112 [800/10000 (8%)]	Loss: 0.310722
Train Epoch: 112 [1600/10000 (16%)]	Loss: 0.304995
Train Epoch: 112 [2400/10000 (24%)]	Loss: 0.307112
Train Epoch: 112 [3200/10000 (32%)]	Loss: 0.316768
Train Epoch: 112 [4000/10000 (40%)]	Loss: 0.266718
Train Epoch: 112 [4800/10000 (48%)]	Loss: 0.322210
Train Epoch: 112 [5600/10000 (56%)]	Loss: 0.329217
Train Epoch: 112 [6400/10000 (64%)]	Loss: 0.306734
Train Epoch: 112 [7200/10000 (72%)]	Loss: 0.302558
Train Epoch: 112 [8000/10000 (80%)]	Loss: 0.344558
Train Epoch: 112 [8800/10000 (88%)]	Loss: 0.316227
Train Epoch: 112 [9600/10000 (96%)]	Loss: 0.351310
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 113 [0/10000 (0%)]	Loss: 0.320279
Train Epoch: 113 [800/10000 (8%)]	Loss: 0.302174
Train Epoch: 113 [1600/10000 (16%)]	Loss: 0.310450
Train Epoch: 113 [2400/10000 (24%)]	Loss: 0.294813
Train Epoch: 113 [3200/10000 (32%)]	Loss: 0.303409
Train Epoch: 113 [4000/10000 (40%)]	Loss: 0.307436
Train Epoch: 113 [4800/10000 (48%)]	Loss: 0.266123
Train Epoch: 113 [5600/10000 (56%)]	Loss: 0.327546
Train Epoch: 113 [6400/10000 (64%)]	Loss: 0.286669
Train Epoch: 113 [7200/10000 (72%)]	Loss: 0.292112
Train Epoch: 113 [8000/10000 (80%)]	Loss: 0.292273
Train Epoch: 113 [8800/10000 (88%)]	Loss: 0.332088
Train Epoch: 113 [9600/10000 (96%)]	Loss: 0.296320
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 114 [0/10000 (0%)]	Loss: 0.274183
Train Epoch: 114 [800/10000 (8%)]	Loss: 0.309825
Train Epoch: 114 [1600/10000 (16%)]	Loss: 0.282988
Train Epoch: 114 [2400/10000 (24%)]	Loss: 0.309793
Train Epoch: 114 [3200/10000 (32%)]	Loss: 0.279623
Train Epoch: 114 [4000/10000 (40%)]	Loss: 0.349778
Train Epoch: 114 [4800/10000 (48%)]	Loss: 0.289900
Train Epoch: 114 [5600/10000 (56%)]	Loss: 0.286783
Train Epoch: 114 [6400/10000 (64%)]	Loss: 0.319844
Train Epoch: 114 [7200/10000 (72%)]	Loss: 0.303700
Train Epoch: 114 [8000/10000 (80%)]	Loss: 0.324526
Train Epoch: 114 [8800/10000 (88%)]	Loss: 0.319578
Train Epoch: 114 [9600/10000 (96%)]	Loss: 0.309215
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 115 [0/10000 (0%)]	Loss: 0.337926
Train Epoch: 115 [800/10000 (8%)]	Loss: 0.307348
Train Epoch: 115 [1600/10000 (16%)]	Loss: 0.278258
Train Epoch: 115 [2400/10000 (24%)]	Loss: 0.295605
Train Epoch: 115 [3200/10000 (32%)]	Loss: 0.294519
Train Epoch: 115 [4000/10000 (40%)]	Loss: 0.308854
Train Epoch: 115 [4800/10000 (48%)]	Loss: 0.294698
Train Epoch: 115 [5600/10000 (56%)]	Loss: 0.305632
Train Epoch: 115 [6400/10000 (64%)]	Loss: 0.297507
Train Epoch: 115 [7200/10000 (72%)]	Loss: 0.271271
Train Epoch: 115 [8000/10000 (80%)]	Loss: 0.324818
Train Epoch: 115 [8800/10000 (88%)]	Loss: 0.306457
Train Epoch: 115 [9600/10000 (96%)]	Loss: 0.310621
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 116 [0/10000 (0%)]	Loss: 0.335256
Train Epoch: 116 [800/10000 (8%)]	Loss: 0.312042
Train Epoch: 116 [1600/10000 (16%)]	Loss: 0.296034
Train Epoch: 116 [2400/10000 (24%)]	Loss: 0.299033
Train Epoch: 116 [3200/10000 (32%)]	Loss: 0.298738
Train Epoch: 116 [4000/10000 (40%)]	Loss: 0.305423
Train Epoch: 116 [4800/10000 (48%)]	Loss: 0.317946
Train Epoch: 116 [5600/10000 (56%)]	Loss: 0.284941
Train Epoch: 116 [6400/10000 (64%)]	Loss: 0.321097
Train Epoch: 116 [7200/10000 (72%)]	Loss: 0.285281
Train Epoch: 116 [8000/10000 (80%)]	Loss: 0.283532
Train Epoch: 116 [8800/10000 (88%)]	Loss: 0.326424
Train Epoch: 116 [9600/10000 (96%)]	Loss: 0.296733
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 117 [0/10000 (0%)]	Loss: 0.360795
Train Epoch: 117 [800/10000 (8%)]	Loss: 0.350760
Train Epoch: 117 [1600/10000 (16%)]	Loss: 0.329348
Train Epoch: 117 [2400/10000 (24%)]	Loss: 0.280384
Train Epoch: 117 [3200/10000 (32%)]	Loss: 0.318790
Train Epoch: 117 [4000/10000 (40%)]	Loss: 0.264735
Train Epoch: 117 [4800/10000 (48%)]	Loss: 0.315100
Train Epoch: 117 [5600/10000 (56%)]	Loss: 0.315874
Train Epoch: 117 [6400/10000 (64%)]	Loss: 0.374273
Train Epoch: 117 [7200/10000 (72%)]	Loss: 0.316470
Train Epoch: 117 [8000/10000 (80%)]	Loss: 0.265325
Train Epoch: 117 [8800/10000 (88%)]	Loss: 0.283945
Train Epoch: 117 [9600/10000 (96%)]	Loss: 0.319549
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 118 [0/10000 (0%)]	Loss: 0.310945
Train Epoch: 118 [800/10000 (8%)]	Loss: 0.280303
Train Epoch: 118 [1600/10000 (16%)]	Loss: 0.331257
Train Epoch: 118 [2400/10000 (24%)]	Loss: 0.303866
Train Epoch: 118 [3200/10000 (32%)]	Loss: 0.316657
Train Epoch: 118 [4000/10000 (40%)]	Loss: 0.302324
Train Epoch: 118 [4800/10000 (48%)]	Loss: 0.341575
Train Epoch: 118 [5600/10000 (56%)]	Loss: 0.345273
Train Epoch: 118 [6400/10000 (64%)]	Loss: 0.294901
Train Epoch: 118 [7200/10000 (72%)]	Loss: 0.348239
Train Epoch: 118 [8000/10000 (80%)]	Loss: 0.288908
Train Epoch: 118 [8800/10000 (88%)]	Loss: 0.319887
Train Epoch: 118 [9600/10000 (96%)]	Loss: 0.288720
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 119 [0/10000 (0%)]	Loss: 0.296940
Train Epoch: 119 [800/10000 (8%)]	Loss: 0.305674
Train Epoch: 119 [1600/10000 (16%)]	Loss: 0.316492
Train Epoch: 119 [2400/10000 (24%)]	Loss: 0.345706
Train Epoch: 119 [3200/10000 (32%)]	Loss: 0.346086
Train Epoch: 119 [4000/10000 (40%)]	Loss: 0.336736
Train Epoch: 119 [4800/10000 (48%)]	Loss: 0.319790
Train Epoch: 119 [5600/10000 (56%)]	Loss: 0.297795
Train Epoch: 119 [6400/10000 (64%)]	Loss: 0.338615
Train Epoch: 119 [7200/10000 (72%)]	Loss: 0.274289
Train Epoch: 119 [8000/10000 (80%)]	Loss: 0.336935
Train Epoch: 119 [8800/10000 (88%)]	Loss: 0.271009
Train Epoch: 119 [9600/10000 (96%)]	Loss: 0.327075
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 120 [0/10000 (0%)]	Loss: 0.306661
Train Epoch: 120 [800/10000 (8%)]	Loss: 0.313764
Train Epoch: 120 [1600/10000 (16%)]	Loss: 0.300132
Train Epoch: 120 [2400/10000 (24%)]	Loss: 0.300869
Train Epoch: 120 [3200/10000 (32%)]	Loss: 0.287482
Train Epoch: 120 [4000/10000 (40%)]	Loss: 0.302678
Train Epoch: 120 [4800/10000 (48%)]	Loss: 0.325642
Train Epoch: 120 [5600/10000 (56%)]	Loss: 0.375786
Train Epoch: 120 [6400/10000 (64%)]	Loss: 0.290066
Train Epoch: 120 [7200/10000 (72%)]	Loss: 0.287288
Train Epoch: 120 [8000/10000 (80%)]	Loss: 0.309852
Train Epoch: 120 [8800/10000 (88%)]	Loss: 0.309674
Train Epoch: 120 [9600/10000 (96%)]	Loss: 0.289355
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 121 [0/10000 (0%)]	Loss: 0.350926
Train Epoch: 121 [800/10000 (8%)]	Loss: 0.322530
Train Epoch: 121 [1600/10000 (16%)]	Loss: 0.319455
Train Epoch: 121 [2400/10000 (24%)]	Loss: 0.322918
Train Epoch: 121 [3200/10000 (32%)]	Loss: 0.322337
Train Epoch: 121 [4000/10000 (40%)]	Loss: 0.328541
Train Epoch: 121 [4800/10000 (48%)]	Loss: 0.303632
Train Epoch: 121 [5600/10000 (56%)]	Loss: 0.286269
Train Epoch: 121 [6400/10000 (64%)]	Loss: 0.282881
Train Epoch: 121 [7200/10000 (72%)]	Loss: 0.299425
Train Epoch: 121 [8000/10000 (80%)]	Loss: 0.306597
Train Epoch: 121 [8800/10000 (88%)]	Loss: 0.350252
Train Epoch: 121 [9600/10000 (96%)]	Loss: 0.321574
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 122 [0/10000 (0%)]	Loss: 0.299508
Train Epoch: 122 [800/10000 (8%)]	Loss: 0.313951
Train Epoch: 122 [1600/10000 (16%)]	Loss: 0.315048
Train Epoch: 122 [2400/10000 (24%)]	Loss: 0.335644
Train Epoch: 122 [3200/10000 (32%)]	Loss: 0.328339
Train Epoch: 122 [4000/10000 (40%)]	Loss: 0.304649
Train Epoch: 122 [4800/10000 (48%)]	Loss: 0.336071
Train Epoch: 122 [5600/10000 (56%)]	Loss: 0.298086
Train Epoch: 122 [6400/10000 (64%)]	Loss: 0.289849
Train Epoch: 122 [7200/10000 (72%)]	Loss: 0.331822
Train Epoch: 122 [8000/10000 (80%)]	Loss: 0.281451
Train Epoch: 122 [8800/10000 (88%)]	Loss: 0.324970
Train Epoch: 122 [9600/10000 (96%)]	Loss: 0.314512
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 123 [0/10000 (0%)]	Loss: 0.331601
Train Epoch: 123 [800/10000 (8%)]	Loss: 0.311797
Train Epoch: 123 [1600/10000 (16%)]	Loss: 0.310977
Train Epoch: 123 [2400/10000 (24%)]	Loss: 0.298966
Train Epoch: 123 [3200/10000 (32%)]	Loss: 0.304762
Train Epoch: 123 [4000/10000 (40%)]	Loss: 0.319235
Train Epoch: 123 [4800/10000 (48%)]	Loss: 0.322956
Train Epoch: 123 [5600/10000 (56%)]	Loss: 0.372636
Train Epoch: 123 [6400/10000 (64%)]	Loss: 0.272980
Train Epoch: 123 [7200/10000 (72%)]	Loss: 0.307706
Train Epoch: 123 [8000/10000 (80%)]	Loss: 0.321304
Train Epoch: 123 [8800/10000 (88%)]	Loss: 0.303676
Train Epoch: 123 [9600/10000 (96%)]	Loss: 0.300838
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 124 [0/10000 (0%)]	Loss: 0.291380
Train Epoch: 124 [800/10000 (8%)]	Loss: 0.335938
Train Epoch: 124 [1600/10000 (16%)]	Loss: 0.308821
Train Epoch: 124 [2400/10000 (24%)]	Loss: 0.294588
Train Epoch: 124 [3200/10000 (32%)]	Loss: 0.292979
Train Epoch: 124 [4000/10000 (40%)]	Loss: 0.326926
Train Epoch: 124 [4800/10000 (48%)]	Loss: 0.303230
Train Epoch: 124 [5600/10000 (56%)]	Loss: 0.314614
Train Epoch: 124 [6400/10000 (64%)]	Loss: 0.324460
Train Epoch: 124 [7200/10000 (72%)]	Loss: 0.326117
Train Epoch: 124 [8000/10000 (80%)]	Loss: 0.318416
Train Epoch: 124 [8800/10000 (88%)]	Loss: 0.304124
Train Epoch: 124 [9600/10000 (96%)]	Loss: 0.329500
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 125 [0/10000 (0%)]	Loss: 0.297966
Train Epoch: 125 [800/10000 (8%)]	Loss: 0.350744
Train Epoch: 125 [1600/10000 (16%)]	Loss: 0.373744
Train Epoch: 125 [2400/10000 (24%)]	Loss: 0.334054
Train Epoch: 125 [3200/10000 (32%)]	Loss: 0.291893
Train Epoch: 125 [4000/10000 (40%)]	Loss: 0.310998
Train Epoch: 125 [4800/10000 (48%)]	Loss: 0.361535
Train Epoch: 125 [5600/10000 (56%)]	Loss: 0.307277
Train Epoch: 125 [6400/10000 (64%)]	Loss: 0.293495
Train Epoch: 125 [7200/10000 (72%)]	Loss: 0.300945
Train Epoch: 125 [8000/10000 (80%)]	Loss: 0.315350
Train Epoch: 125 [8800/10000 (88%)]	Loss: 0.323818
Train Epoch: 125 [9600/10000 (96%)]	Loss: 0.282191
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 126 [0/10000 (0%)]	Loss: 0.324302
Train Epoch: 126 [800/10000 (8%)]	Loss: 0.273440
Train Epoch: 126 [1600/10000 (16%)]	Loss: 0.292400
Train Epoch: 126 [2400/10000 (24%)]	Loss: 0.291337
Train Epoch: 126 [3200/10000 (32%)]	Loss: 0.345636
Train Epoch: 126 [4000/10000 (40%)]	Loss: 0.323982
Train Epoch: 126 [4800/10000 (48%)]	Loss: 0.311691
Train Epoch: 126 [5600/10000 (56%)]	Loss: 0.353842
Train Epoch: 126 [6400/10000 (64%)]	Loss: 0.275027
Train Epoch: 126 [7200/10000 (72%)]	Loss: 0.370160
Train Epoch: 126 [8000/10000 (80%)]	Loss: 0.295044
Train Epoch: 126 [8800/10000 (88%)]	Loss: 0.300616
Train Epoch: 126 [9600/10000 (96%)]	Loss: 0.355025
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 127 [0/10000 (0%)]	Loss: 0.297487
Train Epoch: 127 [800/10000 (8%)]	Loss: 0.316093
Train Epoch: 127 [1600/10000 (16%)]	Loss: 0.342235
Train Epoch: 127 [2400/10000 (24%)]	Loss: 0.301120
Train Epoch: 127 [3200/10000 (32%)]	Loss: 0.359278
Train Epoch: 127 [4000/10000 (40%)]	Loss: 0.311319
Train Epoch: 127 [4800/10000 (48%)]	Loss: 0.304686
Train Epoch: 127 [5600/10000 (56%)]	Loss: 0.302013
Train Epoch: 127 [6400/10000 (64%)]	Loss: 0.336481
Train Epoch: 127 [7200/10000 (72%)]	Loss: 0.333210
Train Epoch: 127 [8000/10000 (80%)]	Loss: 0.295413
Train Epoch: 127 [8800/10000 (88%)]	Loss: 0.321342
Train Epoch: 127 [9600/10000 (96%)]	Loss: 0.304121
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 128 [0/10000 (0%)]	Loss: 0.309829
Train Epoch: 128 [800/10000 (8%)]	Loss: 0.364156
Train Epoch: 128 [1600/10000 (16%)]	Loss: 0.391480
Train Epoch: 128 [2400/10000 (24%)]	Loss: 0.323475
Train Epoch: 128 [3200/10000 (32%)]	Loss: 0.320634
Train Epoch: 128 [4000/10000 (40%)]	Loss: 0.334624
Train Epoch: 128 [4800/10000 (48%)]	Loss: 0.277444
Train Epoch: 128 [5600/10000 (56%)]	Loss: 0.328142
Train Epoch: 128 [6400/10000 (64%)]	Loss: 0.310136
Train Epoch: 128 [7200/10000 (72%)]	Loss: 0.329193
Train Epoch: 128 [8000/10000 (80%)]	Loss: 0.316507
Train Epoch: 128 [8800/10000 (88%)]	Loss: 0.304075
Train Epoch: 128 [9600/10000 (96%)]	Loss: 0.327219
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 129 [0/10000 (0%)]	Loss: 0.325768
Train Epoch: 129 [800/10000 (8%)]	Loss: 0.332932
Train Epoch: 129 [1600/10000 (16%)]	Loss: 0.312921
Train Epoch: 129 [2400/10000 (24%)]	Loss: 0.270996
Train Epoch: 129 [3200/10000 (32%)]	Loss: 0.307182
Train Epoch: 129 [4000/10000 (40%)]	Loss: 0.292287
Train Epoch: 129 [4800/10000 (48%)]	Loss: 0.326900
Train Epoch: 129 [5600/10000 (56%)]	Loss: 0.326958
Train Epoch: 129 [6400/10000 (64%)]	Loss: 0.283739
Train Epoch: 129 [7200/10000 (72%)]	Loss: 0.278464
Train Epoch: 129 [8000/10000 (80%)]	Loss: 0.302727
Train Epoch: 129 [8800/10000 (88%)]	Loss: 0.276668
Train Epoch: 129 [9600/10000 (96%)]	Loss: 0.274872
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 130 [0/10000 (0%)]	Loss: 0.321759
Train Epoch: 130 [800/10000 (8%)]	Loss: 0.274487
Train Epoch: 130 [1600/10000 (16%)]	Loss: 0.319365
Train Epoch: 130 [2400/10000 (24%)]	Loss: 0.281813
Train Epoch: 130 [3200/10000 (32%)]	Loss: 0.307866
Train Epoch: 130 [4000/10000 (40%)]	Loss: 0.269261
Train Epoch: 130 [4800/10000 (48%)]	Loss: 0.280570
Train Epoch: 130 [5600/10000 (56%)]	Loss: 0.293721
Train Epoch: 130 [6400/10000 (64%)]	Loss: 0.321344
Train Epoch: 130 [7200/10000 (72%)]	Loss: 0.286956
Train Epoch: 130 [8000/10000 (80%)]	Loss: 0.326266
Train Epoch: 130 [8800/10000 (88%)]	Loss: 0.262110
Train Epoch: 130 [9600/10000 (96%)]	Loss: 0.342654
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 131 [0/10000 (0%)]	Loss: 0.300922
Train Epoch: 131 [800/10000 (8%)]	Loss: 0.375486
Train Epoch: 131 [1600/10000 (16%)]	Loss: 0.301181
Train Epoch: 131 [2400/10000 (24%)]	Loss: 0.298386
Train Epoch: 131 [3200/10000 (32%)]	Loss: 0.357370
Train Epoch: 131 [4000/10000 (40%)]	Loss: 0.300958
Train Epoch: 131 [4800/10000 (48%)]	Loss: 0.349615
Train Epoch: 131 [5600/10000 (56%)]	Loss: 0.316269
Train Epoch: 131 [6400/10000 (64%)]	Loss: 0.274856
Train Epoch: 131 [7200/10000 (72%)]	Loss: 0.302711
Train Epoch: 131 [8000/10000 (80%)]	Loss: 0.290999
Train Epoch: 131 [8800/10000 (88%)]	Loss: 0.349626
Train Epoch: 131 [9600/10000 (96%)]	Loss: 0.312027
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 132 [0/10000 (0%)]	Loss: 0.301553
Train Epoch: 132 [800/10000 (8%)]	Loss: 0.257686
Train Epoch: 132 [1600/10000 (16%)]	Loss: 0.320235
Train Epoch: 132 [2400/10000 (24%)]	Loss: 0.302367
Train Epoch: 132 [3200/10000 (32%)]	Loss: 0.278569
Train Epoch: 132 [4000/10000 (40%)]	Loss: 0.284964
Train Epoch: 132 [4800/10000 (48%)]	Loss: 0.323253
Train Epoch: 132 [5600/10000 (56%)]	Loss: 0.341250
Train Epoch: 132 [6400/10000 (64%)]	Loss: 0.331158
Train Epoch: 132 [7200/10000 (72%)]	Loss: 0.329868
Train Epoch: 132 [8000/10000 (80%)]	Loss: 0.293805
Train Epoch: 132 [8800/10000 (88%)]	Loss: 0.320900
Train Epoch: 132 [9600/10000 (96%)]	Loss: 0.343669
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 133 [0/10000 (0%)]	Loss: 0.271617
Train Epoch: 133 [800/10000 (8%)]	Loss: 0.294812
Train Epoch: 133 [1600/10000 (16%)]	Loss: 0.287505
Train Epoch: 133 [2400/10000 (24%)]	Loss: 0.269349
Train Epoch: 133 [3200/10000 (32%)]	Loss: 0.276294
Train Epoch: 133 [4000/10000 (40%)]	Loss: 0.286348
Train Epoch: 133 [4800/10000 (48%)]	Loss: 0.329054
Train Epoch: 133 [5600/10000 (56%)]	Loss: 0.349909
Train Epoch: 133 [6400/10000 (64%)]	Loss: 0.302779
Train Epoch: 133 [7200/10000 (72%)]	Loss: 0.322182
Train Epoch: 133 [8000/10000 (80%)]	Loss: 0.292480
Train Epoch: 133 [8800/10000 (88%)]	Loss: 0.298819
Train Epoch: 133 [9600/10000 (96%)]	Loss: 0.296763
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 134 [0/10000 (0%)]	Loss: 0.312813
Train Epoch: 134 [800/10000 (8%)]	Loss: 0.300345
Train Epoch: 134 [1600/10000 (16%)]	Loss: 0.340070
Train Epoch: 134 [2400/10000 (24%)]	Loss: 0.305154
Train Epoch: 134 [3200/10000 (32%)]	Loss: 0.280535
Train Epoch: 134 [4000/10000 (40%)]	Loss: 0.376288
Train Epoch: 134 [4800/10000 (48%)]	Loss: 0.362993
Train Epoch: 134 [5600/10000 (56%)]	Loss: 0.282308
Train Epoch: 134 [6400/10000 (64%)]	Loss: 0.345294
Train Epoch: 134 [7200/10000 (72%)]	Loss: 0.284527
Train Epoch: 134 [8000/10000 (80%)]	Loss: 0.298669
Train Epoch: 134 [8800/10000 (88%)]	Loss: 0.303678
Train Epoch: 134 [9600/10000 (96%)]	Loss: 0.313293
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 135 [0/10000 (0%)]	Loss: 0.285198
Train Epoch: 135 [800/10000 (8%)]	Loss: 0.283674
Train Epoch: 135 [1600/10000 (16%)]	Loss: 0.260031
Train Epoch: 135 [2400/10000 (24%)]	Loss: 0.304533
Train Epoch: 135 [3200/10000 (32%)]	Loss: 0.298140
Train Epoch: 135 [4000/10000 (40%)]	Loss: 0.334233
Train Epoch: 135 [4800/10000 (48%)]	Loss: 0.308539
Train Epoch: 135 [5600/10000 (56%)]	Loss: 0.338454
Train Epoch: 135 [6400/10000 (64%)]	Loss: 0.323811
Train Epoch: 135 [7200/10000 (72%)]	Loss: 0.307925
Train Epoch: 135 [8000/10000 (80%)]	Loss: 0.319462
Train Epoch: 135 [8800/10000 (88%)]	Loss: 0.319970
Train Epoch: 135 [9600/10000 (96%)]	Loss: 0.278628
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 136 [0/10000 (0%)]	Loss: 0.279039
Train Epoch: 136 [800/10000 (8%)]	Loss: 0.303797
Train Epoch: 136 [1600/10000 (16%)]	Loss: 0.318184
Train Epoch: 136 [2400/10000 (24%)]	Loss: 0.262576
Train Epoch: 136 [3200/10000 (32%)]	Loss: 0.336986
Train Epoch: 136 [4000/10000 (40%)]	Loss: 0.279426
Train Epoch: 136 [4800/10000 (48%)]	Loss: 0.283961
Train Epoch: 136 [5600/10000 (56%)]	Loss: 0.302261
Train Epoch: 136 [6400/10000 (64%)]	Loss: 0.318291
Train Epoch: 136 [7200/10000 (72%)]	Loss: 0.269707
Train Epoch: 136 [8000/10000 (80%)]	Loss: 0.323925
Train Epoch: 136 [8800/10000 (88%)]	Loss: 0.295822
Train Epoch: 136 [9600/10000 (96%)]	Loss: 0.349860
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 137 [0/10000 (0%)]	Loss: 0.305790
Train Epoch: 137 [800/10000 (8%)]	Loss: 0.339387
Train Epoch: 137 [1600/10000 (16%)]	Loss: 0.335464
Train Epoch: 137 [2400/10000 (24%)]	Loss: 0.287236
Train Epoch: 137 [3200/10000 (32%)]	Loss: 0.308329
Train Epoch: 137 [4000/10000 (40%)]	Loss: 0.316751
Train Epoch: 137 [4800/10000 (48%)]	Loss: 0.322951
Train Epoch: 137 [5600/10000 (56%)]	Loss: 0.317392
Train Epoch: 137 [6400/10000 (64%)]	Loss: 0.304739
Train Epoch: 137 [7200/10000 (72%)]	Loss: 0.294605
Train Epoch: 137 [8000/10000 (80%)]	Loss: 0.313503
Train Epoch: 137 [8800/10000 (88%)]	Loss: 0.315534
Train Epoch: 137 [9600/10000 (96%)]	Loss: 0.344183
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 138 [0/10000 (0%)]	Loss: 0.250024
Train Epoch: 138 [800/10000 (8%)]	Loss: 0.306982
Train Epoch: 138 [1600/10000 (16%)]	Loss: 0.277031
Train Epoch: 138 [2400/10000 (24%)]	Loss: 0.273414
Train Epoch: 138 [3200/10000 (32%)]	Loss: 0.312018
Train Epoch: 138 [4000/10000 (40%)]	Loss: 0.295811
Train Epoch: 138 [4800/10000 (48%)]	Loss: 0.278791
Train Epoch: 138 [5600/10000 (56%)]	Loss: 0.306601
Train Epoch: 138 [6400/10000 (64%)]	Loss: 0.308280
Train Epoch: 138 [7200/10000 (72%)]	Loss: 0.315129
Train Epoch: 138 [8000/10000 (80%)]	Loss: 0.336506
Train Epoch: 138 [8800/10000 (88%)]	Loss: 0.323047
Train Epoch: 138 [9600/10000 (96%)]	Loss: 0.280052
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 139 [0/10000 (0%)]	Loss: 0.276453
Train Epoch: 139 [800/10000 (8%)]	Loss: 0.325414
Train Epoch: 139 [1600/10000 (16%)]	Loss: 0.316932
Train Epoch: 139 [2400/10000 (24%)]	Loss: 0.314780
Train Epoch: 139 [3200/10000 (32%)]	Loss: 0.316144
Train Epoch: 139 [4000/10000 (40%)]	Loss: 0.309375
Train Epoch: 139 [4800/10000 (48%)]	Loss: 0.304670
Train Epoch: 139 [5600/10000 (56%)]	Loss: 0.302391
Train Epoch: 139 [6400/10000 (64%)]	Loss: 0.287199
Train Epoch: 139 [7200/10000 (72%)]	Loss: 0.303422
Train Epoch: 139 [8000/10000 (80%)]	Loss: 0.306607
Train Epoch: 139 [8800/10000 (88%)]	Loss: 0.311738
Train Epoch: 139 [9600/10000 (96%)]	Loss: 0.304760
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 140 [0/10000 (0%)]	Loss: 0.340072
Train Epoch: 140 [800/10000 (8%)]	Loss: 0.321985
Train Epoch: 140 [1600/10000 (16%)]	Loss: 0.318280
Train Epoch: 140 [2400/10000 (24%)]	Loss: 0.303836
Train Epoch: 140 [3200/10000 (32%)]	Loss: 0.327162
Train Epoch: 140 [4000/10000 (40%)]	Loss: 0.319412
Train Epoch: 140 [4800/10000 (48%)]	Loss: 0.326811
Train Epoch: 140 [5600/10000 (56%)]	Loss: 0.325073
Train Epoch: 140 [6400/10000 (64%)]	Loss: 0.281778
Train Epoch: 140 [7200/10000 (72%)]	Loss: 0.313948
Train Epoch: 140 [8000/10000 (80%)]	Loss: 0.299285
Train Epoch: 140 [8800/10000 (88%)]	Loss: 0.311132
Train Epoch: 140 [9600/10000 (96%)]	Loss: 0.329557
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 141 [0/10000 (0%)]	Loss: 0.313072
Train Epoch: 141 [800/10000 (8%)]	Loss: 0.288083
Train Epoch: 141 [1600/10000 (16%)]	Loss: 0.305727
Train Epoch: 141 [2400/10000 (24%)]	Loss: 0.303412
Train Epoch: 141 [3200/10000 (32%)]	Loss: 0.347921
Train Epoch: 141 [4000/10000 (40%)]	Loss: 0.287025
Train Epoch: 141 [4800/10000 (48%)]	Loss: 0.293065
Train Epoch: 141 [5600/10000 (56%)]	Loss: 0.324453
Train Epoch: 141 [6400/10000 (64%)]	Loss: 0.287401
Train Epoch: 141 [7200/10000 (72%)]	Loss: 0.312100
Train Epoch: 141 [8000/10000 (80%)]	Loss: 0.294301
Train Epoch: 141 [8800/10000 (88%)]	Loss: 0.301299
Train Epoch: 141 [9600/10000 (96%)]	Loss: 0.323827
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 142 [0/10000 (0%)]	Loss: 0.282711
Train Epoch: 142 [800/10000 (8%)]	Loss: 0.299532
Train Epoch: 142 [1600/10000 (16%)]	Loss: 0.314577
Train Epoch: 142 [2400/10000 (24%)]	Loss: 0.300695
Train Epoch: 142 [3200/10000 (32%)]	Loss: 0.275548
Train Epoch: 142 [4000/10000 (40%)]	Loss: 0.301323
Train Epoch: 142 [4800/10000 (48%)]	Loss: 0.315423
Train Epoch: 142 [5600/10000 (56%)]	Loss: 0.271580
Train Epoch: 142 [6400/10000 (64%)]	Loss: 0.329367
Train Epoch: 142 [7200/10000 (72%)]	Loss: 0.309722
Train Epoch: 142 [8000/10000 (80%)]	Loss: 0.325045
Train Epoch: 142 [8800/10000 (88%)]	Loss: 0.320424
Train Epoch: 142 [9600/10000 (96%)]	Loss: 0.306292
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 143 [0/10000 (0%)]	Loss: 0.287554
Train Epoch: 143 [800/10000 (8%)]	Loss: 0.326367
Train Epoch: 143 [1600/10000 (16%)]	Loss: 0.289794
Train Epoch: 143 [2400/10000 (24%)]	Loss: 0.302599
Train Epoch: 143 [3200/10000 (32%)]	Loss: 0.346493
Train Epoch: 143 [4000/10000 (40%)]	Loss: 0.277007
Train Epoch: 143 [4800/10000 (48%)]	Loss: 0.327299
Train Epoch: 143 [5600/10000 (56%)]	Loss: 0.310328
Train Epoch: 143 [6400/10000 (64%)]	Loss: 0.268140
Train Epoch: 143 [7200/10000 (72%)]	Loss: 0.304216
Train Epoch: 143 [8000/10000 (80%)]	Loss: 0.283094
Train Epoch: 143 [8800/10000 (88%)]	Loss: 0.310507
Train Epoch: 143 [9600/10000 (96%)]	Loss: 0.424577
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 144 [0/10000 (0%)]	Loss: 0.300191
Train Epoch: 144 [800/10000 (8%)]	Loss: 0.293307
Train Epoch: 144 [1600/10000 (16%)]	Loss: 0.320222
Train Epoch: 144 [2400/10000 (24%)]	Loss: 0.303021
Train Epoch: 144 [3200/10000 (32%)]	Loss: 0.297193
Train Epoch: 144 [4000/10000 (40%)]	Loss: 0.328181
Train Epoch: 144 [4800/10000 (48%)]	Loss: 0.345251
Train Epoch: 144 [5600/10000 (56%)]	Loss: 0.297077
Train Epoch: 144 [6400/10000 (64%)]	Loss: 0.304167
Train Epoch: 144 [7200/10000 (72%)]	Loss: 0.319558
Train Epoch: 144 [8000/10000 (80%)]	Loss: 0.320206
Train Epoch: 144 [8800/10000 (88%)]	Loss: 0.358749
Train Epoch: 144 [9600/10000 (96%)]	Loss: 0.304028
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 145 [0/10000 (0%)]	Loss: 0.333786
Train Epoch: 145 [800/10000 (8%)]	Loss: 0.347651
Train Epoch: 145 [1600/10000 (16%)]	Loss: 0.297201
Train Epoch: 145 [2400/10000 (24%)]	Loss: 0.331748
Train Epoch: 145 [3200/10000 (32%)]	Loss: 0.340384
Train Epoch: 145 [4000/10000 (40%)]	Loss: 0.292337
Train Epoch: 145 [4800/10000 (48%)]	Loss: 0.316732
Train Epoch: 145 [5600/10000 (56%)]	Loss: 0.295980
Train Epoch: 145 [6400/10000 (64%)]	Loss: 0.324290
Train Epoch: 145 [7200/10000 (72%)]	Loss: 0.293207
Train Epoch: 145 [8000/10000 (80%)]	Loss: 0.322922
Train Epoch: 145 [8800/10000 (88%)]	Loss: 0.346373
Train Epoch: 145 [9600/10000 (96%)]	Loss: 0.296631
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 146 [0/10000 (0%)]	Loss: 0.310647
Train Epoch: 146 [800/10000 (8%)]	Loss: 0.361707
Train Epoch: 146 [1600/10000 (16%)]	Loss: 0.353608
Train Epoch: 146 [2400/10000 (24%)]	Loss: 0.293833
Train Epoch: 146 [3200/10000 (32%)]	Loss: 0.346987
Train Epoch: 146 [4000/10000 (40%)]	Loss: 0.274941
Train Epoch: 146 [4800/10000 (48%)]	Loss: 0.330846
Train Epoch: 146 [5600/10000 (56%)]	Loss: 0.260153
Train Epoch: 146 [6400/10000 (64%)]	Loss: 0.304021
Train Epoch: 146 [7200/10000 (72%)]	Loss: 0.319570
Train Epoch: 146 [8000/10000 (80%)]	Loss: 0.380141
Train Epoch: 146 [8800/10000 (88%)]	Loss: 0.335238
Train Epoch: 146 [9600/10000 (96%)]	Loss: 0.332190
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 147 [0/10000 (0%)]	Loss: 0.334540
Train Epoch: 147 [800/10000 (8%)]	Loss: 0.298934
Train Epoch: 147 [1600/10000 (16%)]	Loss: 0.308150
Train Epoch: 147 [2400/10000 (24%)]	Loss: 0.291288
Train Epoch: 147 [3200/10000 (32%)]	Loss: 0.286840
Train Epoch: 147 [4000/10000 (40%)]	Loss: 0.325126
Train Epoch: 147 [4800/10000 (48%)]	Loss: 0.303145
Train Epoch: 147 [5600/10000 (56%)]	Loss: 0.292013
Train Epoch: 147 [6400/10000 (64%)]	Loss: 0.272021
Train Epoch: 147 [7200/10000 (72%)]	Loss: 0.290986
Train Epoch: 147 [8000/10000 (80%)]	Loss: 0.278853
Train Epoch: 147 [8800/10000 (88%)]	Loss: 0.276348
Train Epoch: 147 [9600/10000 (96%)]	Loss: 0.282202
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 148 [0/10000 (0%)]	Loss: 0.291180
Train Epoch: 148 [800/10000 (8%)]	Loss: 0.318834
Train Epoch: 148 [1600/10000 (16%)]	Loss: 0.303779
Train Epoch: 148 [2400/10000 (24%)]	Loss: 0.279394
Train Epoch: 148 [3200/10000 (32%)]	Loss: 0.360900
Train Epoch: 148 [4000/10000 (40%)]	Loss: 0.291128
Train Epoch: 148 [4800/10000 (48%)]	Loss: 0.274561
Train Epoch: 148 [5600/10000 (56%)]	Loss: 0.284862
Train Epoch: 148 [6400/10000 (64%)]	Loss: 0.269247
Train Epoch: 148 [7200/10000 (72%)]	Loss: 0.272955
Train Epoch: 148 [8000/10000 (80%)]	Loss: 0.287061
Train Epoch: 148 [8800/10000 (88%)]	Loss: 0.315168
Train Epoch: 148 [9600/10000 (96%)]	Loss: 0.287071
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 149 [0/10000 (0%)]	Loss: 0.287768
Train Epoch: 149 [800/10000 (8%)]	Loss: 0.367007
Train Epoch: 149 [1600/10000 (16%)]	Loss: 0.349355
Train Epoch: 149 [2400/10000 (24%)]	Loss: 0.311812
Train Epoch: 149 [3200/10000 (32%)]	Loss: 0.319740
Train Epoch: 149 [4000/10000 (40%)]	Loss: 0.287900
Train Epoch: 149 [4800/10000 (48%)]	Loss: 0.302511
Train Epoch: 149 [5600/10000 (56%)]	Loss: 0.292657
Train Epoch: 149 [6400/10000 (64%)]	Loss: 0.284248
Train Epoch: 149 [7200/10000 (72%)]	Loss: 0.390350
Train Epoch: 149 [8000/10000 (80%)]	Loss: 0.300910
Train Epoch: 149 [8800/10000 (88%)]	Loss: 0.356135
Train Epoch: 149 [9600/10000 (96%)]	Loss: 0.316966
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 150 [0/10000 (0%)]	Loss: 0.347167
Train Epoch: 150 [800/10000 (8%)]	Loss: 0.407225
Train Epoch: 150 [1600/10000 (16%)]	Loss: 0.289938
Train Epoch: 150 [2400/10000 (24%)]	Loss: 0.326841
Train Epoch: 150 [3200/10000 (32%)]	Loss: 0.290525
Train Epoch: 150 [4000/10000 (40%)]	Loss: 0.287471
Train Epoch: 150 [4800/10000 (48%)]	Loss: 0.300879
Train Epoch: 150 [5600/10000 (56%)]	Loss: 0.362889
Train Epoch: 150 [6400/10000 (64%)]	Loss: 0.313094
Train Epoch: 150 [7200/10000 (72%)]	Loss: 0.296040
Train Epoch: 150 [8000/10000 (80%)]	Loss: 0.307415
Train Epoch: 150 [8800/10000 (88%)]	Loss: 0.323975
Train Epoch: 150 [9600/10000 (96%)]	Loss: 0.306836
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 151 [0/10000 (0%)]	Loss: 0.334755
Train Epoch: 151 [800/10000 (8%)]	Loss: 0.333315
Train Epoch: 151 [1600/10000 (16%)]	Loss: 0.318795
Train Epoch: 151 [2400/10000 (24%)]	Loss: 0.346641
Train Epoch: 151 [3200/10000 (32%)]	Loss: 0.329961
Train Epoch: 151 [4000/10000 (40%)]	Loss: 0.262866
Train Epoch: 151 [4800/10000 (48%)]	Loss: 0.295811
Train Epoch: 151 [5600/10000 (56%)]	Loss: 0.302589
Train Epoch: 151 [6400/10000 (64%)]	Loss: 0.264604
Train Epoch: 151 [7200/10000 (72%)]	Loss: 0.329689
Train Epoch: 151 [8000/10000 (80%)]	Loss: 0.285968
Train Epoch: 151 [8800/10000 (88%)]	Loss: 0.296521
Train Epoch: 151 [9600/10000 (96%)]	Loss: 0.352005
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 152 [0/10000 (0%)]	Loss: 0.296573
Train Epoch: 152 [800/10000 (8%)]	Loss: 0.325874
Train Epoch: 152 [1600/10000 (16%)]	Loss: 0.289406
Train Epoch: 152 [2400/10000 (24%)]	Loss: 0.312422
Train Epoch: 152 [3200/10000 (32%)]	Loss: 0.295160
Train Epoch: 152 [4000/10000 (40%)]	Loss: 0.320180
Train Epoch: 152 [4800/10000 (48%)]	Loss: 0.326879
Train Epoch: 152 [5600/10000 (56%)]	Loss: 0.282365
Train Epoch: 152 [6400/10000 (64%)]	Loss: 0.299331
Train Epoch: 152 [7200/10000 (72%)]	Loss: 0.309671
Train Epoch: 152 [8000/10000 (80%)]	Loss: 0.294394
Train Epoch: 152 [8800/10000 (88%)]	Loss: 0.314041
Train Epoch: 152 [9600/10000 (96%)]	Loss: 0.324188
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 153 [0/10000 (0%)]	Loss: 0.305870
Train Epoch: 153 [800/10000 (8%)]	Loss: 0.308306
Train Epoch: 153 [1600/10000 (16%)]	Loss: 0.290550
Train Epoch: 153 [2400/10000 (24%)]	Loss: 0.309492
Train Epoch: 153 [3200/10000 (32%)]	Loss: 0.301020
Train Epoch: 153 [4000/10000 (40%)]	Loss: 0.322385
Train Epoch: 153 [4800/10000 (48%)]	Loss: 0.331076
Train Epoch: 153 [5600/10000 (56%)]	Loss: 0.324477
Train Epoch: 153 [6400/10000 (64%)]	Loss: 0.287569
Train Epoch: 153 [7200/10000 (72%)]	Loss: 0.380047
Train Epoch: 153 [8000/10000 (80%)]	Loss: 0.345646
Train Epoch: 153 [8800/10000 (88%)]	Loss: 0.306714
Train Epoch: 153 [9600/10000 (96%)]	Loss: 0.280512
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 154 [0/10000 (0%)]	Loss: 0.293979
Train Epoch: 154 [800/10000 (8%)]	Loss: 0.276149
Train Epoch: 154 [1600/10000 (16%)]	Loss: 0.298467
Train Epoch: 154 [2400/10000 (24%)]	Loss: 0.285554
Train Epoch: 154 [3200/10000 (32%)]	Loss: 0.337575
Train Epoch: 154 [4000/10000 (40%)]	Loss: 0.356303
Train Epoch: 154 [4800/10000 (48%)]	Loss: 0.316329
Train Epoch: 154 [5600/10000 (56%)]	Loss: 0.319653
Train Epoch: 154 [6400/10000 (64%)]	Loss: 0.317566
Train Epoch: 154 [7200/10000 (72%)]	Loss: 0.310299
Train Epoch: 154 [8000/10000 (80%)]	Loss: 0.320384
Train Epoch: 154 [8800/10000 (88%)]	Loss: 0.295427
Train Epoch: 154 [9600/10000 (96%)]	Loss: 0.342929
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 155 [0/10000 (0%)]	Loss: 0.317763
Train Epoch: 155 [800/10000 (8%)]	Loss: 0.303424
Train Epoch: 155 [1600/10000 (16%)]	Loss: 0.335494
Train Epoch: 155 [2400/10000 (24%)]	Loss: 0.275269
Train Epoch: 155 [3200/10000 (32%)]	Loss: 0.342861
Train Epoch: 155 [4000/10000 (40%)]	Loss: 0.309897
Train Epoch: 155 [4800/10000 (48%)]	Loss: 0.278052
Train Epoch: 155 [5600/10000 (56%)]	Loss: 0.336251
Train Epoch: 155 [6400/10000 (64%)]	Loss: 0.273450
Train Epoch: 155 [7200/10000 (72%)]	Loss: 0.296085
Train Epoch: 155 [8000/10000 (80%)]	Loss: 0.300195
Train Epoch: 155 [8800/10000 (88%)]	Loss: 0.290482
Train Epoch: 155 [9600/10000 (96%)]	Loss: 0.316037
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 156 [0/10000 (0%)]	Loss: 0.274240
Train Epoch: 156 [800/10000 (8%)]	Loss: 0.353927
Train Epoch: 156 [1600/10000 (16%)]	Loss: 0.322310
Train Epoch: 156 [2400/10000 (24%)]	Loss: 0.335589
Train Epoch: 156 [3200/10000 (32%)]	Loss: 0.309931
Train Epoch: 156 [4000/10000 (40%)]	Loss: 0.308934
Train Epoch: 156 [4800/10000 (48%)]	Loss: 0.323068
Train Epoch: 156 [5600/10000 (56%)]	Loss: 0.364447
Train Epoch: 156 [6400/10000 (64%)]	Loss: 0.342776
Train Epoch: 156 [7200/10000 (72%)]	Loss: 0.306414
Train Epoch: 156 [8000/10000 (80%)]	Loss: 0.330124
Train Epoch: 156 [8800/10000 (88%)]	Loss: 0.319931
Train Epoch: 156 [9600/10000 (96%)]	Loss: 0.304188
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 157 [0/10000 (0%)]	Loss: 0.363327
Train Epoch: 157 [800/10000 (8%)]	Loss: 0.299243
Train Epoch: 157 [1600/10000 (16%)]	Loss: 0.347796
Train Epoch: 157 [2400/10000 (24%)]	Loss: 0.355879
Train Epoch: 157 [3200/10000 (32%)]	Loss: 0.323737
Train Epoch: 157 [4000/10000 (40%)]	Loss: 0.323140
Train Epoch: 157 [4800/10000 (48%)]	Loss: 0.353911
Train Epoch: 157 [5600/10000 (56%)]	Loss: 0.304122
Train Epoch: 157 [6400/10000 (64%)]	Loss: 0.297518
Train Epoch: 157 [7200/10000 (72%)]	Loss: 0.288383
Train Epoch: 157 [8000/10000 (80%)]	Loss: 0.276725
Train Epoch: 157 [8800/10000 (88%)]	Loss: 0.306744
Train Epoch: 157 [9600/10000 (96%)]	Loss: 0.285407
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 158 [0/10000 (0%)]	Loss: 0.363670
Train Epoch: 158 [800/10000 (8%)]	Loss: 0.307795
Train Epoch: 158 [1600/10000 (16%)]	Loss: 0.303836
Train Epoch: 158 [2400/10000 (24%)]	Loss: 0.321936
Train Epoch: 158 [3200/10000 (32%)]	Loss: 0.291348
Train Epoch: 158 [4000/10000 (40%)]	Loss: 0.300166
Train Epoch: 158 [4800/10000 (48%)]	Loss: 0.266284
Train Epoch: 158 [5600/10000 (56%)]	Loss: 0.302575
Train Epoch: 158 [6400/10000 (64%)]	Loss: 0.290250
Train Epoch: 158 [7200/10000 (72%)]	Loss: 0.333454
Train Epoch: 158 [8000/10000 (80%)]	Loss: 0.298219
Train Epoch: 158 [8800/10000 (88%)]	Loss: 0.324317
Train Epoch: 158 [9600/10000 (96%)]	Loss: 0.281104
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 159 [0/10000 (0%)]	Loss: 0.333555
Train Epoch: 159 [800/10000 (8%)]	Loss: 0.278580
Train Epoch: 159 [1600/10000 (16%)]	Loss: 0.328934
Train Epoch: 159 [2400/10000 (24%)]	Loss: 0.321111
Train Epoch: 159 [3200/10000 (32%)]	Loss: 0.312755
Train Epoch: 159 [4000/10000 (40%)]	Loss: 0.332732
Train Epoch: 159 [4800/10000 (48%)]	Loss: 0.286025
Train Epoch: 159 [5600/10000 (56%)]	Loss: 0.323926
Train Epoch: 159 [6400/10000 (64%)]	Loss: 0.286057
Train Epoch: 159 [7200/10000 (72%)]	Loss: 0.284412
Train Epoch: 159 [8000/10000 (80%)]	Loss: 0.297922
Train Epoch: 159 [8800/10000 (88%)]	Loss: 0.307888
Train Epoch: 159 [9600/10000 (96%)]	Loss: 0.281230
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 160 [0/10000 (0%)]	Loss: 0.309552
Train Epoch: 160 [800/10000 (8%)]	Loss: 0.324638
Train Epoch: 160 [1600/10000 (16%)]	Loss: 0.308710
Train Epoch: 160 [2400/10000 (24%)]	Loss: 0.290606
Train Epoch: 160 [3200/10000 (32%)]	Loss: 0.326562
Train Epoch: 160 [4000/10000 (40%)]	Loss: 0.270388
Train Epoch: 160 [4800/10000 (48%)]	Loss: 0.317045
Train Epoch: 160 [5600/10000 (56%)]	Loss: 0.278146
Train Epoch: 160 [6400/10000 (64%)]	Loss: 0.305910
Train Epoch: 160 [7200/10000 (72%)]	Loss: 0.288334
Train Epoch: 160 [8000/10000 (80%)]	Loss: 0.294490
Train Epoch: 160 [8800/10000 (88%)]	Loss: 0.325009
Train Epoch: 160 [9600/10000 (96%)]	Loss: 0.320310
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 161 [0/10000 (0%)]	Loss: 0.364762
Train Epoch: 161 [800/10000 (8%)]	Loss: 0.286718
Train Epoch: 161 [1600/10000 (16%)]	Loss: 0.258884
Train Epoch: 161 [2400/10000 (24%)]	Loss: 0.298114
Train Epoch: 161 [3200/10000 (32%)]	Loss: 0.332502
Train Epoch: 161 [4000/10000 (40%)]	Loss: 0.292183
Train Epoch: 161 [4800/10000 (48%)]	Loss: 0.316064
Train Epoch: 161 [5600/10000 (56%)]	Loss: 0.373370
Train Epoch: 161 [6400/10000 (64%)]	Loss: 0.327366
Train Epoch: 161 [7200/10000 (72%)]	Loss: 0.319040
Train Epoch: 161 [8000/10000 (80%)]	Loss: 0.306577
Train Epoch: 161 [8800/10000 (88%)]	Loss: 0.291958
Train Epoch: 161 [9600/10000 (96%)]	Loss: 0.340232
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 162 [0/10000 (0%)]	Loss: 0.290570
Train Epoch: 162 [800/10000 (8%)]	Loss: 0.303837
Train Epoch: 162 [1600/10000 (16%)]	Loss: 0.315330
Train Epoch: 162 [2400/10000 (24%)]	Loss: 0.303725
Train Epoch: 162 [3200/10000 (32%)]	Loss: 0.289055
Train Epoch: 162 [4000/10000 (40%)]	Loss: 0.340706
Train Epoch: 162 [4800/10000 (48%)]	Loss: 0.314931
Train Epoch: 162 [5600/10000 (56%)]	Loss: 0.319050
Train Epoch: 162 [6400/10000 (64%)]	Loss: 0.332473
Train Epoch: 162 [7200/10000 (72%)]	Loss: 0.331664
Train Epoch: 162 [8000/10000 (80%)]	Loss: 0.290838
Train Epoch: 162 [8800/10000 (88%)]	Loss: 0.287371
Train Epoch: 162 [9600/10000 (96%)]	Loss: 0.321492
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 163 [0/10000 (0%)]	Loss: 0.309605
Train Epoch: 163 [800/10000 (8%)]	Loss: 0.307810
Train Epoch: 163 [1600/10000 (16%)]	Loss: 0.279196
Train Epoch: 163 [2400/10000 (24%)]	Loss: 0.277175
Train Epoch: 163 [3200/10000 (32%)]	Loss: 0.278747
Train Epoch: 163 [4000/10000 (40%)]	Loss: 0.266562
Train Epoch: 163 [4800/10000 (48%)]	Loss: 0.307477
Train Epoch: 163 [5600/10000 (56%)]	Loss: 0.286817
Train Epoch: 163 [6400/10000 (64%)]	Loss: 0.317456
Train Epoch: 163 [7200/10000 (72%)]	Loss: 0.288848
Train Epoch: 163 [8000/10000 (80%)]	Loss: 0.294744
Train Epoch: 163 [8800/10000 (88%)]	Loss: 0.284420
Train Epoch: 163 [9600/10000 (96%)]	Loss: 0.310696
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 164 [0/10000 (0%)]	Loss: 0.307186
Train Epoch: 164 [800/10000 (8%)]	Loss: 0.292452
Train Epoch: 164 [1600/10000 (16%)]	Loss: 0.301398
Train Epoch: 164 [2400/10000 (24%)]	Loss: 0.298364
Train Epoch: 164 [3200/10000 (32%)]	Loss: 0.280654
Train Epoch: 164 [4000/10000 (40%)]	Loss: 0.313898
Train Epoch: 164 [4800/10000 (48%)]	Loss: 0.300222
Train Epoch: 164 [5600/10000 (56%)]	Loss: 0.318224
Train Epoch: 164 [6400/10000 (64%)]	Loss: 0.305666
Train Epoch: 164 [7200/10000 (72%)]	Loss: 0.262977
Train Epoch: 164 [8000/10000 (80%)]	Loss: 0.303536
Train Epoch: 164 [8800/10000 (88%)]	Loss: 0.303249
Train Epoch: 164 [9600/10000 (96%)]	Loss: 0.347659
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 165 [0/10000 (0%)]	Loss: 0.311338
Train Epoch: 165 [800/10000 (8%)]	Loss: 0.304360
Train Epoch: 165 [1600/10000 (16%)]	Loss: 0.290123
Train Epoch: 165 [2400/10000 (24%)]	Loss: 0.280503
Train Epoch: 165 [3200/10000 (32%)]	Loss: 0.366241
Train Epoch: 165 [4000/10000 (40%)]	Loss: 0.355249
Train Epoch: 165 [4800/10000 (48%)]	Loss: 0.303291
Train Epoch: 165 [5600/10000 (56%)]	Loss: 0.327909
Train Epoch: 165 [6400/10000 (64%)]	Loss: 0.329501
Train Epoch: 165 [7200/10000 (72%)]	Loss: 0.270565
Train Epoch: 165 [8000/10000 (80%)]	Loss: 0.319173
Train Epoch: 165 [8800/10000 (88%)]	Loss: 0.294177
Train Epoch: 165 [9600/10000 (96%)]	Loss: 0.329073
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 166 [0/10000 (0%)]	Loss: 0.295240
Train Epoch: 166 [800/10000 (8%)]	Loss: 0.359847
Train Epoch: 166 [1600/10000 (16%)]	Loss: 0.311729
Train Epoch: 166 [2400/10000 (24%)]	Loss: 0.329737
Train Epoch: 166 [3200/10000 (32%)]	Loss: 0.358483
Train Epoch: 166 [4000/10000 (40%)]	Loss: 0.320071
Train Epoch: 166 [4800/10000 (48%)]	Loss: 0.334199
Train Epoch: 166 [5600/10000 (56%)]	Loss: 0.335782
Train Epoch: 166 [6400/10000 (64%)]	Loss: 0.292591
Train Epoch: 166 [7200/10000 (72%)]	Loss: 0.288438
Train Epoch: 166 [8000/10000 (80%)]	Loss: 0.328672
Train Epoch: 166 [8800/10000 (88%)]	Loss: 0.316665
Train Epoch: 166 [9600/10000 (96%)]	Loss: 0.323913
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 167 [0/10000 (0%)]	Loss: 0.301125
Train Epoch: 167 [800/10000 (8%)]	Loss: 0.287995
Train Epoch: 167 [1600/10000 (16%)]	Loss: 0.345443
Train Epoch: 167 [2400/10000 (24%)]	Loss: 0.286451
Train Epoch: 167 [3200/10000 (32%)]	Loss: 0.338763
Train Epoch: 167 [4000/10000 (40%)]	Loss: 0.394964
Train Epoch: 167 [4800/10000 (48%)]	Loss: 0.327622
Train Epoch: 167 [5600/10000 (56%)]	Loss: 0.352225
Train Epoch: 167 [6400/10000 (64%)]	Loss: 0.339654
Train Epoch: 167 [7200/10000 (72%)]	Loss: 0.281989
Train Epoch: 167 [8000/10000 (80%)]	Loss: 0.275245
Train Epoch: 167 [8800/10000 (88%)]	Loss: 0.313373
Train Epoch: 167 [9600/10000 (96%)]	Loss: 0.310456
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 168 [0/10000 (0%)]	Loss: 0.306840
Train Epoch: 168 [800/10000 (8%)]	Loss: 0.354983
Train Epoch: 168 [1600/10000 (16%)]	Loss: 0.305441
Train Epoch: 168 [2400/10000 (24%)]	Loss: 0.288786
Train Epoch: 168 [3200/10000 (32%)]	Loss: 0.271770
Train Epoch: 168 [4000/10000 (40%)]	Loss: 0.309879
Train Epoch: 168 [4800/10000 (48%)]	Loss: 0.324059
Train Epoch: 168 [5600/10000 (56%)]	Loss: 0.288073
Train Epoch: 168 [6400/10000 (64%)]	Loss: 0.287175
Train Epoch: 168 [7200/10000 (72%)]	Loss: 0.332534
Train Epoch: 168 [8000/10000 (80%)]	Loss: 0.328399
Train Epoch: 168 [8800/10000 (88%)]	Loss: 0.287434
Train Epoch: 168 [9600/10000 (96%)]	Loss: 0.326779
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 169 [0/10000 (0%)]	Loss: 0.305126
Train Epoch: 169 [800/10000 (8%)]	Loss: 0.309747
Train Epoch: 169 [1600/10000 (16%)]	Loss: 0.283689
Train Epoch: 169 [2400/10000 (24%)]	Loss: 0.316165
Train Epoch: 169 [3200/10000 (32%)]	Loss: 0.326157
Train Epoch: 169 [4000/10000 (40%)]	Loss: 0.294725
Train Epoch: 169 [4800/10000 (48%)]	Loss: 0.300294
Train Epoch: 169 [5600/10000 (56%)]	Loss: 0.310224
Train Epoch: 169 [6400/10000 (64%)]	Loss: 0.300499
Train Epoch: 169 [7200/10000 (72%)]	Loss: 0.329877
Train Epoch: 169 [8000/10000 (80%)]	Loss: 0.315668
Train Epoch: 169 [8800/10000 (88%)]	Loss: 0.287653
Train Epoch: 169 [9600/10000 (96%)]	Loss: 0.286762
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 170 [0/10000 (0%)]	Loss: 0.282392
Train Epoch: 170 [800/10000 (8%)]	Loss: 0.307941
Train Epoch: 170 [1600/10000 (16%)]	Loss: 0.339193
Train Epoch: 170 [2400/10000 (24%)]	Loss: 0.304201
Train Epoch: 170 [3200/10000 (32%)]	Loss: 0.308142
Train Epoch: 170 [4000/10000 (40%)]	Loss: 0.295277
Train Epoch: 170 [4800/10000 (48%)]	Loss: 0.313458
Train Epoch: 170 [5600/10000 (56%)]	Loss: 0.329579
Train Epoch: 170 [6400/10000 (64%)]	Loss: 0.323971
Train Epoch: 170 [7200/10000 (72%)]	Loss: 0.273935
Train Epoch: 170 [8000/10000 (80%)]	Loss: 0.295343
Train Epoch: 170 [8800/10000 (88%)]	Loss: 0.285830
Train Epoch: 170 [9600/10000 (96%)]	Loss: 0.336098
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 171 [0/10000 (0%)]	Loss: 0.306324
Train Epoch: 171 [800/10000 (8%)]	Loss: 0.307197
Train Epoch: 171 [1600/10000 (16%)]	Loss: 0.324606
Train Epoch: 171 [2400/10000 (24%)]	Loss: 0.295737
Train Epoch: 171 [3200/10000 (32%)]	Loss: 0.263457
Train Epoch: 171 [4000/10000 (40%)]	Loss: 0.340520
Train Epoch: 171 [4800/10000 (48%)]	Loss: 0.309928
Train Epoch: 171 [5600/10000 (56%)]	Loss: 0.311932
Train Epoch: 171 [6400/10000 (64%)]	Loss: 0.300469
Train Epoch: 171 [7200/10000 (72%)]	Loss: 0.285033
Train Epoch: 171 [8000/10000 (80%)]	Loss: 0.354771
Train Epoch: 171 [8800/10000 (88%)]	Loss: 0.336992
Train Epoch: 171 [9600/10000 (96%)]	Loss: 0.314956
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 172 [0/10000 (0%)]	Loss: 0.321309
Train Epoch: 172 [800/10000 (8%)]	Loss: 0.292284
Train Epoch: 172 [1600/10000 (16%)]	Loss: 0.286706
Train Epoch: 172 [2400/10000 (24%)]	Loss: 0.335351
Train Epoch: 172 [3200/10000 (32%)]	Loss: 0.305841
Train Epoch: 172 [4000/10000 (40%)]	Loss: 0.291705
Train Epoch: 172 [4800/10000 (48%)]	Loss: 0.288011
Train Epoch: 172 [5600/10000 (56%)]	Loss: 0.315225
Train Epoch: 172 [6400/10000 (64%)]	Loss: 0.336300
Train Epoch: 172 [7200/10000 (72%)]	Loss: 0.326668
Train Epoch: 172 [8000/10000 (80%)]	Loss: 0.312043
Train Epoch: 172 [8800/10000 (88%)]	Loss: 0.329017
Train Epoch: 172 [9600/10000 (96%)]	Loss: 0.316033
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 173 [0/10000 (0%)]	Loss: 0.394374
Train Epoch: 173 [800/10000 (8%)]	Loss: 0.254581
Train Epoch: 173 [1600/10000 (16%)]	Loss: 0.304863
Train Epoch: 173 [2400/10000 (24%)]	Loss: 0.299305
Train Epoch: 173 [3200/10000 (32%)]	Loss: 0.325834
Train Epoch: 173 [4000/10000 (40%)]	Loss: 0.309372
Train Epoch: 173 [4800/10000 (48%)]	Loss: 0.312158
Train Epoch: 173 [5600/10000 (56%)]	Loss: 0.366137
Train Epoch: 173 [6400/10000 (64%)]	Loss: 0.347213
Train Epoch: 173 [7200/10000 (72%)]	Loss: 0.299649
Train Epoch: 173 [8000/10000 (80%)]	Loss: 0.306821
Train Epoch: 173 [8800/10000 (88%)]	Loss: 0.314564
Train Epoch: 173 [9600/10000 (96%)]	Loss: 0.304223
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 174 [0/10000 (0%)]	Loss: 0.275547
Train Epoch: 174 [800/10000 (8%)]	Loss: 0.290400
Train Epoch: 174 [1600/10000 (16%)]	Loss: 0.321076
Train Epoch: 174 [2400/10000 (24%)]	Loss: 0.277460
Train Epoch: 174 [3200/10000 (32%)]	Loss: 0.291177
Train Epoch: 174 [4000/10000 (40%)]	Loss: 0.300141
Train Epoch: 174 [4800/10000 (48%)]	Loss: 0.325200
Train Epoch: 174 [5600/10000 (56%)]	Loss: 0.309114
Train Epoch: 174 [6400/10000 (64%)]	Loss: 0.325855
Train Epoch: 174 [7200/10000 (72%)]	Loss: 0.327126
Train Epoch: 174 [8000/10000 (80%)]	Loss: 0.312333
Train Epoch: 174 [8800/10000 (88%)]	Loss: 0.363239
Train Epoch: 174 [9600/10000 (96%)]	Loss: 0.322129
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 175 [0/10000 (0%)]	Loss: 0.366974
Train Epoch: 175 [800/10000 (8%)]	Loss: 0.326694
Train Epoch: 175 [1600/10000 (16%)]	Loss: 0.269587
Train Epoch: 175 [2400/10000 (24%)]	Loss: 0.288451
Train Epoch: 175 [3200/10000 (32%)]	Loss: 0.289787
Train Epoch: 175 [4000/10000 (40%)]	Loss: 0.272701
Train Epoch: 175 [4800/10000 (48%)]	Loss: 0.342686
Train Epoch: 175 [5600/10000 (56%)]	Loss: 0.271515
Train Epoch: 175 [6400/10000 (64%)]	Loss: 0.329677
Train Epoch: 175 [7200/10000 (72%)]	Loss: 0.307236
Train Epoch: 175 [8000/10000 (80%)]	Loss: 0.280409
Train Epoch: 175 [8800/10000 (88%)]	Loss: 0.287806
Train Epoch: 175 [9600/10000 (96%)]	Loss: 0.272420
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 176 [0/10000 (0%)]	Loss: 0.319917
Train Epoch: 176 [800/10000 (8%)]	Loss: 0.293836
Train Epoch: 176 [1600/10000 (16%)]	Loss: 0.273479
Train Epoch: 176 [2400/10000 (24%)]	Loss: 0.271150
Train Epoch: 176 [3200/10000 (32%)]	Loss: 0.306575
Train Epoch: 176 [4000/10000 (40%)]	Loss: 0.259145
Train Epoch: 176 [4800/10000 (48%)]	Loss: 0.312981
Train Epoch: 176 [5600/10000 (56%)]	Loss: 0.325069
Train Epoch: 176 [6400/10000 (64%)]	Loss: 0.271252
Train Epoch: 176 [7200/10000 (72%)]	Loss: 0.304972
Train Epoch: 176 [8000/10000 (80%)]	Loss: 0.292210
Train Epoch: 176 [8800/10000 (88%)]	Loss: 0.354114
Train Epoch: 176 [9600/10000 (96%)]	Loss: 0.292107
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 177 [0/10000 (0%)]	Loss: 0.340062
Train Epoch: 177 [800/10000 (8%)]	Loss: 0.323605
Train Epoch: 177 [1600/10000 (16%)]	Loss: 0.289290
Train Epoch: 177 [2400/10000 (24%)]	Loss: 0.307440
Train Epoch: 177 [3200/10000 (32%)]	Loss: 0.309554
Train Epoch: 177 [4000/10000 (40%)]	Loss: 0.309737
Train Epoch: 177 [4800/10000 (48%)]	Loss: 0.309537
Train Epoch: 177 [5600/10000 (56%)]	Loss: 0.266275
Train Epoch: 177 [6400/10000 (64%)]	Loss: 0.332633
Train Epoch: 177 [7200/10000 (72%)]	Loss: 0.305634
Train Epoch: 177 [8000/10000 (80%)]	Loss: 0.311976
Train Epoch: 177 [8800/10000 (88%)]	Loss: 0.307308
Train Epoch: 177 [9600/10000 (96%)]	Loss: 0.323463
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 178 [0/10000 (0%)]	Loss: 0.318523
Train Epoch: 178 [800/10000 (8%)]	Loss: 0.344189
Train Epoch: 178 [1600/10000 (16%)]	Loss: 0.313233
Train Epoch: 178 [2400/10000 (24%)]	Loss: 0.297697
Train Epoch: 178 [3200/10000 (32%)]	Loss: 0.356119
Train Epoch: 178 [4000/10000 (40%)]	Loss: 0.350487
Train Epoch: 178 [4800/10000 (48%)]	Loss: 0.305717
Train Epoch: 178 [5600/10000 (56%)]	Loss: 0.283021
Train Epoch: 178 [6400/10000 (64%)]	Loss: 0.316909
Train Epoch: 178 [7200/10000 (72%)]	Loss: 0.311282
Train Epoch: 178 [8000/10000 (80%)]	Loss: 0.276660
Train Epoch: 178 [8800/10000 (88%)]	Loss: 0.283800
Train Epoch: 178 [9600/10000 (96%)]	Loss: 0.293441
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 179 [0/10000 (0%)]	Loss: 0.291622
Train Epoch: 179 [800/10000 (8%)]	Loss: 0.316101
Train Epoch: 179 [1600/10000 (16%)]	Loss: 0.329566
Train Epoch: 179 [2400/10000 (24%)]	Loss: 0.319793
Train Epoch: 179 [3200/10000 (32%)]	Loss: 0.324969
Train Epoch: 179 [4000/10000 (40%)]	Loss: 0.289169
Train Epoch: 179 [4800/10000 (48%)]	Loss: 0.284650
Train Epoch: 179 [5600/10000 (56%)]	Loss: 0.289843
Train Epoch: 179 [6400/10000 (64%)]	Loss: 0.320344
Train Epoch: 179 [7200/10000 (72%)]	Loss: 0.288461
Train Epoch: 179 [8000/10000 (80%)]	Loss: 0.313552
Train Epoch: 179 [8800/10000 (88%)]	Loss: 0.322960
Train Epoch: 179 [9600/10000 (96%)]	Loss: 0.301367
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 180 [0/10000 (0%)]	Loss: 0.307723
Train Epoch: 180 [800/10000 (8%)]	Loss: 0.308442
Train Epoch: 180 [1600/10000 (16%)]	Loss: 0.331655
Train Epoch: 180 [2400/10000 (24%)]	Loss: 0.313000
Train Epoch: 180 [3200/10000 (32%)]	Loss: 0.303154
Train Epoch: 180 [4000/10000 (40%)]	Loss: 0.315693
Train Epoch: 180 [4800/10000 (48%)]	Loss: 0.314982
Train Epoch: 180 [5600/10000 (56%)]	Loss: 0.301127
Train Epoch: 180 [6400/10000 (64%)]	Loss: 0.313605
Train Epoch: 180 [7200/10000 (72%)]	Loss: 0.301262
Train Epoch: 180 [8000/10000 (80%)]	Loss: 0.332504
Train Epoch: 180 [8800/10000 (88%)]	Loss: 0.280818
Train Epoch: 180 [9600/10000 (96%)]	Loss: 0.278076
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 181 [0/10000 (0%)]	Loss: 0.307822
Train Epoch: 181 [800/10000 (8%)]	Loss: 0.314555
Train Epoch: 181 [1600/10000 (16%)]	Loss: 0.305485
Train Epoch: 181 [2400/10000 (24%)]	Loss: 0.320063
Train Epoch: 181 [3200/10000 (32%)]	Loss: 0.325985
Train Epoch: 181 [4000/10000 (40%)]	Loss: 0.337412
Train Epoch: 181 [4800/10000 (48%)]	Loss: 0.345759
Train Epoch: 181 [5600/10000 (56%)]	Loss: 0.265747
Train Epoch: 181 [6400/10000 (64%)]	Loss: 0.275864
Train Epoch: 181 [7200/10000 (72%)]	Loss: 0.323031
Train Epoch: 181 [8000/10000 (80%)]	Loss: 0.294354
Train Epoch: 181 [8800/10000 (88%)]	Loss: 0.337696
Train Epoch: 181 [9600/10000 (96%)]	Loss: 0.308700
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 182 [0/10000 (0%)]	Loss: 0.363099
Train Epoch: 182 [800/10000 (8%)]	Loss: 0.297546
Train Epoch: 182 [1600/10000 (16%)]	Loss: 0.293876
Train Epoch: 182 [2400/10000 (24%)]	Loss: 0.287986
Train Epoch: 182 [3200/10000 (32%)]	Loss: 0.343956
Train Epoch: 182 [4000/10000 (40%)]	Loss: 0.326395
Train Epoch: 182 [4800/10000 (48%)]	Loss: 0.379624
Train Epoch: 182 [5600/10000 (56%)]	Loss: 0.330829
Train Epoch: 182 [6400/10000 (64%)]	Loss: 0.404361
Train Epoch: 182 [7200/10000 (72%)]	Loss: 0.336267
Train Epoch: 182 [8000/10000 (80%)]	Loss: 0.280066
Train Epoch: 182 [8800/10000 (88%)]	Loss: 0.376848
Train Epoch: 182 [9600/10000 (96%)]	Loss: 0.279219
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 183 [0/10000 (0%)]	Loss: 0.294586
Train Epoch: 183 [800/10000 (8%)]	Loss: 0.313551
Train Epoch: 183 [1600/10000 (16%)]	Loss: 0.308567
Train Epoch: 183 [2400/10000 (24%)]	Loss: 0.299160
Train Epoch: 183 [3200/10000 (32%)]	Loss: 0.290871
Train Epoch: 183 [4000/10000 (40%)]	Loss: 0.310343
Train Epoch: 183 [4800/10000 (48%)]	Loss: 0.337481
Train Epoch: 183 [5600/10000 (56%)]	Loss: 0.302961
Train Epoch: 183 [6400/10000 (64%)]	Loss: 0.287509
Train Epoch: 183 [7200/10000 (72%)]	Loss: 0.378730
Train Epoch: 183 [8000/10000 (80%)]	Loss: 0.324740
Train Epoch: 183 [8800/10000 (88%)]	Loss: 0.317892
Train Epoch: 183 [9600/10000 (96%)]	Loss: 0.284390
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 184 [0/10000 (0%)]	Loss: 0.336463
Train Epoch: 184 [800/10000 (8%)]	Loss: 0.302153
Train Epoch: 184 [1600/10000 (16%)]	Loss: 0.260412
Train Epoch: 184 [2400/10000 (24%)]	Loss: 0.265211
Train Epoch: 184 [3200/10000 (32%)]	Loss: 0.344241
Train Epoch: 184 [4000/10000 (40%)]	Loss: 0.317209
Train Epoch: 184 [4800/10000 (48%)]	Loss: 0.278312
Train Epoch: 184 [5600/10000 (56%)]	Loss: 0.325998
Train Epoch: 184 [6400/10000 (64%)]	Loss: 0.282543
Train Epoch: 184 [7200/10000 (72%)]	Loss: 0.317296
Train Epoch: 184 [8000/10000 (80%)]	Loss: 0.306770
Train Epoch: 184 [8800/10000 (88%)]	Loss: 0.291105
Train Epoch: 184 [9600/10000 (96%)]	Loss: 0.300835
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 185 [0/10000 (0%)]	Loss: 0.334338
Train Epoch: 185 [800/10000 (8%)]	Loss: 0.308437
Train Epoch: 185 [1600/10000 (16%)]	Loss: 0.276319
Train Epoch: 185 [2400/10000 (24%)]	Loss: 0.271972
Train Epoch: 185 [3200/10000 (32%)]	Loss: 0.297843
Train Epoch: 185 [4000/10000 (40%)]	Loss: 0.302666
Train Epoch: 185 [4800/10000 (48%)]	Loss: 0.294236
Train Epoch: 185 [5600/10000 (56%)]	Loss: 0.295880
Train Epoch: 185 [6400/10000 (64%)]	Loss: 0.338405
Train Epoch: 185 [7200/10000 (72%)]	Loss: 0.285047
Train Epoch: 185 [8000/10000 (80%)]	Loss: 0.315336
Train Epoch: 185 [8800/10000 (88%)]	Loss: 0.307466
Train Epoch: 185 [9600/10000 (96%)]	Loss: 0.294834
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 186 [0/10000 (0%)]	Loss: 0.324505
Train Epoch: 186 [800/10000 (8%)]	Loss: 0.258478
Train Epoch: 186 [1600/10000 (16%)]	Loss: 0.279118
Train Epoch: 186 [2400/10000 (24%)]	Loss: 0.374916
Train Epoch: 186 [3200/10000 (32%)]	Loss: 0.284792
Train Epoch: 186 [4000/10000 (40%)]	Loss: 0.315780
Train Epoch: 186 [4800/10000 (48%)]	Loss: 0.293718
Train Epoch: 186 [5600/10000 (56%)]	Loss: 0.274407
Train Epoch: 186 [6400/10000 (64%)]	Loss: 0.285435
Train Epoch: 186 [7200/10000 (72%)]	Loss: 0.279747
Train Epoch: 186 [8000/10000 (80%)]	Loss: 0.293846
Train Epoch: 186 [8800/10000 (88%)]	Loss: 0.309922
Train Epoch: 186 [9600/10000 (96%)]	Loss: 0.327167
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 187 [0/10000 (0%)]	Loss: 0.297187
Train Epoch: 187 [800/10000 (8%)]	Loss: 0.297277
Train Epoch: 187 [1600/10000 (16%)]	Loss: 0.265877
Train Epoch: 187 [2400/10000 (24%)]	Loss: 0.320995
Train Epoch: 187 [3200/10000 (32%)]	Loss: 0.288051
Train Epoch: 187 [4000/10000 (40%)]	Loss: 0.305081
Train Epoch: 187 [4800/10000 (48%)]	Loss: 0.328651
Train Epoch: 187 [5600/10000 (56%)]	Loss: 0.310035
Train Epoch: 187 [6400/10000 (64%)]	Loss: 0.286527
Train Epoch: 187 [7200/10000 (72%)]	Loss: 0.290093
Train Epoch: 187 [8000/10000 (80%)]	Loss: 0.287843
Train Epoch: 187 [8800/10000 (88%)]	Loss: 0.298874
Train Epoch: 187 [9600/10000 (96%)]	Loss: 0.298294
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 188 [0/10000 (0%)]	Loss: 0.311309
Train Epoch: 188 [800/10000 (8%)]	Loss: 0.352011
Train Epoch: 188 [1600/10000 (16%)]	Loss: 0.317809
Train Epoch: 188 [2400/10000 (24%)]	Loss: 0.329369
Train Epoch: 188 [3200/10000 (32%)]	Loss: 0.303345
Train Epoch: 188 [4000/10000 (40%)]	Loss: 0.314006
Train Epoch: 188 [4800/10000 (48%)]	Loss: 0.289169
Train Epoch: 188 [5600/10000 (56%)]	Loss: 0.315898
Train Epoch: 188 [6400/10000 (64%)]	Loss: 0.261937
Train Epoch: 188 [7200/10000 (72%)]	Loss: 0.294340
Train Epoch: 188 [8000/10000 (80%)]	Loss: 0.291507
Train Epoch: 188 [8800/10000 (88%)]	Loss: 0.329303
Train Epoch: 188 [9600/10000 (96%)]	Loss: 0.289541
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 189 [0/10000 (0%)]	Loss: 0.327843
Train Epoch: 189 [800/10000 (8%)]	Loss: 0.314070
Train Epoch: 189 [1600/10000 (16%)]	Loss: 0.324432
Train Epoch: 189 [2400/10000 (24%)]	Loss: 0.301152
Train Epoch: 189 [3200/10000 (32%)]	Loss: 0.315662
Train Epoch: 189 [4000/10000 (40%)]	Loss: 0.324714
Train Epoch: 189 [4800/10000 (48%)]	Loss: 0.267263
Train Epoch: 189 [5600/10000 (56%)]	Loss: 0.305708
Train Epoch: 189 [6400/10000 (64%)]	Loss: 0.286350
Train Epoch: 189 [7200/10000 (72%)]	Loss: 0.316168
Train Epoch: 189 [8000/10000 (80%)]	Loss: 0.296226
Train Epoch: 189 [8800/10000 (88%)]	Loss: 0.351374
Train Epoch: 189 [9600/10000 (96%)]	Loss: 0.307837
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 190 [0/10000 (0%)]	Loss: 0.306871
Train Epoch: 190 [800/10000 (8%)]	Loss: 0.302503
Train Epoch: 190 [1600/10000 (16%)]	Loss: 0.324507
Train Epoch: 190 [2400/10000 (24%)]	Loss: 0.284861
Train Epoch: 190 [3200/10000 (32%)]	Loss: 0.299552
Train Epoch: 190 [4000/10000 (40%)]	Loss: 0.280113
Train Epoch: 190 [4800/10000 (48%)]	Loss: 0.283853
Train Epoch: 190 [5600/10000 (56%)]	Loss: 0.297459
Train Epoch: 190 [6400/10000 (64%)]	Loss: 0.309543
Train Epoch: 190 [7200/10000 (72%)]	Loss: 0.323308
Train Epoch: 190 [8000/10000 (80%)]	Loss: 0.305804
Train Epoch: 190 [8800/10000 (88%)]	Loss: 0.296813
Train Epoch: 190 [9600/10000 (96%)]	Loss: 0.291158
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 191 [0/10000 (0%)]	Loss: 0.311016
Train Epoch: 191 [800/10000 (8%)]	Loss: 0.250340
Train Epoch: 191 [1600/10000 (16%)]	Loss: 0.284848
Train Epoch: 191 [2400/10000 (24%)]	Loss: 0.321552
Train Epoch: 191 [3200/10000 (32%)]	Loss: 0.297046
Train Epoch: 191 [4000/10000 (40%)]	Loss: 0.296294
Train Epoch: 191 [4800/10000 (48%)]	Loss: 0.318540
Train Epoch: 191 [5600/10000 (56%)]	Loss: 0.320276
Train Epoch: 191 [6400/10000 (64%)]	Loss: 0.294440
Train Epoch: 191 [7200/10000 (72%)]	Loss: 0.284669
Train Epoch: 191 [8000/10000 (80%)]	Loss: 0.340154
Train Epoch: 191 [8800/10000 (88%)]	Loss: 0.327584
Train Epoch: 191 [9600/10000 (96%)]	Loss: 0.386766
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 192 [0/10000 (0%)]	Loss: 0.296428
Train Epoch: 192 [800/10000 (8%)]	Loss: 0.307245
Train Epoch: 192 [1600/10000 (16%)]	Loss: 0.377311
Train Epoch: 192 [2400/10000 (24%)]	Loss: 0.305771
Train Epoch: 192 [3200/10000 (32%)]	Loss: 0.310221
Train Epoch: 192 [4000/10000 (40%)]	Loss: 0.313673
Train Epoch: 192 [4800/10000 (48%)]	Loss: 0.290916
Train Epoch: 192 [5600/10000 (56%)]	Loss: 0.300283
Train Epoch: 192 [6400/10000 (64%)]	Loss: 0.303761
Train Epoch: 192 [7200/10000 (72%)]	Loss: 0.297103
Train Epoch: 192 [8000/10000 (80%)]	Loss: 0.303976
Train Epoch: 192 [8800/10000 (88%)]	Loss: 0.285364
Train Epoch: 192 [9600/10000 (96%)]	Loss: 0.349504
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 193 [0/10000 (0%)]	Loss: 0.307046
Train Epoch: 193 [800/10000 (8%)]	Loss: 0.307525
Train Epoch: 193 [1600/10000 (16%)]	Loss: 0.351586
Train Epoch: 193 [2400/10000 (24%)]	Loss: 0.378952
Train Epoch: 193 [3200/10000 (32%)]	Loss: 0.287642
Train Epoch: 193 [4000/10000 (40%)]	Loss: 0.320174
Train Epoch: 193 [4800/10000 (48%)]	Loss: 0.347825
Train Epoch: 193 [5600/10000 (56%)]	Loss: 0.351119
Train Epoch: 193 [6400/10000 (64%)]	Loss: 0.299614
Train Epoch: 193 [7200/10000 (72%)]	Loss: 0.340433
Train Epoch: 193 [8000/10000 (80%)]	Loss: 0.300154
Train Epoch: 193 [8800/10000 (88%)]	Loss: 0.296118
Train Epoch: 193 [9600/10000 (96%)]	Loss: 0.311989
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 194 [0/10000 (0%)]	Loss: 0.301776
Train Epoch: 194 [800/10000 (8%)]	Loss: 0.357800
Train Epoch: 194 [1600/10000 (16%)]	Loss: 0.330704
Train Epoch: 194 [2400/10000 (24%)]	Loss: 0.260459
Train Epoch: 194 [3200/10000 (32%)]	Loss: 0.350004
Train Epoch: 194 [4000/10000 (40%)]	Loss: 0.305341
Train Epoch: 194 [4800/10000 (48%)]	Loss: 0.361055
Train Epoch: 194 [5600/10000 (56%)]	Loss: 0.302888
Train Epoch: 194 [6400/10000 (64%)]	Loss: 0.304930
Train Epoch: 194 [7200/10000 (72%)]	Loss: 0.325885
Train Epoch: 194 [8000/10000 (80%)]	Loss: 0.279313
Train Epoch: 194 [8800/10000 (88%)]	Loss: 0.301848
Train Epoch: 194 [9600/10000 (96%)]	Loss: 0.327567
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 195 [0/10000 (0%)]	Loss: 0.303777
Train Epoch: 195 [800/10000 (8%)]	Loss: 0.358814
Train Epoch: 195 [1600/10000 (16%)]	Loss: 0.288362
Train Epoch: 195 [2400/10000 (24%)]	Loss: 0.275486
Train Epoch: 195 [3200/10000 (32%)]	Loss: 0.284656
Train Epoch: 195 [4000/10000 (40%)]	Loss: 0.305973
Train Epoch: 195 [4800/10000 (48%)]	Loss: 0.313849
Train Epoch: 195 [5600/10000 (56%)]	Loss: 0.311932
Train Epoch: 195 [6400/10000 (64%)]	Loss: 0.361064
Train Epoch: 195 [7200/10000 (72%)]	Loss: 0.279852
Train Epoch: 195 [8000/10000 (80%)]	Loss: 0.319128
Train Epoch: 195 [8800/10000 (88%)]	Loss: 0.323856
Train Epoch: 195 [9600/10000 (96%)]	Loss: 0.338503
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 196 [0/10000 (0%)]	Loss: 0.309813
Train Epoch: 196 [800/10000 (8%)]	Loss: 0.279256
Train Epoch: 196 [1600/10000 (16%)]	Loss: 0.289053
Train Epoch: 196 [2400/10000 (24%)]	Loss: 0.310492
Train Epoch: 196 [3200/10000 (32%)]	Loss: 0.314366
Train Epoch: 196 [4000/10000 (40%)]	Loss: 0.314348
Train Epoch: 196 [4800/10000 (48%)]	Loss: 0.300803
Train Epoch: 196 [5600/10000 (56%)]	Loss: 0.319368
Train Epoch: 196 [6400/10000 (64%)]	Loss: 0.284087
Train Epoch: 196 [7200/10000 (72%)]	Loss: 0.296983
Train Epoch: 196 [8000/10000 (80%)]	Loss: 0.329875
Train Epoch: 196 [8800/10000 (88%)]	Loss: 0.312680
Train Epoch: 196 [9600/10000 (96%)]	Loss: 0.259571
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 197 [0/10000 (0%)]	Loss: 0.329994
Train Epoch: 197 [800/10000 (8%)]	Loss: 0.262696
Train Epoch: 197 [1600/10000 (16%)]	Loss: 0.267022
Train Epoch: 197 [2400/10000 (24%)]	Loss: 0.337140
Train Epoch: 197 [3200/10000 (32%)]	Loss: 0.318769
Train Epoch: 197 [4000/10000 (40%)]	Loss: 0.324893
Train Epoch: 197 [4800/10000 (48%)]	Loss: 0.259221
Train Epoch: 197 [5600/10000 (56%)]	Loss: 0.313154
Train Epoch: 197 [6400/10000 (64%)]	Loss: 0.312465
Train Epoch: 197 [7200/10000 (72%)]	Loss: 0.320826
Train Epoch: 197 [8000/10000 (80%)]	Loss: 0.309616
Train Epoch: 197 [8800/10000 (88%)]	Loss: 0.276482
Train Epoch: 197 [9600/10000 (96%)]	Loss: 0.366424
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 198 [0/10000 (0%)]	Loss: 0.315017
Train Epoch: 198 [800/10000 (8%)]	Loss: 0.293243
Train Epoch: 198 [1600/10000 (16%)]	Loss: 0.321637
Train Epoch: 198 [2400/10000 (24%)]	Loss: 0.269023
Train Epoch: 198 [3200/10000 (32%)]	Loss: 0.284276
Train Epoch: 198 [4000/10000 (40%)]	Loss: 0.291476
Train Epoch: 198 [4800/10000 (48%)]	Loss: 0.327380
Train Epoch: 198 [5600/10000 (56%)]	Loss: 0.325205
Train Epoch: 198 [6400/10000 (64%)]	Loss: 0.282003
Train Epoch: 198 [7200/10000 (72%)]	Loss: 0.328174
Train Epoch: 198 [8000/10000 (80%)]	Loss: 0.272754
Train Epoch: 198 [8800/10000 (88%)]	Loss: 0.295962
Train Epoch: 198 [9600/10000 (96%)]	Loss: 0.340325
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 199 [0/10000 (0%)]	Loss: 0.322084
Train Epoch: 199 [800/10000 (8%)]	Loss: 0.303795
Train Epoch: 199 [1600/10000 (16%)]	Loss: 0.316337
Train Epoch: 199 [2400/10000 (24%)]	Loss: 0.319647
Train Epoch: 199 [3200/10000 (32%)]	Loss: 0.326992
Train Epoch: 199 [4000/10000 (40%)]	Loss: 0.294764
Train Epoch: 199 [4800/10000 (48%)]	Loss: 0.326697
Train Epoch: 199 [5600/10000 (56%)]	Loss: 0.305546
Train Epoch: 199 [6400/10000 (64%)]	Loss: 0.306530
Train Epoch: 199 [7200/10000 (72%)]	Loss: 0.312895
Train Epoch: 199 [8000/10000 (80%)]	Loss: 0.284062
Train Epoch: 199 [8800/10000 (88%)]	Loss: 0.295558
Train Epoch: 199 [9600/10000 (96%)]	Loss: 0.335700
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 200 [0/10000 (0%)]	Loss: 0.362416
Train Epoch: 200 [800/10000 (8%)]	Loss: 0.340921
Train Epoch: 200 [1600/10000 (16%)]	Loss: 0.294863
Train Epoch: 200 [2400/10000 (24%)]	Loss: 0.293127
Train Epoch: 200 [3200/10000 (32%)]	Loss: 0.354958
Train Epoch: 200 [4000/10000 (40%)]	Loss: 0.322789
Train Epoch: 200 [4800/10000 (48%)]	Loss: 0.301499
Train Epoch: 200 [5600/10000 (56%)]	Loss: 0.318068
Train Epoch: 200 [6400/10000 (64%)]	Loss: 0.334848
Train Epoch: 200 [7200/10000 (72%)]	Loss: 0.294215
Train Epoch: 200 [8000/10000 (80%)]	Loss: 0.274508
Train Epoch: 200 [8800/10000 (88%)]	Loss: 0.262190
Train Epoch: 200 [9600/10000 (96%)]	Loss: 0.339705
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.8
Visual Event Detection Segment-level F1: 54.5
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 50.0
Segment-level Event@Avg. F1: 52.9
Audio Event Detection Event-level F1: 44.3
Visual Event Detection Event-level F1: 51.4
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.0
Event-level Event@Avg. F1: 45.6
CUDA extension for cauchy multiplication not found. Install by going to extensions/cauchy/ and running `python setup.py install`. This should speed up end-to-end training by 10-50%
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/modules/transformer.py:282: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 48.4
Visual Event Detection Segment-level F1: 54.7
Audio-Visual Event Detection Segment-level F1: 40.9
Segment-levelType@Avg. F1: 48.0
Segment-level Event@Avg. F1: 51.6
Audio Event Detection Event-level F1: 41.2
Visual Event Detection Event-level F1: 52.0
Audio-Visual Event Detection Event-level F1: 37.4
Event-level Type@Avg. F1: 43.5
Event-level Event@Avg. F1: 44.5
