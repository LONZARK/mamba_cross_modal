CUDA extension for cauchy multiplication not found. Install by going to extensions/cauchy/ and running `python setup.py install`. This should speed up end-to-end training by 10-50%
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/modules/transformer.py:282: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 1 [0/10000 (0%)]	Loss: 2.117479
Train Epoch: 1 [800/10000 (8%)]	Loss: 0.740290
Train Epoch: 1 [1600/10000 (16%)]	Loss: 0.765705
Train Epoch: 1 [2400/10000 (24%)]	Loss: 0.669465
Train Epoch: 1 [3200/10000 (32%)]	Loss: 0.619831
Train Epoch: 1 [4000/10000 (40%)]	Loss: 0.490523
Train Epoch: 1 [4800/10000 (48%)]	Loss: 0.471669
Train Epoch: 1 [5600/10000 (56%)]	Loss: 0.433580
Train Epoch: 1 [6400/10000 (64%)]	Loss: 0.560023
Train Epoch: 1 [7200/10000 (72%)]	Loss: 0.458309
Train Epoch: 1 [8000/10000 (80%)]	Loss: 0.457706
Train Epoch: 1 [8800/10000 (88%)]	Loss: 0.424129
Train Epoch: 1 [9600/10000 (96%)]	Loss: 0.458494
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 26.2
Visual Event Detection Segment-level F1: 19.0
Audio-Visual Event Detection Segment-level F1: 17.0
Segment-levelType@Avg. F1: 20.7
Segment-level Event@Avg. F1: 22.6
Audio Event Detection Event-level F1: 19.7
Visual Event Detection Event-level F1: 16.3
Audio-Visual Event Detection Event-level F1: 13.6
Event-level Type@Avg. F1: 16.5
Event-level Event@Avg. F1: 17.8
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 2 [0/10000 (0%)]	Loss: 0.427808
Train Epoch: 2 [800/10000 (8%)]	Loss: 0.497463
Train Epoch: 2 [1600/10000 (16%)]	Loss: 0.460629
Train Epoch: 2 [2400/10000 (24%)]	Loss: 0.431904
Train Epoch: 2 [3200/10000 (32%)]	Loss: 0.397574
Train Epoch: 2 [4000/10000 (40%)]	Loss: 0.470811
Train Epoch: 2 [4800/10000 (48%)]	Loss: 0.493666
Train Epoch: 2 [5600/10000 (56%)]	Loss: 0.397738
Train Epoch: 2 [6400/10000 (64%)]	Loss: 0.451837
Train Epoch: 2 [7200/10000 (72%)]	Loss: 0.453066
Train Epoch: 2 [8000/10000 (80%)]	Loss: 0.416722
Train Epoch: 2 [8800/10000 (88%)]	Loss: 0.484654
Train Epoch: 2 [9600/10000 (96%)]	Loss: 0.491001
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 25.5
Visual Event Detection Segment-level F1: 25.2
Audio-Visual Event Detection Segment-level F1: 24.0
Segment-levelType@Avg. F1: 24.9
Segment-level Event@Avg. F1: 22.9
Audio Event Detection Event-level F1: 21.1
Visual Event Detection Event-level F1: 23.4
Audio-Visual Event Detection Event-level F1: 21.5
Event-level Type@Avg. F1: 22.0
Event-level Event@Avg. F1: 19.3
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 3 [0/10000 (0%)]	Loss: 0.373037
Train Epoch: 3 [800/10000 (8%)]	Loss: 0.420287
Train Epoch: 3 [1600/10000 (16%)]	Loss: 0.319382
Train Epoch: 3 [2400/10000 (24%)]	Loss: 0.364841
Train Epoch: 3 [3200/10000 (32%)]	Loss: 0.365254
Train Epoch: 3 [4000/10000 (40%)]	Loss: 0.378087
Train Epoch: 3 [4800/10000 (48%)]	Loss: 0.359545
Train Epoch: 3 [5600/10000 (56%)]	Loss: 0.400286
Train Epoch: 3 [6400/10000 (64%)]	Loss: 0.392421
Train Epoch: 3 [7200/10000 (72%)]	Loss: 0.440332
Train Epoch: 3 [8000/10000 (80%)]	Loss: 0.341663
Train Epoch: 3 [8800/10000 (88%)]	Loss: 0.387435
Train Epoch: 3 [9600/10000 (96%)]	Loss: 0.444571
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 21.5
Visual Event Detection Segment-level F1: 26.8
Audio-Visual Event Detection Segment-level F1: 26.3
Segment-levelType@Avg. F1: 24.9
Segment-level Event@Avg. F1: 20.1
Audio Event Detection Event-level F1: 18.7
Visual Event Detection Event-level F1: 25.3
Audio-Visual Event Detection Event-level F1: 24.3
Event-level Type@Avg. F1: 22.8
Event-level Event@Avg. F1: 17.7
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 4 [0/10000 (0%)]	Loss: 0.376399
Train Epoch: 4 [800/10000 (8%)]	Loss: 0.437763
Train Epoch: 4 [1600/10000 (16%)]	Loss: 0.487161
Train Epoch: 4 [2400/10000 (24%)]	Loss: 0.397742
Train Epoch: 4 [3200/10000 (32%)]	Loss: 0.473522
Train Epoch: 4 [4000/10000 (40%)]	Loss: 0.349778
Train Epoch: 4 [4800/10000 (48%)]	Loss: 0.324697
Train Epoch: 4 [5600/10000 (56%)]	Loss: 0.364099
Train Epoch: 4 [6400/10000 (64%)]	Loss: 0.316631
Train Epoch: 4 [7200/10000 (72%)]	Loss: 0.390939
Train Epoch: 4 [8000/10000 (80%)]	Loss: 0.372611
Train Epoch: 4 [8800/10000 (88%)]	Loss: 0.379426
Train Epoch: 4 [9600/10000 (96%)]	Loss: 0.430026
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 26.3
Visual Event Detection Segment-level F1: 32.1
Audio-Visual Event Detection Segment-level F1: 29.2
Segment-levelType@Avg. F1: 29.2
Segment-level Event@Avg. F1: 25.1
Audio Event Detection Event-level F1: 22.1
Visual Event Detection Event-level F1: 30.2
Audio-Visual Event Detection Event-level F1: 25.9
Event-level Type@Avg. F1: 26.1
Event-level Event@Avg. F1: 21.8
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 5 [0/10000 (0%)]	Loss: 0.310801
Train Epoch: 5 [800/10000 (8%)]	Loss: 0.327647
Train Epoch: 5 [1600/10000 (16%)]	Loss: 0.311486
Train Epoch: 5 [2400/10000 (24%)]	Loss: 0.385328
Train Epoch: 5 [3200/10000 (32%)]	Loss: 0.323038
Train Epoch: 5 [4000/10000 (40%)]	Loss: 0.381830
Train Epoch: 5 [4800/10000 (48%)]	Loss: 0.400105
Train Epoch: 5 [5600/10000 (56%)]	Loss: 0.379206
Train Epoch: 5 [6400/10000 (64%)]	Loss: 0.428637
Train Epoch: 5 [7200/10000 (72%)]	Loss: 0.407926
Train Epoch: 5 [8000/10000 (80%)]	Loss: 0.473875
Train Epoch: 5 [8800/10000 (88%)]	Loss: 0.312878
Train Epoch: 5 [9600/10000 (96%)]	Loss: 0.427540
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 36.7
Visual Event Detection Segment-level F1: 36.5
Audio-Visual Event Detection Segment-level F1: 33.1
Segment-levelType@Avg. F1: 35.4
Segment-level Event@Avg. F1: 34.1
Audio Event Detection Event-level F1: 30.3
Visual Event Detection Event-level F1: 33.9
Audio-Visual Event Detection Event-level F1: 28.7
Event-level Type@Avg. F1: 31.0
Event-level Event@Avg. F1: 29.2
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 6 [0/10000 (0%)]	Loss: 0.373617
Train Epoch: 6 [800/10000 (8%)]	Loss: 0.316153
Train Epoch: 6 [1600/10000 (16%)]	Loss: 0.324828
Train Epoch: 6 [2400/10000 (24%)]	Loss: 0.329578
Train Epoch: 6 [3200/10000 (32%)]	Loss: 0.350019
Train Epoch: 6 [4000/10000 (40%)]	Loss: 0.441221
Train Epoch: 6 [4800/10000 (48%)]	Loss: 0.446980
Train Epoch: 6 [5600/10000 (56%)]	Loss: 0.313152
Train Epoch: 6 [6400/10000 (64%)]	Loss: 0.436553
Train Epoch: 6 [7200/10000 (72%)]	Loss: 0.311559
Train Epoch: 6 [8000/10000 (80%)]	Loss: 0.374418
Train Epoch: 6 [8800/10000 (88%)]	Loss: 0.403389
Train Epoch: 6 [9600/10000 (96%)]	Loss: 0.463495
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 35.5
Visual Event Detection Segment-level F1: 42.3
Audio-Visual Event Detection Segment-level F1: 39.3
Segment-levelType@Avg. F1: 39.0
Segment-level Event@Avg. F1: 34.4
Audio Event Detection Event-level F1: 29.8
Visual Event Detection Event-level F1: 39.8
Audio-Visual Event Detection Event-level F1: 34.5
Event-level Type@Avg. F1: 34.7
Event-level Event@Avg. F1: 29.9
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 7 [0/10000 (0%)]	Loss: 0.316335
Train Epoch: 7 [800/10000 (8%)]	Loss: 0.362335
Train Epoch: 7 [1600/10000 (16%)]	Loss: 0.331014
Train Epoch: 7 [2400/10000 (24%)]	Loss: 0.361819
Train Epoch: 7 [3200/10000 (32%)]	Loss: 0.342988
Train Epoch: 7 [4000/10000 (40%)]	Loss: 0.356809
Train Epoch: 7 [4800/10000 (48%)]	Loss: 0.463330
Train Epoch: 7 [5600/10000 (56%)]	Loss: 0.337571
Train Epoch: 7 [6400/10000 (64%)]	Loss: 0.406837
Train Epoch: 7 [7200/10000 (72%)]	Loss: 0.312316
Train Epoch: 7 [8000/10000 (80%)]	Loss: 0.358458
Train Epoch: 7 [8800/10000 (88%)]	Loss: 0.458941
Train Epoch: 7 [9600/10000 (96%)]	Loss: 0.356362
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 40.6
Visual Event Detection Segment-level F1: 42.7
Audio-Visual Event Detection Segment-level F1: 37.8
Segment-levelType@Avg. F1: 40.4
Segment-level Event@Avg. F1: 39.1
Audio Event Detection Event-level F1: 33.5
Visual Event Detection Event-level F1: 39.8
Audio-Visual Event Detection Event-level F1: 32.6
Event-level Type@Avg. F1: 35.3
Event-level Event@Avg. F1: 33.5
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 8 [0/10000 (0%)]	Loss: 0.414307
Train Epoch: 8 [800/10000 (8%)]	Loss: 0.391790
Train Epoch: 8 [1600/10000 (16%)]	Loss: 0.367877
Train Epoch: 8 [2400/10000 (24%)]	Loss: 0.321457
Train Epoch: 8 [3200/10000 (32%)]	Loss: 0.323850
Train Epoch: 8 [4000/10000 (40%)]	Loss: 0.291824
Train Epoch: 8 [4800/10000 (48%)]	Loss: 0.346773
Train Epoch: 8 [5600/10000 (56%)]	Loss: 0.461734
Train Epoch: 8 [6400/10000 (64%)]	Loss: 0.411767
Train Epoch: 8 [7200/10000 (72%)]	Loss: 0.343584
Train Epoch: 8 [8000/10000 (80%)]	Loss: 0.359823
Train Epoch: 8 [8800/10000 (88%)]	Loss: 0.399270
Train Epoch: 8 [9600/10000 (96%)]	Loss: 0.290098
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 38.8
Visual Event Detection Segment-level F1: 47.7
Audio-Visual Event Detection Segment-level F1: 43.0
Segment-levelType@Avg. F1: 43.2
Segment-level Event@Avg. F1: 38.2
Audio Event Detection Event-level F1: 33.5
Visual Event Detection Event-level F1: 45.4
Audio-Visual Event Detection Event-level F1: 37.9
Event-level Type@Avg. F1: 38.9
Event-level Event@Avg. F1: 33.8
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 9 [0/10000 (0%)]	Loss: 0.332983
Train Epoch: 9 [800/10000 (8%)]	Loss: 0.350273
Train Epoch: 9 [1600/10000 (16%)]	Loss: 0.308632
Train Epoch: 9 [2400/10000 (24%)]	Loss: 0.344545
Train Epoch: 9 [3200/10000 (32%)]	Loss: 0.411099
Train Epoch: 9 [4000/10000 (40%)]	Loss: 0.390221
Train Epoch: 9 [4800/10000 (48%)]	Loss: 0.450769
Train Epoch: 9 [5600/10000 (56%)]	Loss: 0.339626
Train Epoch: 9 [6400/10000 (64%)]	Loss: 0.361719
Train Epoch: 9 [7200/10000 (72%)]	Loss: 0.275307
Train Epoch: 9 [8000/10000 (80%)]	Loss: 0.370085
Train Epoch: 9 [8800/10000 (88%)]	Loss: 0.312014
Train Epoch: 9 [9600/10000 (96%)]	Loss: 0.407521
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 41.3
Visual Event Detection Segment-level F1: 47.7
Audio-Visual Event Detection Segment-level F1: 42.4
Segment-levelType@Avg. F1: 43.8
Segment-level Event@Avg. F1: 40.2
Audio Event Detection Event-level F1: 34.7
Visual Event Detection Event-level F1: 45.0
Audio-Visual Event Detection Event-level F1: 37.1
Event-level Type@Avg. F1: 38.9
Event-level Event@Avg. F1: 34.8
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 10 [0/10000 (0%)]	Loss: 0.390980
Train Epoch: 10 [800/10000 (8%)]	Loss: 0.380506
Train Epoch: 10 [1600/10000 (16%)]	Loss: 0.365969
Train Epoch: 10 [2400/10000 (24%)]	Loss: 0.314500
Train Epoch: 10 [3200/10000 (32%)]	Loss: 0.361095
Train Epoch: 10 [4000/10000 (40%)]	Loss: 0.357304
Train Epoch: 10 [4800/10000 (48%)]	Loss: 0.362550
Train Epoch: 10 [5600/10000 (56%)]	Loss: 0.467991
Train Epoch: 10 [6400/10000 (64%)]	Loss: 0.363730
Train Epoch: 10 [7200/10000 (72%)]	Loss: 0.389811
Train Epoch: 10 [8000/10000 (80%)]	Loss: 0.447999
Train Epoch: 10 [8800/10000 (88%)]	Loss: 0.369121
Train Epoch: 10 [9600/10000 (96%)]	Loss: 0.334187
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 40.5
Visual Event Detection Segment-level F1: 42.0
Audio-Visual Event Detection Segment-level F1: 40.2
Segment-levelType@Avg. F1: 40.9
Segment-level Event@Avg. F1: 38.4
Audio Event Detection Event-level F1: 35.1
Visual Event Detection Event-level F1: 38.8
Audio-Visual Event Detection Event-level F1: 35.2
Event-level Type@Avg. F1: 36.3
Event-level Event@Avg. F1: 33.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 11 [0/10000 (0%)]	Loss: 0.333044
Train Epoch: 11 [800/10000 (8%)]	Loss: 0.338582
Train Epoch: 11 [1600/10000 (16%)]	Loss: 0.437413
Train Epoch: 11 [2400/10000 (24%)]	Loss: 0.320066
Train Epoch: 11 [3200/10000 (32%)]	Loss: 0.407376
Train Epoch: 11 [4000/10000 (40%)]	Loss: 0.363202
Train Epoch: 11 [4800/10000 (48%)]	Loss: 0.357577
Train Epoch: 11 [5600/10000 (56%)]	Loss: 0.312823
Train Epoch: 11 [6400/10000 (64%)]	Loss: 0.320500
Train Epoch: 11 [7200/10000 (72%)]	Loss: 0.341154
Train Epoch: 11 [8000/10000 (80%)]	Loss: 0.314291
Train Epoch: 11 [8800/10000 (88%)]	Loss: 0.358546
Train Epoch: 11 [9600/10000 (96%)]	Loss: 0.305200
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 39.5
Visual Event Detection Segment-level F1: 45.0
Audio-Visual Event Detection Segment-level F1: 43.0
Segment-levelType@Avg. F1: 42.5
Segment-level Event@Avg. F1: 38.1
Audio Event Detection Event-level F1: 35.1
Visual Event Detection Event-level F1: 42.0
Audio-Visual Event Detection Event-level F1: 38.2
Event-level Type@Avg. F1: 38.4
Event-level Event@Avg. F1: 34.0
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 12 [0/10000 (0%)]	Loss: 0.353284
Train Epoch: 12 [800/10000 (8%)]	Loss: 0.335319
Train Epoch: 12 [1600/10000 (16%)]	Loss: 0.296413
Train Epoch: 12 [2400/10000 (24%)]	Loss: 0.294075
Train Epoch: 12 [3200/10000 (32%)]	Loss: 0.371381
Train Epoch: 12 [4000/10000 (40%)]	Loss: 0.364004
Train Epoch: 12 [4800/10000 (48%)]	Loss: 0.378723
Train Epoch: 12 [5600/10000 (56%)]	Loss: 0.344365
Train Epoch: 12 [6400/10000 (64%)]	Loss: 0.374897
Train Epoch: 12 [7200/10000 (72%)]	Loss: 0.359388
Train Epoch: 12 [8000/10000 (80%)]	Loss: 0.303357
Train Epoch: 12 [8800/10000 (88%)]	Loss: 0.344900
Train Epoch: 12 [9600/10000 (96%)]	Loss: 0.337156
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 36.8
Visual Event Detection Segment-level F1: 45.4
Audio-Visual Event Detection Segment-level F1: 43.3
Segment-levelType@Avg. F1: 41.8
Segment-level Event@Avg. F1: 35.8
Audio Event Detection Event-level F1: 33.0
Visual Event Detection Event-level F1: 42.5
Audio-Visual Event Detection Event-level F1: 38.7
Event-level Type@Avg. F1: 38.1
Event-level Event@Avg. F1: 32.2
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 13 [0/10000 (0%)]	Loss: 0.375006
Train Epoch: 13 [800/10000 (8%)]	Loss: 0.280196
Train Epoch: 13 [1600/10000 (16%)]	Loss: 0.363371
Train Epoch: 13 [2400/10000 (24%)]	Loss: 0.261969
Train Epoch: 13 [3200/10000 (32%)]	Loss: 0.321193
Train Epoch: 13 [4000/10000 (40%)]	Loss: 0.318521
Train Epoch: 13 [4800/10000 (48%)]	Loss: 0.401084
Train Epoch: 13 [5600/10000 (56%)]	Loss: 0.309113
Train Epoch: 13 [6400/10000 (64%)]	Loss: 0.357674
Train Epoch: 13 [7200/10000 (72%)]	Loss: 0.354459
Train Epoch: 13 [8000/10000 (80%)]	Loss: 0.361504
Train Epoch: 13 [8800/10000 (88%)]	Loss: 0.393839
Train Epoch: 13 [9600/10000 (96%)]	Loss: 0.400615
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 38.3
Visual Event Detection Segment-level F1: 45.9
Audio-Visual Event Detection Segment-level F1: 44.0
Segment-levelType@Avg. F1: 42.8
Segment-level Event@Avg. F1: 37.0
Audio Event Detection Event-level F1: 34.3
Visual Event Detection Event-level F1: 42.9
Audio-Visual Event Detection Event-level F1: 39.2
Event-level Type@Avg. F1: 38.8
Event-level Event@Avg. F1: 33.2
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 14 [0/10000 (0%)]	Loss: 0.344542
Train Epoch: 14 [800/10000 (8%)]	Loss: 0.289911
Train Epoch: 14 [1600/10000 (16%)]	Loss: 0.290821
Train Epoch: 14 [2400/10000 (24%)]	Loss: 0.302768
Train Epoch: 14 [3200/10000 (32%)]	Loss: 0.328159
Train Epoch: 14 [4000/10000 (40%)]	Loss: 0.362618
Train Epoch: 14 [4800/10000 (48%)]	Loss: 0.412750
Train Epoch: 14 [5600/10000 (56%)]	Loss: 0.351185
Train Epoch: 14 [6400/10000 (64%)]	Loss: 0.277561
Train Epoch: 14 [7200/10000 (72%)]	Loss: 0.293667
Train Epoch: 14 [8000/10000 (80%)]	Loss: 0.306172
Train Epoch: 14 [8800/10000 (88%)]	Loss: 0.299504
Train Epoch: 14 [9600/10000 (96%)]	Loss: 0.415573
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 37.9
Visual Event Detection Segment-level F1: 44.0
Audio-Visual Event Detection Segment-level F1: 43.0
Segment-levelType@Avg. F1: 41.6
Segment-level Event@Avg. F1: 36.3
Audio Event Detection Event-level F1: 33.8
Visual Event Detection Event-level F1: 41.1
Audio-Visual Event Detection Event-level F1: 38.2
Event-level Type@Avg. F1: 37.7
Event-level Event@Avg. F1: 32.5
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 15 [0/10000 (0%)]	Loss: 0.371080
Train Epoch: 15 [800/10000 (8%)]	Loss: 0.367370
Train Epoch: 15 [1600/10000 (16%)]	Loss: 0.322627
Train Epoch: 15 [2400/10000 (24%)]	Loss: 0.330950
Train Epoch: 15 [3200/10000 (32%)]	Loss: 0.385839
Train Epoch: 15 [4000/10000 (40%)]	Loss: 0.281724
Train Epoch: 15 [4800/10000 (48%)]	Loss: 0.355849
Train Epoch: 15 [5600/10000 (56%)]	Loss: 0.315235
Train Epoch: 15 [6400/10000 (64%)]	Loss: 0.384783
Train Epoch: 15 [7200/10000 (72%)]	Loss: 0.404263
Train Epoch: 15 [8000/10000 (80%)]	Loss: 0.288856
Train Epoch: 15 [8800/10000 (88%)]	Loss: 0.318496
Train Epoch: 15 [9600/10000 (96%)]	Loss: 0.391992
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 36.9
Visual Event Detection Segment-level F1: 44.1
Audio-Visual Event Detection Segment-level F1: 42.8
Segment-levelType@Avg. F1: 41.3
Segment-level Event@Avg. F1: 35.5
Audio Event Detection Event-level F1: 33.2
Visual Event Detection Event-level F1: 41.1
Audio-Visual Event Detection Event-level F1: 38.0
Event-level Type@Avg. F1: 37.4
Event-level Event@Avg. F1: 31.9
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 16 [0/10000 (0%)]	Loss: 0.319133
Train Epoch: 16 [800/10000 (8%)]	Loss: 0.286626
Train Epoch: 16 [1600/10000 (16%)]	Loss: 0.269513
Train Epoch: 16 [2400/10000 (24%)]	Loss: 0.310642
Train Epoch: 16 [3200/10000 (32%)]	Loss: 0.300229
Train Epoch: 16 [4000/10000 (40%)]	Loss: 0.317867
Train Epoch: 16 [4800/10000 (48%)]	Loss: 0.350480
Train Epoch: 16 [5600/10000 (56%)]	Loss: 0.273208
Train Epoch: 16 [6400/10000 (64%)]	Loss: 0.304072
Train Epoch: 16 [7200/10000 (72%)]	Loss: 0.293509
Train Epoch: 16 [8000/10000 (80%)]	Loss: 0.292542
Train Epoch: 16 [8800/10000 (88%)]	Loss: 0.303080
Train Epoch: 16 [9600/10000 (96%)]	Loss: 0.308518
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 38.1
Visual Event Detection Segment-level F1: 45.6
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 42.4
Segment-level Event@Avg. F1: 37.0
Audio Event Detection Event-level F1: 34.1
Visual Event Detection Event-level F1: 42.4
Audio-Visual Event Detection Event-level F1: 38.4
Event-level Type@Avg. F1: 38.3
Event-level Event@Avg. F1: 33.2
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 17 [0/10000 (0%)]	Loss: 0.356460
Train Epoch: 17 [800/10000 (8%)]	Loss: 0.282182
Train Epoch: 17 [1600/10000 (16%)]	Loss: 0.313591
Train Epoch: 17 [2400/10000 (24%)]	Loss: 0.369158
Train Epoch: 17 [3200/10000 (32%)]	Loss: 0.392334
Train Epoch: 17 [4000/10000 (40%)]	Loss: 0.383746
Train Epoch: 17 [4800/10000 (48%)]	Loss: 0.338058
Train Epoch: 17 [5600/10000 (56%)]	Loss: 0.342867
Train Epoch: 17 [6400/10000 (64%)]	Loss: 0.283166
Train Epoch: 17 [7200/10000 (72%)]	Loss: 0.322733
Train Epoch: 17 [8000/10000 (80%)]	Loss: 0.365503
Train Epoch: 17 [8800/10000 (88%)]	Loss: 0.287287
Train Epoch: 17 [9600/10000 (96%)]	Loss: 0.353209
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 39.3
Visual Event Detection Segment-level F1: 44.0
Audio-Visual Event Detection Segment-level F1: 42.2
Segment-levelType@Avg. F1: 41.8
Segment-level Event@Avg. F1: 37.5
Audio Event Detection Event-level F1: 34.9
Visual Event Detection Event-level F1: 40.8
Audio-Visual Event Detection Event-level F1: 37.2
Event-level Type@Avg. F1: 37.6
Event-level Event@Avg. F1: 33.4
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 18 [0/10000 (0%)]	Loss: 0.374982
Train Epoch: 18 [800/10000 (8%)]	Loss: 0.305965
Train Epoch: 18 [1600/10000 (16%)]	Loss: 0.321998
Train Epoch: 18 [2400/10000 (24%)]	Loss: 0.290679
Train Epoch: 18 [3200/10000 (32%)]	Loss: 0.301793
Train Epoch: 18 [4000/10000 (40%)]	Loss: 0.291493
Train Epoch: 18 [4800/10000 (48%)]	Loss: 0.351531
Train Epoch: 18 [5600/10000 (56%)]	Loss: 0.285328
Train Epoch: 18 [6400/10000 (64%)]	Loss: 0.330406
Train Epoch: 18 [7200/10000 (72%)]	Loss: 0.270847
Train Epoch: 18 [8000/10000 (80%)]	Loss: 0.352058
Train Epoch: 18 [8800/10000 (88%)]	Loss: 0.265887
Train Epoch: 18 [9600/10000 (96%)]	Loss: 0.290445
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 37.7
Visual Event Detection Segment-level F1: 44.9
Audio-Visual Event Detection Segment-level F1: 43.6
Segment-levelType@Avg. F1: 42.1
Segment-level Event@Avg. F1: 36.3
Audio Event Detection Event-level F1: 33.8
Visual Event Detection Event-level F1: 42.0
Audio-Visual Event Detection Event-level F1: 38.9
Event-level Type@Avg. F1: 38.2
Event-level Event@Avg. F1: 32.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 19 [0/10000 (0%)]	Loss: 0.346896
Train Epoch: 19 [800/10000 (8%)]	Loss: 0.354002
Train Epoch: 19 [1600/10000 (16%)]	Loss: 0.312084
Train Epoch: 19 [2400/10000 (24%)]	Loss: 0.311717
Train Epoch: 19 [3200/10000 (32%)]	Loss: 0.337669
Train Epoch: 19 [4000/10000 (40%)]	Loss: 0.327624
Train Epoch: 19 [4800/10000 (48%)]	Loss: 0.361127
Train Epoch: 19 [5600/10000 (56%)]	Loss: 0.298026
Train Epoch: 19 [6400/10000 (64%)]	Loss: 0.286718
Train Epoch: 19 [7200/10000 (72%)]	Loss: 0.308831
Train Epoch: 19 [8000/10000 (80%)]	Loss: 0.316241
Train Epoch: 19 [8800/10000 (88%)]	Loss: 0.401409
Train Epoch: 19 [9600/10000 (96%)]	Loss: 0.337193
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 37.5
Visual Event Detection Segment-level F1: 45.1
Audio-Visual Event Detection Segment-level F1: 42.9
Segment-levelType@Avg. F1: 41.8
Segment-level Event@Avg. F1: 36.5
Audio Event Detection Event-level F1: 33.5
Visual Event Detection Event-level F1: 42.0
Audio-Visual Event Detection Event-level F1: 38.1
Event-level Type@Avg. F1: 37.8
Event-level Event@Avg. F1: 32.7
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 20 [0/10000 (0%)]	Loss: 0.336481
Train Epoch: 20 [800/10000 (8%)]	Loss: 0.326359
Train Epoch: 20 [1600/10000 (16%)]	Loss: 0.292814
Train Epoch: 20 [2400/10000 (24%)]	Loss: 0.309325
Train Epoch: 20 [3200/10000 (32%)]	Loss: 0.313432
Train Epoch: 20 [4000/10000 (40%)]	Loss: 0.321295
Train Epoch: 20 [4800/10000 (48%)]	Loss: 0.277435
Train Epoch: 20 [5600/10000 (56%)]	Loss: 0.305143
Train Epoch: 20 [6400/10000 (64%)]	Loss: 0.323674
Train Epoch: 20 [7200/10000 (72%)]	Loss: 0.337933
Train Epoch: 20 [8000/10000 (80%)]	Loss: 0.313638
Train Epoch: 20 [8800/10000 (88%)]	Loss: 0.335132
Train Epoch: 20 [9600/10000 (96%)]	Loss: 0.285925
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 39.2
Visual Event Detection Segment-level F1: 44.7
Audio-Visual Event Detection Segment-level F1: 42.6
Segment-levelType@Avg. F1: 42.2
Segment-level Event@Avg. F1: 37.5
Audio Event Detection Event-level F1: 35.0
Visual Event Detection Event-level F1: 41.7
Audio-Visual Event Detection Event-level F1: 37.8
Event-level Type@Avg. F1: 38.2
Event-level Event@Avg. F1: 33.7
Train Epoch: 21 [0/10000 (0%)]	Loss: 0.341101
Train Epoch: 21 [800/10000 (8%)]	Loss: 0.313879
Train Epoch: 21 [1600/10000 (16%)]	Loss: 0.279694
Train Epoch: 21 [2400/10000 (24%)]	Loss: 0.291659
Train Epoch: 21 [3200/10000 (32%)]	Loss: 0.346584
Train Epoch: 21 [4000/10000 (40%)]	Loss: 0.299475
Train Epoch: 21 [4800/10000 (48%)]	Loss: 0.281579
Train Epoch: 21 [5600/10000 (56%)]	Loss: 0.287715
Train Epoch: 21 [6400/10000 (64%)]	Loss: 0.335780
Train Epoch: 21 [7200/10000 (72%)]	Loss: 0.313476
Train Epoch: 21 [8000/10000 (80%)]	Loss: 0.285398
Traceback (most recent call last):
  File "/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py", line 241, in <module>
    main()
  File "/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py", line 221, in main
    train(args, model, train_loader, optimizer, criterion, epoch=epoch)
  File "/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py", line 33, in train
    loss.backward()
  File "/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/_tensor.py", line 492, in backward
    torch.autograd.backward(
  File "/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/autograd/__init__.py", line 251, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.


[KeOps] error: cuMemFree(buffer) failed with error CUDA_ERROR_ASSERT

CUDA extension for cauchy multiplication not found. Install by going to extensions/cauchy/ and running `python setup.py install`. This should speed up end-to-end training by 10-50%
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/modules/transformer.py:282: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 40.3
Visual Event Detection Segment-level F1: 46.3
Audio-Visual Event Detection Segment-level F1: 41.2
Segment-levelType@Avg. F1: 42.6
Segment-level Event@Avg. F1: 39.5
Audio Event Detection Event-level F1: 33.2
Visual Event Detection Event-level F1: 44.3
Audio-Visual Event Detection Event-level F1: 36.1
Event-level Type@Avg. F1: 37.9
Event-level Event@Avg. F1: 34.3
