CUDA extension for cauchy multiplication not found. Install by going to extensions/cauchy/ and running `python setup.py install`. This should speed up end-to-end training by 10-50%
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/modules/transformer.py:282: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 1 [0/10000 (0%)]	Loss: 2.124591
Train Epoch: 1 [800/10000 (8%)]	Loss: 0.732352
Train Epoch: 1 [1600/10000 (16%)]	Loss: 0.768027
Train Epoch: 1 [2400/10000 (24%)]	Loss: 0.685935
Train Epoch: 1 [3200/10000 (32%)]	Loss: 0.713403
Train Epoch: 1 [4000/10000 (40%)]	Loss: 0.590089
Train Epoch: 1 [4800/10000 (48%)]	Loss: 0.531994
Train Epoch: 1 [5600/10000 (56%)]	Loss: 0.486583
Train Epoch: 1 [6400/10000 (64%)]	Loss: 0.599076
Train Epoch: 1 [7200/10000 (72%)]	Loss: 0.472828
Train Epoch: 1 [8000/10000 (80%)]	Loss: 0.478206
Train Epoch: 1 [8800/10000 (88%)]	Loss: 0.461967
Train Epoch: 1 [9600/10000 (96%)]	Loss: 0.528559
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 35.3
Visual Event Detection Segment-level F1: 40.9
Audio-Visual Event Detection Segment-level F1: 25.1
Segment-levelType@Avg. F1: 33.7
Segment-level Event@Avg. F1: 39.5
Audio Event Detection Event-level F1: 28.6
Visual Event Detection Event-level F1: 37.8
Audio-Visual Event Detection Event-level F1: 22.1
Event-level Type@Avg. F1: 29.5
Event-level Event@Avg. F1: 33.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 2 [0/10000 (0%)]	Loss: 0.461989
Train Epoch: 2 [800/10000 (8%)]	Loss: 0.500898
Train Epoch: 2 [1600/10000 (16%)]	Loss: 0.485347
Train Epoch: 2 [2400/10000 (24%)]	Loss: 0.454564
Train Epoch: 2 [3200/10000 (32%)]	Loss: 0.411849
Train Epoch: 2 [4000/10000 (40%)]	Loss: 0.506475
Train Epoch: 2 [4800/10000 (48%)]	Loss: 0.480720
Train Epoch: 2 [5600/10000 (56%)]	Loss: 0.422262
Train Epoch: 2 [6400/10000 (64%)]	Loss: 0.501016
Train Epoch: 2 [7200/10000 (72%)]	Loss: 0.453312
Train Epoch: 2 [8000/10000 (80%)]	Loss: 0.467560
Train Epoch: 2 [8800/10000 (88%)]	Loss: 0.468237
Train Epoch: 2 [9600/10000 (96%)]	Loss: 0.484392
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 35.9
Visual Event Detection Segment-level F1: 48.9
Audio-Visual Event Detection Segment-level F1: 27.6
Segment-levelType@Avg. F1: 37.5
Segment-level Event@Avg. F1: 43.8
Audio Event Detection Event-level F1: 30.1
Visual Event Detection Event-level F1: 46.4
Audio-Visual Event Detection Event-level F1: 25.2
Event-level Type@Avg. F1: 33.9
Event-level Event@Avg. F1: 37.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 3 [0/10000 (0%)]	Loss: 0.398747
Train Epoch: 3 [800/10000 (8%)]	Loss: 0.482447
Train Epoch: 3 [1600/10000 (16%)]	Loss: 0.401359
Train Epoch: 3 [2400/10000 (24%)]	Loss: 0.402797
Train Epoch: 3 [3200/10000 (32%)]	Loss: 0.414678
Train Epoch: 3 [4000/10000 (40%)]	Loss: 0.410903
Train Epoch: 3 [4800/10000 (48%)]	Loss: 0.396134
Train Epoch: 3 [5600/10000 (56%)]	Loss: 0.412334
Train Epoch: 3 [6400/10000 (64%)]	Loss: 0.411232
Train Epoch: 3 [7200/10000 (72%)]	Loss: 0.389630
Train Epoch: 3 [8000/10000 (80%)]	Loss: 0.378357
Train Epoch: 3 [8800/10000 (88%)]	Loss: 0.427106
Train Epoch: 3 [9600/10000 (96%)]	Loss: 0.429575
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 37.0
Visual Event Detection Segment-level F1: 51.3
Audio-Visual Event Detection Segment-level F1: 30.7
Segment-levelType@Avg. F1: 39.7
Segment-level Event@Avg. F1: 44.9
Audio Event Detection Event-level F1: 30.3
Visual Event Detection Event-level F1: 48.5
Audio-Visual Event Detection Event-level F1: 28.0
Event-level Type@Avg. F1: 35.6
Event-level Event@Avg. F1: 37.9
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 4 [0/10000 (0%)]	Loss: 0.393372
Train Epoch: 4 [800/10000 (8%)]	Loss: 0.432324
Train Epoch: 4 [1600/10000 (16%)]	Loss: 0.507019
Train Epoch: 4 [2400/10000 (24%)]	Loss: 0.413414
Train Epoch: 4 [3200/10000 (32%)]	Loss: 0.437003
Train Epoch: 4 [4000/10000 (40%)]	Loss: 0.343072
Train Epoch: 4 [4800/10000 (48%)]	Loss: 0.369616
Train Epoch: 4 [5600/10000 (56%)]	Loss: 0.386054
Train Epoch: 4 [6400/10000 (64%)]	Loss: 0.371865
Train Epoch: 4 [7200/10000 (72%)]	Loss: 0.432469
Train Epoch: 4 [8000/10000 (80%)]	Loss: 0.402371
Train Epoch: 4 [8800/10000 (88%)]	Loss: 0.398008
Train Epoch: 4 [9600/10000 (96%)]	Loss: 0.458401
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 38.8
Visual Event Detection Segment-level F1: 55.9
Audio-Visual Event Detection Segment-level F1: 36.0
Segment-levelType@Avg. F1: 43.5
Segment-level Event@Avg. F1: 46.8
Audio Event Detection Event-level F1: 35.1
Visual Event Detection Event-level F1: 53.0
Audio-Visual Event Detection Event-level F1: 33.2
Event-level Type@Avg. F1: 40.4
Event-level Event@Avg. F1: 41.7
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 5 [0/10000 (0%)]	Loss: 0.390876
Train Epoch: 5 [800/10000 (8%)]	Loss: 0.385116
Train Epoch: 5 [1600/10000 (16%)]	Loss: 0.347865
Train Epoch: 5 [2400/10000 (24%)]	Loss: 0.397187
Train Epoch: 5 [3200/10000 (32%)]	Loss: 0.371980
Train Epoch: 5 [4000/10000 (40%)]	Loss: 0.376953
Train Epoch: 5 [4800/10000 (48%)]	Loss: 0.381964
Train Epoch: 5 [5600/10000 (56%)]	Loss: 0.407606
Train Epoch: 5 [6400/10000 (64%)]	Loss: 0.435627
Train Epoch: 5 [7200/10000 (72%)]	Loss: 0.409365
Train Epoch: 5 [8000/10000 (80%)]	Loss: 0.426849
Train Epoch: 5 [8800/10000 (88%)]	Loss: 0.381618
Train Epoch: 5 [9600/10000 (96%)]	Loss: 0.402068
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 42.0
Visual Event Detection Segment-level F1: 58.1
Audio-Visual Event Detection Segment-level F1: 40.2
Segment-levelType@Avg. F1: 46.8
Segment-level Event@Avg. F1: 49.0
Audio Event Detection Event-level F1: 36.2
Visual Event Detection Event-level F1: 55.1
Audio-Visual Event Detection Event-level F1: 36.7
Event-level Type@Avg. F1: 42.7
Event-level Event@Avg. F1: 42.4
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 6 [0/10000 (0%)]	Loss: 0.436111
Train Epoch: 6 [800/10000 (8%)]	Loss: 0.331571
Train Epoch: 6 [1600/10000 (16%)]	Loss: 0.341339
Train Epoch: 6 [2400/10000 (24%)]	Loss: 0.369992
Train Epoch: 6 [3200/10000 (32%)]	Loss: 0.391893
Train Epoch: 6 [4000/10000 (40%)]	Loss: 0.441406
Train Epoch: 6 [4800/10000 (48%)]	Loss: 0.446291
Train Epoch: 6 [5600/10000 (56%)]	Loss: 0.341523
Train Epoch: 6 [6400/10000 (64%)]	Loss: 0.428382
Train Epoch: 6 [7200/10000 (72%)]	Loss: 0.343841
Train Epoch: 6 [8000/10000 (80%)]	Loss: 0.395727
Train Epoch: 6 [8800/10000 (88%)]	Loss: 0.435076
Train Epoch: 6 [9600/10000 (96%)]	Loss: 0.446211
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 40.3
Visual Event Detection Segment-level F1: 57.4
Audio-Visual Event Detection Segment-level F1: 36.0
Segment-levelType@Avg. F1: 44.5
Segment-level Event@Avg. F1: 49.3
Audio Event Detection Event-level F1: 34.5
Visual Event Detection Event-level F1: 54.2
Audio-Visual Event Detection Event-level F1: 33.3
Event-level Type@Avg. F1: 40.7
Event-level Event@Avg. F1: 42.0
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 7 [0/10000 (0%)]	Loss: 0.368932
Train Epoch: 7 [800/10000 (8%)]	Loss: 0.402014
Train Epoch: 7 [1600/10000 (16%)]	Loss: 0.347557
Train Epoch: 7 [2400/10000 (24%)]	Loss: 0.373849
Train Epoch: 7 [3200/10000 (32%)]	Loss: 0.414539
Train Epoch: 7 [4000/10000 (40%)]	Loss: 0.356692
Train Epoch: 7 [4800/10000 (48%)]	Loss: 0.430493
Train Epoch: 7 [5600/10000 (56%)]	Loss: 0.373533
Train Epoch: 7 [6400/10000 (64%)]	Loss: 0.383249
Train Epoch: 7 [7200/10000 (72%)]	Loss: 0.356689
Train Epoch: 7 [8000/10000 (80%)]	Loss: 0.364469
Train Epoch: 7 [8800/10000 (88%)]	Loss: 0.459751
Train Epoch: 7 [9600/10000 (96%)]	Loss: 0.402655
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 42.8
Visual Event Detection Segment-level F1: 56.8
Audio-Visual Event Detection Segment-level F1: 39.6
Segment-levelType@Avg. F1: 46.4
Segment-level Event@Avg. F1: 49.6
Audio Event Detection Event-level F1: 37.2
Visual Event Detection Event-level F1: 53.8
Audio-Visual Event Detection Event-level F1: 36.0
Event-level Type@Avg. F1: 42.3
Event-level Event@Avg. F1: 43.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 8 [0/10000 (0%)]	Loss: 0.416175
Train Epoch: 8 [800/10000 (8%)]	Loss: 0.407968
Train Epoch: 8 [1600/10000 (16%)]	Loss: 0.379749
Train Epoch: 8 [2400/10000 (24%)]	Loss: 0.341969
Train Epoch: 8 [3200/10000 (32%)]	Loss: 0.384704
Train Epoch: 8 [4000/10000 (40%)]	Loss: 0.343093
Train Epoch: 8 [4800/10000 (48%)]	Loss: 0.344906
Train Epoch: 8 [5600/10000 (56%)]	Loss: 0.531212
Train Epoch: 8 [6400/10000 (64%)]	Loss: 0.397153
Train Epoch: 8 [7200/10000 (72%)]	Loss: 0.362974
Train Epoch: 8 [8000/10000 (80%)]	Loss: 0.420654
Train Epoch: 8 [8800/10000 (88%)]	Loss: 0.421580
Train Epoch: 8 [9600/10000 (96%)]	Loss: 0.338548
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 35.3
Visual Event Detection Segment-level F1: 55.9
Audio-Visual Event Detection Segment-level F1: 36.0
Segment-levelType@Avg. F1: 42.4
Segment-level Event@Avg. F1: 45.3
Audio Event Detection Event-level F1: 31.2
Visual Event Detection Event-level F1: 53.4
Audio-Visual Event Detection Event-level F1: 32.6
Event-level Type@Avg. F1: 39.1
Event-level Event@Avg. F1: 39.9
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 9 [0/10000 (0%)]	Loss: 0.368252
Train Epoch: 9 [800/10000 (8%)]	Loss: 0.341488
Train Epoch: 9 [1600/10000 (16%)]	Loss: 0.379937
Train Epoch: 9 [2400/10000 (24%)]	Loss: 0.332044
Train Epoch: 9 [3200/10000 (32%)]	Loss: 0.411923
Train Epoch: 9 [4000/10000 (40%)]	Loss: 0.402931
Train Epoch: 9 [4800/10000 (48%)]	Loss: 0.447547
Train Epoch: 9 [5600/10000 (56%)]	Loss: 0.361640
Train Epoch: 9 [6400/10000 (64%)]	Loss: 0.397782
Train Epoch: 9 [7200/10000 (72%)]	Loss: 0.360040
Train Epoch: 9 [8000/10000 (80%)]	Loss: 0.392564
Train Epoch: 9 [8800/10000 (88%)]	Loss: 0.322245
Train Epoch: 9 [9600/10000 (96%)]	Loss: 0.370634
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 43.8
Visual Event Detection Segment-level F1: 58.3
Audio-Visual Event Detection Segment-level F1: 41.1
Segment-levelType@Avg. F1: 47.7
Segment-level Event@Avg. F1: 50.7
Audio Event Detection Event-level F1: 38.2
Visual Event Detection Event-level F1: 55.6
Audio-Visual Event Detection Event-level F1: 37.8
Event-level Type@Avg. F1: 43.9
Event-level Event@Avg. F1: 44.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 10 [0/10000 (0%)]	Loss: 0.430922
Train Epoch: 10 [800/10000 (8%)]	Loss: 0.404460
Train Epoch: 10 [1600/10000 (16%)]	Loss: 0.474941
Train Epoch: 10 [2400/10000 (24%)]	Loss: 0.359102
Train Epoch: 10 [3200/10000 (32%)]	Loss: 0.371126
Train Epoch: 10 [4000/10000 (40%)]	Loss: 0.377232
Train Epoch: 10 [4800/10000 (48%)]	Loss: 0.434732
Train Epoch: 10 [5600/10000 (56%)]	Loss: 0.389397
Train Epoch: 10 [6400/10000 (64%)]	Loss: 0.418922
Train Epoch: 10 [7200/10000 (72%)]	Loss: 0.407757
Train Epoch: 10 [8000/10000 (80%)]	Loss: 0.453510
Train Epoch: 10 [8800/10000 (88%)]	Loss: 0.386671
Train Epoch: 10 [9600/10000 (96%)]	Loss: 0.372085
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 43.3
Visual Event Detection Segment-level F1: 55.2
Audio-Visual Event Detection Segment-level F1: 36.2
Segment-levelType@Avg. F1: 44.9
Segment-level Event@Avg. F1: 50.8
Audio Event Detection Event-level F1: 36.7
Visual Event Detection Event-level F1: 52.0
Audio-Visual Event Detection Event-level F1: 32.9
Event-level Type@Avg. F1: 40.6
Event-level Event@Avg. F1: 43.7
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 11 [0/10000 (0%)]	Loss: 0.382056
Train Epoch: 11 [800/10000 (8%)]	Loss: 0.397708
Train Epoch: 11 [1600/10000 (16%)]	Loss: 0.405362
Train Epoch: 11 [2400/10000 (24%)]	Loss: 0.326162
Train Epoch: 11 [3200/10000 (32%)]	Loss: 0.368856
Train Epoch: 11 [4000/10000 (40%)]	Loss: 0.360111
Train Epoch: 11 [4800/10000 (48%)]	Loss: 0.383966
Train Epoch: 11 [5600/10000 (56%)]	Loss: 0.358020
Train Epoch: 11 [6400/10000 (64%)]	Loss: 0.323707
Train Epoch: 11 [7200/10000 (72%)]	Loss: 0.330298
Train Epoch: 11 [8000/10000 (80%)]	Loss: 0.315358
Train Epoch: 11 [8800/10000 (88%)]	Loss: 0.373677
Train Epoch: 11 [9600/10000 (96%)]	Loss: 0.345577
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 50.1
Visual Event Detection Segment-level F1: 57.7
Audio-Visual Event Detection Segment-level F1: 42.9
Segment-levelType@Avg. F1: 50.2
Segment-level Event@Avg. F1: 54.4
Audio Event Detection Event-level F1: 43.0
Visual Event Detection Event-level F1: 54.6
Audio-Visual Event Detection Event-level F1: 39.3
Event-level Type@Avg. F1: 45.6
Event-level Event@Avg. F1: 47.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 12 [0/10000 (0%)]	Loss: 0.367910
Train Epoch: 12 [800/10000 (8%)]	Loss: 0.327070
Train Epoch: 12 [1600/10000 (16%)]	Loss: 0.332131
Train Epoch: 12 [2400/10000 (24%)]	Loss: 0.310972
Train Epoch: 12 [3200/10000 (32%)]	Loss: 0.376848
Train Epoch: 12 [4000/10000 (40%)]	Loss: 0.409085
Train Epoch: 12 [4800/10000 (48%)]	Loss: 0.361346
Train Epoch: 12 [5600/10000 (56%)]	Loss: 0.376589
Train Epoch: 12 [6400/10000 (64%)]	Loss: 0.358930
Train Epoch: 12 [7200/10000 (72%)]	Loss: 0.369136
Train Epoch: 12 [8000/10000 (80%)]	Loss: 0.300752
Train Epoch: 12 [8800/10000 (88%)]	Loss: 0.365060
Train Epoch: 12 [9600/10000 (96%)]	Loss: 0.340224
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 50.6
Visual Event Detection Segment-level F1: 58.1
Audio-Visual Event Detection Segment-level F1: 44.3
Segment-levelType@Avg. F1: 51.0
Segment-level Event@Avg. F1: 54.5
Audio Event Detection Event-level F1: 43.9
Visual Event Detection Event-level F1: 55.1
Audio-Visual Event Detection Event-level F1: 40.9
Event-level Type@Avg. F1: 46.6
Event-level Event@Avg. F1: 47.3
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 13 [0/10000 (0%)]	Loss: 0.335044
Train Epoch: 13 [800/10000 (8%)]	Loss: 0.339660
Train Epoch: 13 [1600/10000 (16%)]	Loss: 0.367120
Train Epoch: 13 [2400/10000 (24%)]	Loss: 0.322419
Train Epoch: 13 [3200/10000 (32%)]	Loss: 0.373499
Train Epoch: 13 [4000/10000 (40%)]	Loss: 0.325760
Train Epoch: 13 [4800/10000 (48%)]	Loss: 0.405506
Train Epoch: 13 [5600/10000 (56%)]	Loss: 0.306739
Train Epoch: 13 [6400/10000 (64%)]	Loss: 0.332397
Train Epoch: 13 [7200/10000 (72%)]	Loss: 0.410964
Train Epoch: 13 [8000/10000 (80%)]	Loss: 0.403833
Train Epoch: 13 [8800/10000 (88%)]	Loss: 0.397992
Train Epoch: 13 [9600/10000 (96%)]	Loss: 0.407225
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.6
Visual Event Detection Segment-level F1: 58.9
Audio-Visual Event Detection Segment-level F1: 46.2
Segment-levelType@Avg. F1: 52.2
Segment-level Event@Avg. F1: 54.8
Audio Event Detection Event-level F1: 44.5
Visual Event Detection Event-level F1: 55.7
Audio-Visual Event Detection Event-level F1: 42.3
Event-level Type@Avg. F1: 47.5
Event-level Event@Avg. F1: 47.4
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 14 [0/10000 (0%)]	Loss: 0.329038
Train Epoch: 14 [800/10000 (8%)]	Loss: 0.283672
Train Epoch: 14 [1600/10000 (16%)]	Loss: 0.298933
Train Epoch: 14 [2400/10000 (24%)]	Loss: 0.382951
Train Epoch: 14 [3200/10000 (32%)]	Loss: 0.380313
Train Epoch: 14 [4000/10000 (40%)]	Loss: 0.378894
Train Epoch: 14 [4800/10000 (48%)]	Loss: 0.339013
Train Epoch: 14 [5600/10000 (56%)]	Loss: 0.357687
Train Epoch: 14 [6400/10000 (64%)]	Loss: 0.300285
Train Epoch: 14 [7200/10000 (72%)]	Loss: 0.305809
Train Epoch: 14 [8000/10000 (80%)]	Loss: 0.298258
Train Epoch: 14 [8800/10000 (88%)]	Loss: 0.352179
Train Epoch: 14 [9600/10000 (96%)]	Loss: 0.368261
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.3
Visual Event Detection Segment-level F1: 58.8
Audio-Visual Event Detection Segment-level F1: 46.0
Segment-levelType@Avg. F1: 52.0
Segment-level Event@Avg. F1: 54.7
Audio Event Detection Event-level F1: 44.1
Visual Event Detection Event-level F1: 55.6
Audio-Visual Event Detection Event-level F1: 41.9
Event-level Type@Avg. F1: 47.2
Event-level Event@Avg. F1: 47.3
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 15 [0/10000 (0%)]	Loss: 0.339827
Train Epoch: 15 [800/10000 (8%)]	Loss: 0.328064
Train Epoch: 15 [1600/10000 (16%)]	Loss: 0.345930
Train Epoch: 15 [2400/10000 (24%)]	Loss: 0.378044
Train Epoch: 15 [3200/10000 (32%)]	Loss: 0.406360
Train Epoch: 15 [4000/10000 (40%)]	Loss: 0.354471
Train Epoch: 15 [4800/10000 (48%)]	Loss: 0.398460
Train Epoch: 15 [5600/10000 (56%)]	Loss: 0.322861
Train Epoch: 15 [6400/10000 (64%)]	Loss: 0.419410
Train Epoch: 15 [7200/10000 (72%)]	Loss: 0.379702
Train Epoch: 15 [8000/10000 (80%)]	Loss: 0.349584
Train Epoch: 15 [8800/10000 (88%)]	Loss: 0.363636
Train Epoch: 15 [9600/10000 (96%)]	Loss: 0.401619
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 51.0
Visual Event Detection Segment-level F1: 57.7
Audio-Visual Event Detection Segment-level F1: 45.5
Segment-levelType@Avg. F1: 51.4
Segment-level Event@Avg. F1: 54.3
Audio Event Detection Event-level F1: 43.6
Visual Event Detection Event-level F1: 54.6
Audio-Visual Event Detection Event-level F1: 41.7
Event-level Type@Avg. F1: 46.6
Event-level Event@Avg. F1: 46.9
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 16 [0/10000 (0%)]	Loss: 0.327901
Train Epoch: 16 [800/10000 (8%)]	Loss: 0.292800
Train Epoch: 16 [1600/10000 (16%)]	Loss: 0.313922
Train Epoch: 16 [2400/10000 (24%)]	Loss: 0.331920
Train Epoch: 16 [3200/10000 (32%)]	Loss: 0.311222
Train Epoch: 16 [4000/10000 (40%)]	Loss: 0.373366
Train Epoch: 16 [4800/10000 (48%)]	Loss: 0.333753
Train Epoch: 16 [5600/10000 (56%)]	Loss: 0.313985
Train Epoch: 16 [6400/10000 (64%)]	Loss: 0.314710
Train Epoch: 16 [7200/10000 (72%)]	Loss: 0.307937
Train Epoch: 16 [8000/10000 (80%)]	Loss: 0.314698
Train Epoch: 16 [8800/10000 (88%)]	Loss: 0.356186
Train Epoch: 16 [9600/10000 (96%)]	Loss: 0.303606
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.2
Visual Event Detection Segment-level F1: 58.0
Audio-Visual Event Detection Segment-level F1: 46.2
Segment-levelType@Avg. F1: 52.2
Segment-level Event@Avg. F1: 55.0
Audio Event Detection Event-level F1: 44.8
Visual Event Detection Event-level F1: 54.8
Audio-Visual Event Detection Event-level F1: 42.0
Event-level Type@Avg. F1: 47.2
Event-level Event@Avg. F1: 47.4
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 17 [0/10000 (0%)]	Loss: 0.339570
Train Epoch: 17 [800/10000 (8%)]	Loss: 0.305439
Train Epoch: 17 [1600/10000 (16%)]	Loss: 0.333029
Train Epoch: 17 [2400/10000 (24%)]	Loss: 0.358031
Train Epoch: 17 [3200/10000 (32%)]	Loss: 0.384453
Train Epoch: 17 [4000/10000 (40%)]	Loss: 0.375353
Train Epoch: 17 [4800/10000 (48%)]	Loss: 0.315284
Train Epoch: 17 [5600/10000 (56%)]	Loss: 0.321246
Train Epoch: 17 [6400/10000 (64%)]	Loss: 0.282008
Train Epoch: 17 [7200/10000 (72%)]	Loss: 0.313797
Train Epoch: 17 [8000/10000 (80%)]	Loss: 0.334177
Train Epoch: 17 [8800/10000 (88%)]	Loss: 0.329474
Train Epoch: 17 [9600/10000 (96%)]	Loss: 0.337458
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.9
Visual Event Detection Segment-level F1: 57.1
Audio-Visual Event Detection Segment-level F1: 46.4
Segment-levelType@Avg. F1: 52.1
Segment-level Event@Avg. F1: 54.9
Audio Event Detection Event-level F1: 45.3
Visual Event Detection Event-level F1: 53.9
Audio-Visual Event Detection Event-level F1: 42.2
Event-level Type@Avg. F1: 47.1
Event-level Event@Avg. F1: 47.4
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 18 [0/10000 (0%)]	Loss: 0.398538
Train Epoch: 18 [800/10000 (8%)]	Loss: 0.337700
Train Epoch: 18 [1600/10000 (16%)]	Loss: 0.324734
Train Epoch: 18 [2400/10000 (24%)]	Loss: 0.337427
Train Epoch: 18 [3200/10000 (32%)]	Loss: 0.345377
Train Epoch: 18 [4000/10000 (40%)]	Loss: 0.345957
Train Epoch: 18 [4800/10000 (48%)]	Loss: 0.394780
Train Epoch: 18 [5600/10000 (56%)]	Loss: 0.334189
Train Epoch: 18 [6400/10000 (64%)]	Loss: 0.364396
Train Epoch: 18 [7200/10000 (72%)]	Loss: 0.273402
Train Epoch: 18 [8000/10000 (80%)]	Loss: 0.338380
Train Epoch: 18 [8800/10000 (88%)]	Loss: 0.294745
Train Epoch: 18 [9600/10000 (96%)]	Loss: 0.303682
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.6
Visual Event Detection Segment-level F1: 58.3
Audio-Visual Event Detection Segment-level F1: 47.6
Segment-levelType@Avg. F1: 53.2
Segment-level Event@Avg. F1: 55.7
Audio Event Detection Event-level F1: 46.0
Visual Event Detection Event-level F1: 55.2
Audio-Visual Event Detection Event-level F1: 43.4
Event-level Type@Avg. F1: 48.2
Event-level Event@Avg. F1: 48.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 19 [0/10000 (0%)]	Loss: 0.360471
Train Epoch: 19 [800/10000 (8%)]	Loss: 0.348939
Train Epoch: 19 [1600/10000 (16%)]	Loss: 0.340949
Train Epoch: 19 [2400/10000 (24%)]	Loss: 0.343930
Train Epoch: 19 [3200/10000 (32%)]	Loss: 0.333318
Train Epoch: 19 [4000/10000 (40%)]	Loss: 0.300555
Train Epoch: 19 [4800/10000 (48%)]	Loss: 0.379507
Train Epoch: 19 [5600/10000 (56%)]	Loss: 0.291733
Train Epoch: 19 [6400/10000 (64%)]	Loss: 0.294721
Train Epoch: 19 [7200/10000 (72%)]	Loss: 0.304681
Train Epoch: 19 [8000/10000 (80%)]	Loss: 0.327607
Train Epoch: 19 [8800/10000 (88%)]	Loss: 0.418705
Train Epoch: 19 [9600/10000 (96%)]	Loss: 0.343552
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 52.0
Visual Event Detection Segment-level F1: 57.1
Audio-Visual Event Detection Segment-level F1: 46.8
Segment-levelType@Avg. F1: 52.0
Segment-level Event@Avg. F1: 54.3
Audio Event Detection Event-level F1: 44.6
Visual Event Detection Event-level F1: 53.9
Audio-Visual Event Detection Event-level F1: 42.7
Event-level Type@Avg. F1: 47.1
Event-level Event@Avg. F1: 46.8
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 20 [0/10000 (0%)]	Loss: 0.344677
Train Epoch: 20 [800/10000 (8%)]	Loss: 0.339687
Train Epoch: 20 [1600/10000 (16%)]	Loss: 0.306759
Train Epoch: 20 [2400/10000 (24%)]	Loss: 0.294267
Train Epoch: 20 [3200/10000 (32%)]	Loss: 0.323469
Train Epoch: 20 [4000/10000 (40%)]	Loss: 0.322156
Train Epoch: 20 [4800/10000 (48%)]	Loss: 0.343915
Train Epoch: 20 [5600/10000 (56%)]	Loss: 0.304287
Train Epoch: 20 [6400/10000 (64%)]	Loss: 0.319737
Train Epoch: 20 [7200/10000 (72%)]	Loss: 0.322412
Train Epoch: 20 [8000/10000 (80%)]	Loss: 0.308050
Train Epoch: 20 [8800/10000 (88%)]	Loss: 0.319021
Train Epoch: 20 [9600/10000 (96%)]	Loss: 0.314376
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 54.5
Visual Event Detection Segment-level F1: 56.5
Audio-Visual Event Detection Segment-level F1: 47.4
Segment-levelType@Avg. F1: 52.8
Segment-level Event@Avg. F1: 55.2
Audio Event Detection Event-level F1: 46.6
Visual Event Detection Event-level F1: 53.3
Audio-Visual Event Detection Event-level F1: 42.9
Event-level Type@Avg. F1: 47.6
Event-level Event@Avg. F1: 47.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 21 [0/10000 (0%)]	Loss: 0.322614
Train Epoch: 21 [800/10000 (8%)]	Loss: 0.290879
Train Epoch: 21 [1600/10000 (16%)]	Loss: 0.307496
Train Epoch: 21 [2400/10000 (24%)]	Loss: 0.269345
Train Epoch: 21 [3200/10000 (32%)]	Loss: 0.307852
Train Epoch: 21 [4000/10000 (40%)]	Loss: 0.302695
Train Epoch: 21 [4800/10000 (48%)]	Loss: 0.302356
Train Epoch: 21 [5600/10000 (56%)]	Loss: 0.315930
Train Epoch: 21 [6400/10000 (64%)]	Loss: 0.361441
Train Epoch: 21 [7200/10000 (72%)]	Loss: 0.321679
Train Epoch: 21 [8000/10000 (80%)]	Loss: 0.312478
Train Epoch: 21 [8800/10000 (88%)]	Loss: 0.280150
Train Epoch: 21 [9600/10000 (96%)]	Loss: 0.339100
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.9
Visual Event Detection Segment-level F1: 57.3
Audio-Visual Event Detection Segment-level F1: 47.9
Segment-levelType@Avg. F1: 53.0
Segment-level Event@Avg. F1: 55.1
Audio Event Detection Event-level F1: 46.1
Visual Event Detection Event-level F1: 54.0
Audio-Visual Event Detection Event-level F1: 43.4
Event-level Type@Avg. F1: 47.8
Event-level Event@Avg. F1: 47.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 22 [0/10000 (0%)]	Loss: 0.336747
Train Epoch: 22 [800/10000 (8%)]	Loss: 0.322000
Train Epoch: 22 [1600/10000 (16%)]	Loss: 0.304632
Train Epoch: 22 [2400/10000 (24%)]	Loss: 0.353069
Train Epoch: 22 [3200/10000 (32%)]	Loss: 0.338513
Train Epoch: 22 [4000/10000 (40%)]	Loss: 0.291235
Train Epoch: 22 [4800/10000 (48%)]	Loss: 0.330957
Train Epoch: 22 [5600/10000 (56%)]	Loss: 0.349755
Train Epoch: 22 [6400/10000 (64%)]	Loss: 0.332268
Train Epoch: 22 [7200/10000 (72%)]	Loss: 0.312909
Train Epoch: 22 [8000/10000 (80%)]	Loss: 0.428307
Train Epoch: 22 [8800/10000 (88%)]	Loss: 0.369216
Train Epoch: 22 [9600/10000 (96%)]	Loss: 0.311556
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 54.1
Visual Event Detection Segment-level F1: 57.2
Audio-Visual Event Detection Segment-level F1: 48.2
Segment-levelType@Avg. F1: 53.2
Segment-level Event@Avg. F1: 55.1
Audio Event Detection Event-level F1: 46.3
Visual Event Detection Event-level F1: 54.0
Audio-Visual Event Detection Event-level F1: 43.5
Event-level Type@Avg. F1: 48.0
Event-level Event@Avg. F1: 47.6
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 23 [0/10000 (0%)]	Loss: 0.344982
Train Epoch: 23 [800/10000 (8%)]	Loss: 0.362716
Train Epoch: 23 [1600/10000 (16%)]	Loss: 0.315006
Train Epoch: 23 [2400/10000 (24%)]	Loss: 0.331959
Train Epoch: 23 [3200/10000 (32%)]	Loss: 0.320711
Train Epoch: 23 [4000/10000 (40%)]	Loss: 0.354280
Train Epoch: 23 [4800/10000 (48%)]	Loss: 0.319388
Train Epoch: 23 [5600/10000 (56%)]	Loss: 0.310782
Train Epoch: 23 [6400/10000 (64%)]	Loss: 0.339085
Train Epoch: 23 [7200/10000 (72%)]	Loss: 0.306918
Train Epoch: 23 [8000/10000 (80%)]	Loss: 0.356817
Train Epoch: 23 [8800/10000 (88%)]	Loss: 0.303344
Train Epoch: 23 [9600/10000 (96%)]	Loss: 0.356641
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 54.0
Visual Event Detection Segment-level F1: 57.4
Audio-Visual Event Detection Segment-level F1: 48.2
Segment-levelType@Avg. F1: 53.2
Segment-level Event@Avg. F1: 55.1
Audio Event Detection Event-level F1: 46.2
Visual Event Detection Event-level F1: 54.1
Audio-Visual Event Detection Event-level F1: 43.6
Event-level Type@Avg. F1: 48.0
Event-level Event@Avg. F1: 47.5
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 24 [0/10000 (0%)]	Loss: 0.305155
Train Epoch: 24 [800/10000 (8%)]	Loss: 0.357294
Train Epoch: 24 [1600/10000 (16%)]	Loss: 0.342579
Train Epoch: 24 [2400/10000 (24%)]	Loss: 0.315159
Train Epoch: 24 [3200/10000 (32%)]	Loss: 0.263733
Train Epoch: 24 [4000/10000 (40%)]	Loss: 0.336704
Train Epoch: 24 [4800/10000 (48%)]	Loss: 0.317632
Train Epoch: 24 [5600/10000 (56%)]	Loss: 0.272476
Train Epoch: 24 [6400/10000 (64%)]	Loss: 0.292817
Train Epoch: 24 [7200/10000 (72%)]	Loss: 0.301851
Train Epoch: 24 [8000/10000 (80%)]	Loss: 0.331884
Train Epoch: 24 [8800/10000 (88%)]	Loss: 0.354978
Train Epoch: 24 [9600/10000 (96%)]	Loss: 0.280596
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.6
Visual Event Detection Segment-level F1: 56.9
Audio-Visual Event Detection Segment-level F1: 47.9
Segment-levelType@Avg. F1: 52.8
Segment-level Event@Avg. F1: 54.8
Audio Event Detection Event-level F1: 45.9
Visual Event Detection Event-level F1: 53.5
Audio-Visual Event Detection Event-level F1: 43.3
Event-level Type@Avg. F1: 47.6
Event-level Event@Avg. F1: 47.3
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 25 [0/10000 (0%)]	Loss: 0.367645
Train Epoch: 25 [800/10000 (8%)]	Loss: 0.323848
Train Epoch: 25 [1600/10000 (16%)]	Loss: 0.379091
Train Epoch: 25 [2400/10000 (24%)]	Loss: 0.316679
Train Epoch: 25 [3200/10000 (32%)]	Loss: 0.320875
Train Epoch: 25 [4000/10000 (40%)]	Loss: 0.335324
Train Epoch: 25 [4800/10000 (48%)]	Loss: 0.304918
Train Epoch: 25 [5600/10000 (56%)]	Loss: 0.408998
Train Epoch: 25 [6400/10000 (64%)]	Loss: 0.295905
Train Epoch: 25 [7200/10000 (72%)]	Loss: 0.330926
Train Epoch: 25 [8000/10000 (80%)]	Loss: 0.345833
Train Epoch: 25 [8800/10000 (88%)]	Loss: 0.350272
Train Epoch: 25 [9600/10000 (96%)]	Loss: 0.327093
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.7
Visual Event Detection Segment-level F1: 56.3
Audio-Visual Event Detection Segment-level F1: 47.6
Segment-levelType@Avg. F1: 52.5
Segment-level Event@Avg. F1: 54.7
Audio Event Detection Event-level F1: 45.9
Visual Event Detection Event-level F1: 53.2
Audio-Visual Event Detection Event-level F1: 43.1
Event-level Type@Avg. F1: 47.4
Event-level Event@Avg. F1: 47.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 26 [0/10000 (0%)]	Loss: 0.261906
Train Epoch: 26 [800/10000 (8%)]	Loss: 0.378439
Train Epoch: 26 [1600/10000 (16%)]	Loss: 0.298269
Train Epoch: 26 [2400/10000 (24%)]	Loss: 0.311617
Train Epoch: 26 [3200/10000 (32%)]	Loss: 0.307330
Train Epoch: 26 [4000/10000 (40%)]	Loss: 0.369763
Train Epoch: 26 [4800/10000 (48%)]	Loss: 0.324013
Train Epoch: 26 [5600/10000 (56%)]	Loss: 0.306312
Train Epoch: 26 [6400/10000 (64%)]	Loss: 0.362521
Train Epoch: 26 [7200/10000 (72%)]	Loss: 0.321471
Train Epoch: 26 [8000/10000 (80%)]	Loss: 0.298054
Train Epoch: 26 [8800/10000 (88%)]	Loss: 0.321248
Train Epoch: 26 [9600/10000 (96%)]	Loss: 0.316364
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.8
Visual Event Detection Segment-level F1: 56.6
Audio-Visual Event Detection Segment-level F1: 48.0
Segment-levelType@Avg. F1: 52.8
Segment-level Event@Avg. F1: 54.6
Audio Event Detection Event-level F1: 46.0
Visual Event Detection Event-level F1: 53.3
Audio-Visual Event Detection Event-level F1: 43.4
Event-level Type@Avg. F1: 47.6
Event-level Event@Avg. F1: 47.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 27 [0/10000 (0%)]	Loss: 0.317751
Train Epoch: 27 [800/10000 (8%)]	Loss: 0.398557
Train Epoch: 27 [1600/10000 (16%)]	Loss: 0.284643
Train Epoch: 27 [2400/10000 (24%)]	Loss: 0.318743
Train Epoch: 27 [3200/10000 (32%)]	Loss: 0.319655
Train Epoch: 27 [4000/10000 (40%)]	Loss: 0.314730
Train Epoch: 27 [4800/10000 (48%)]	Loss: 0.345284
Train Epoch: 27 [5600/10000 (56%)]	Loss: 0.343065
Train Epoch: 27 [6400/10000 (64%)]	Loss: 0.367687
Train Epoch: 27 [7200/10000 (72%)]	Loss: 0.290942
Train Epoch: 27 [8000/10000 (80%)]	Loss: 0.333312
Train Epoch: 27 [8800/10000 (88%)]	Loss: 0.310407
Train Epoch: 27 [9600/10000 (96%)]	Loss: 0.338582
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.9
Visual Event Detection Segment-level F1: 56.7
Audio-Visual Event Detection Segment-level F1: 48.0
Segment-levelType@Avg. F1: 52.9
Segment-level Event@Avg. F1: 54.9
Audio Event Detection Event-level F1: 46.1
Visual Event Detection Event-level F1: 53.4
Audio-Visual Event Detection Event-level F1: 43.3
Event-level Type@Avg. F1: 47.6
Event-level Event@Avg. F1: 47.3
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 28 [0/10000 (0%)]	Loss: 0.316055
Train Epoch: 28 [800/10000 (8%)]	Loss: 0.324472
Train Epoch: 28 [1600/10000 (16%)]	Loss: 0.340979
Train Epoch: 28 [2400/10000 (24%)]	Loss: 0.318543
Train Epoch: 28 [3200/10000 (32%)]	Loss: 0.312593
Train Epoch: 28 [4000/10000 (40%)]	Loss: 0.356887
Train Epoch: 28 [4800/10000 (48%)]	Loss: 0.343750
Train Epoch: 28 [5600/10000 (56%)]	Loss: 0.299477
Train Epoch: 28 [6400/10000 (64%)]	Loss: 0.303953
Train Epoch: 28 [7200/10000 (72%)]	Loss: 0.356825
Train Epoch: 28 [8000/10000 (80%)]	Loss: 0.280558
Train Epoch: 28 [8800/10000 (88%)]	Loss: 0.285162
Train Epoch: 28 [9600/10000 (96%)]	Loss: 0.278674
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.8
Visual Event Detection Segment-level F1: 57.0
Audio-Visual Event Detection Segment-level F1: 48.5
Segment-levelType@Avg. F1: 53.1
Segment-level Event@Avg. F1: 54.6
Audio Event Detection Event-level F1: 46.0
Visual Event Detection Event-level F1: 53.7
Audio-Visual Event Detection Event-level F1: 44.0
Event-level Type@Avg. F1: 47.9
Event-level Event@Avg. F1: 47.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 29 [0/10000 (0%)]	Loss: 0.322742
Train Epoch: 29 [800/10000 (8%)]	Loss: 0.326066
Train Epoch: 29 [1600/10000 (16%)]	Loss: 0.317788
Train Epoch: 29 [2400/10000 (24%)]	Loss: 0.287197
Train Epoch: 29 [3200/10000 (32%)]	Loss: 0.329932
Train Epoch: 29 [4000/10000 (40%)]	Loss: 0.293185
Train Epoch: 29 [4800/10000 (48%)]	Loss: 0.323802
Train Epoch: 29 [5600/10000 (56%)]	Loss: 0.361362
Train Epoch: 29 [6400/10000 (64%)]	Loss: 0.325890
Train Epoch: 29 [7200/10000 (72%)]	Loss: 0.261492
Train Epoch: 29 [8000/10000 (80%)]	Loss: 0.322641
Train Epoch: 29 [8800/10000 (88%)]	Loss: 0.337239
Train Epoch: 29 [9600/10000 (96%)]	Loss: 0.437206
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.9
Visual Event Detection Segment-level F1: 56.4
Audio-Visual Event Detection Segment-level F1: 48.2
Segment-levelType@Avg. F1: 52.8
Segment-level Event@Avg. F1: 54.6
Audio Event Detection Event-level F1: 46.1
Visual Event Detection Event-level F1: 53.1
Audio-Visual Event Detection Event-level F1: 43.7
Event-level Type@Avg. F1: 47.6
Event-level Event@Avg. F1: 47.0
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 30 [0/10000 (0%)]	Loss: 0.311972
Train Epoch: 30 [800/10000 (8%)]	Loss: 0.373705
Train Epoch: 30 [1600/10000 (16%)]	Loss: 0.306337
Train Epoch: 30 [2400/10000 (24%)]	Loss: 0.308294
Train Epoch: 30 [3200/10000 (32%)]	Loss: 0.326158
Train Epoch: 30 [4000/10000 (40%)]	Loss: 0.373654
Train Epoch: 30 [4800/10000 (48%)]	Loss: 0.321424
Train Epoch: 30 [5600/10000 (56%)]	Loss: 0.289335
Train Epoch: 30 [6400/10000 (64%)]	Loss: 0.322582
Train Epoch: 30 [7200/10000 (72%)]	Loss: 0.364846
Train Epoch: 30 [8000/10000 (80%)]	Loss: 0.289435
Train Epoch: 30 [8800/10000 (88%)]	Loss: 0.348790
Train Epoch: 30 [9600/10000 (96%)]	Loss: 0.363859
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 54.0
Visual Event Detection Segment-level F1: 56.4
Audio-Visual Event Detection Segment-level F1: 47.8
Segment-levelType@Avg. F1: 52.8
Segment-level Event@Avg. F1: 54.9
Audio Event Detection Event-level F1: 46.2
Visual Event Detection Event-level F1: 53.2
Audio-Visual Event Detection Event-level F1: 43.4
Event-level Type@Avg. F1: 47.6
Event-level Event@Avg. F1: 47.4
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 31 [0/10000 (0%)]	Loss: 0.342790
Train Epoch: 31 [800/10000 (8%)]	Loss: 0.367718
Train Epoch: 31 [1600/10000 (16%)]	Loss: 0.284320
Train Epoch: 31 [2400/10000 (24%)]	Loss: 0.300943
Train Epoch: 31 [3200/10000 (32%)]	Loss: 0.341807
Train Epoch: 31 [4000/10000 (40%)]	Loss: 0.273828
Train Epoch: 31 [4800/10000 (48%)]	Loss: 0.284544
Train Epoch: 31 [5600/10000 (56%)]	Loss: 0.351112
Train Epoch: 31 [6400/10000 (64%)]	Loss: 0.312079
Train Epoch: 31 [7200/10000 (72%)]	Loss: 0.338057
Train Epoch: 31 [8000/10000 (80%)]	Loss: 0.313304
Train Epoch: 31 [8800/10000 (88%)]	Loss: 0.363110
Train Epoch: 31 [9600/10000 (96%)]	Loss: 0.387772
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.9
Visual Event Detection Segment-level F1: 56.4
Audio-Visual Event Detection Segment-level F1: 47.7
Segment-levelType@Avg. F1: 52.7
Segment-level Event@Avg. F1: 54.9
Audio Event Detection Event-level F1: 46.1
Visual Event Detection Event-level F1: 53.2
Audio-Visual Event Detection Event-level F1: 43.3
Event-level Type@Avg. F1: 47.5
Event-level Event@Avg. F1: 47.3
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 32 [0/10000 (0%)]	Loss: 0.298362
Train Epoch: 32 [800/10000 (8%)]	Loss: 0.381920
Train Epoch: 32 [1600/10000 (16%)]	Loss: 0.350668
Train Epoch: 32 [2400/10000 (24%)]	Loss: 0.325786
Train Epoch: 32 [3200/10000 (32%)]	Loss: 0.360643
Train Epoch: 32 [4000/10000 (40%)]	Loss: 0.284664
Train Epoch: 32 [4800/10000 (48%)]	Loss: 0.328792
Train Epoch: 32 [5600/10000 (56%)]	Loss: 0.320777
Train Epoch: 32 [6400/10000 (64%)]	Loss: 0.304042
Train Epoch: 32 [7200/10000 (72%)]	Loss: 0.315865
Train Epoch: 32 [8000/10000 (80%)]	Loss: 0.333451
Train Epoch: 32 [8800/10000 (88%)]	Loss: 0.309498
Train Epoch: 32 [9600/10000 (96%)]	Loss: 0.370527
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.9
Visual Event Detection Segment-level F1: 56.4
Audio-Visual Event Detection Segment-level F1: 47.7
Segment-levelType@Avg. F1: 52.7
Segment-level Event@Avg. F1: 54.9
Audio Event Detection Event-level F1: 46.1
Visual Event Detection Event-level F1: 53.2
Audio-Visual Event Detection Event-level F1: 43.3
Event-level Type@Avg. F1: 47.5
Event-level Event@Avg. F1: 47.3
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 33 [0/10000 (0%)]	Loss: 0.325991
Train Epoch: 33 [800/10000 (8%)]	Loss: 0.306887
Train Epoch: 33 [1600/10000 (16%)]	Loss: 0.368469
Train Epoch: 33 [2400/10000 (24%)]	Loss: 0.366344
Train Epoch: 33 [3200/10000 (32%)]	Loss: 0.344827
Train Epoch: 33 [4000/10000 (40%)]	Loss: 0.331965
Train Epoch: 33 [4800/10000 (48%)]	Loss: 0.287967
Train Epoch: 33 [5600/10000 (56%)]	Loss: 0.352699
Train Epoch: 33 [6400/10000 (64%)]	Loss: 0.342100
Train Epoch: 33 [7200/10000 (72%)]	Loss: 0.327533
Train Epoch: 33 [8000/10000 (80%)]	Loss: 0.317690
Train Epoch: 33 [8800/10000 (88%)]	Loss: 0.363533
Train Epoch: 33 [9600/10000 (96%)]	Loss: 0.382906
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 54.0
Visual Event Detection Segment-level F1: 56.5
Audio-Visual Event Detection Segment-level F1: 47.8
Segment-levelType@Avg. F1: 52.7
Segment-level Event@Avg. F1: 54.9
Audio Event Detection Event-level F1: 46.1
Visual Event Detection Event-level F1: 53.2
Audio-Visual Event Detection Event-level F1: 43.3
Event-level Type@Avg. F1: 47.5
Event-level Event@Avg. F1: 47.3
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 34 [0/10000 (0%)]	Loss: 0.360186
Train Epoch: 34 [800/10000 (8%)]	Loss: 0.371724
Train Epoch: 34 [1600/10000 (16%)]	Loss: 0.291359
Train Epoch: 34 [2400/10000 (24%)]	Loss: 0.350725
Train Epoch: 34 [3200/10000 (32%)]	Loss: 0.299273
Train Epoch: 34 [4000/10000 (40%)]	Loss: 0.300874
Train Epoch: 34 [4800/10000 (48%)]	Loss: 0.331322
Train Epoch: 34 [5600/10000 (56%)]	Loss: 0.300685
Train Epoch: 34 [6400/10000 (64%)]	Loss: 0.313233
Train Epoch: 34 [7200/10000 (72%)]	Loss: 0.338451
Train Epoch: 34 [8000/10000 (80%)]	Loss: 0.340064
Train Epoch: 34 [8800/10000 (88%)]	Loss: 0.299518
Train Epoch: 34 [9600/10000 (96%)]	Loss: 0.345955
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.7
Visual Event Detection Segment-level F1: 56.5
Audio-Visual Event Detection Segment-level F1: 47.7
Segment-levelType@Avg. F1: 52.7
Segment-level Event@Avg. F1: 54.8
Audio Event Detection Event-level F1: 45.9
Visual Event Detection Event-level F1: 53.2
Audio-Visual Event Detection Event-level F1: 43.3
Event-level Type@Avg. F1: 47.5
Event-level Event@Avg. F1: 47.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 35 [0/10000 (0%)]	Loss: 0.315735
Train Epoch: 35 [800/10000 (8%)]	Loss: 0.292891
Train Epoch: 35 [1600/10000 (16%)]	Loss: 0.313178
Train Epoch: 35 [2400/10000 (24%)]	Loss: 0.345432
Train Epoch: 35 [3200/10000 (32%)]	Loss: 0.307871
Train Epoch: 35 [4000/10000 (40%)]	Loss: 0.338643
Train Epoch: 35 [4800/10000 (48%)]	Loss: 0.329278
Train Epoch: 35 [5600/10000 (56%)]	Loss: 0.338359
Train Epoch: 35 [6400/10000 (64%)]	Loss: 0.339239
Train Epoch: 35 [7200/10000 (72%)]	Loss: 0.291631
Train Epoch: 35 [8000/10000 (80%)]	Loss: 0.301222
Train Epoch: 35 [8800/10000 (88%)]	Loss: 0.340981
Train Epoch: 35 [9600/10000 (96%)]	Loss: 0.306364
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.8
Visual Event Detection Segment-level F1: 56.6
Audio-Visual Event Detection Segment-level F1: 47.9
Segment-levelType@Avg. F1: 52.7
Segment-level Event@Avg. F1: 54.7
Audio Event Detection Event-level F1: 45.9
Visual Event Detection Event-level F1: 53.3
Audio-Visual Event Detection Event-level F1: 43.4
Event-level Type@Avg. F1: 47.5
Event-level Event@Avg. F1: 47.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 36 [0/10000 (0%)]	Loss: 0.327514
Train Epoch: 36 [800/10000 (8%)]	Loss: 0.344925
Train Epoch: 36 [1600/10000 (16%)]	Loss: 0.322018
Train Epoch: 36 [2400/10000 (24%)]	Loss: 0.325351
Train Epoch: 36 [3200/10000 (32%)]	Loss: 0.409975
Train Epoch: 36 [4000/10000 (40%)]	Loss: 0.335529
Train Epoch: 36 [4800/10000 (48%)]	Loss: 0.310212
Train Epoch: 36 [5600/10000 (56%)]	Loss: 0.314900
Train Epoch: 36 [6400/10000 (64%)]	Loss: 0.295522
Train Epoch: 36 [7200/10000 (72%)]	Loss: 0.348305
Train Epoch: 36 [8000/10000 (80%)]	Loss: 0.306591
Train Epoch: 36 [8800/10000 (88%)]	Loss: 0.337226
Train Epoch: 36 [9600/10000 (96%)]	Loss: 0.315697
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.8
Visual Event Detection Segment-level F1: 56.5
Audio-Visual Event Detection Segment-level F1: 47.9
Segment-levelType@Avg. F1: 52.7
Segment-level Event@Avg. F1: 54.7
Audio Event Detection Event-level F1: 45.9
Visual Event Detection Event-level F1: 53.2
Audio-Visual Event Detection Event-level F1: 43.4
Event-level Type@Avg. F1: 47.5
Event-level Event@Avg. F1: 47.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 37 [0/10000 (0%)]	Loss: 0.353569
Train Epoch: 37 [800/10000 (8%)]	Loss: 0.314318
Train Epoch: 37 [1600/10000 (16%)]	Loss: 0.298097
Train Epoch: 37 [2400/10000 (24%)]	Loss: 0.426251
Train Epoch: 37 [3200/10000 (32%)]	Loss: 0.286839
Train Epoch: 37 [4000/10000 (40%)]	Loss: 0.372634
Train Epoch: 37 [4800/10000 (48%)]	Loss: 0.362397
Train Epoch: 37 [5600/10000 (56%)]	Loss: 0.278557
Train Epoch: 37 [6400/10000 (64%)]	Loss: 0.362422
Train Epoch: 37 [7200/10000 (72%)]	Loss: 0.318319
Train Epoch: 37 [8000/10000 (80%)]	Loss: 0.404656
Train Epoch: 37 [8800/10000 (88%)]	Loss: 0.314678
Train Epoch: 37 [9600/10000 (96%)]	Loss: 0.300969
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.8
Visual Event Detection Segment-level F1: 56.4
Audio-Visual Event Detection Segment-level F1: 47.9
Segment-levelType@Avg. F1: 52.7
Segment-level Event@Avg. F1: 54.7
Audio Event Detection Event-level F1: 45.9
Visual Event Detection Event-level F1: 53.1
Audio-Visual Event Detection Event-level F1: 43.4
Event-level Type@Avg. F1: 47.5
Event-level Event@Avg. F1: 47.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 38 [0/10000 (0%)]	Loss: 0.324795
Train Epoch: 38 [800/10000 (8%)]	Loss: 0.313958
Train Epoch: 38 [1600/10000 (16%)]	Loss: 0.334462
Train Epoch: 38 [2400/10000 (24%)]	Loss: 0.371210
Train Epoch: 38 [3200/10000 (32%)]	Loss: 0.372409
Train Epoch: 38 [4000/10000 (40%)]	Loss: 0.328757
Train Epoch: 38 [4800/10000 (48%)]	Loss: 0.372178
Train Epoch: 38 [5600/10000 (56%)]	Loss: 0.287443
Train Epoch: 38 [6400/10000 (64%)]	Loss: 0.328577
Train Epoch: 38 [7200/10000 (72%)]	Loss: 0.316219
Train Epoch: 38 [8000/10000 (80%)]	Loss: 0.337728
Train Epoch: 38 [8800/10000 (88%)]	Loss: 0.349057
Train Epoch: 38 [9600/10000 (96%)]	Loss: 0.297225
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.8
Visual Event Detection Segment-level F1: 56.4
Audio-Visual Event Detection Segment-level F1: 48.0
Segment-levelType@Avg. F1: 52.7
Segment-level Event@Avg. F1: 54.7
Audio Event Detection Event-level F1: 45.9
Visual Event Detection Event-level F1: 53.1
Audio-Visual Event Detection Event-level F1: 43.5
Event-level Type@Avg. F1: 47.5
Event-level Event@Avg. F1: 47.1
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 39 [0/10000 (0%)]	Loss: 0.267594
Train Epoch: 39 [800/10000 (8%)]	Loss: 0.318746
Train Epoch: 39 [1600/10000 (16%)]	Loss: 0.381223
Train Epoch: 39 [2400/10000 (24%)]	Loss: 0.360023
Train Epoch: 39 [3200/10000 (32%)]	Loss: 0.333049
Train Epoch: 39 [4000/10000 (40%)]	Loss: 0.301795
Train Epoch: 39 [4800/10000 (48%)]	Loss: 0.391204
Train Epoch: 39 [5600/10000 (56%)]	Loss: 0.301107
Train Epoch: 39 [6400/10000 (64%)]	Loss: 0.337628
Train Epoch: 39 [7200/10000 (72%)]	Loss: 0.319320
Train Epoch: 39 [8000/10000 (80%)]	Loss: 0.279155
Train Epoch: 39 [8800/10000 (88%)]	Loss: 0.320356
Train Epoch: 39 [9600/10000 (96%)]	Loss: 0.373289
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.8
Visual Event Detection Segment-level F1: 56.2
Audio-Visual Event Detection Segment-level F1: 47.8
Segment-levelType@Avg. F1: 52.6
Segment-level Event@Avg. F1: 54.6
Audio Event Detection Event-level F1: 45.9
Visual Event Detection Event-level F1: 52.9
Audio-Visual Event Detection Event-level F1: 43.3
Event-level Type@Avg. F1: 47.4
Event-level Event@Avg. F1: 47.0
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:149: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Train Epoch: 40 [0/10000 (0%)]	Loss: 0.355250
Train Epoch: 40 [800/10000 (8%)]	Loss: 0.360867
Train Epoch: 40 [1600/10000 (16%)]	Loss: 0.303916
Train Epoch: 40 [2400/10000 (24%)]	Loss: 0.344569
Train Epoch: 40 [3200/10000 (32%)]	Loss: 0.324341
Train Epoch: 40 [4000/10000 (40%)]	Loss: 0.301743
Train Epoch: 40 [4800/10000 (48%)]	Loss: 0.294443
Train Epoch: 40 [5600/10000 (56%)]	Loss: 0.337413
Train Epoch: 40 [6400/10000 (64%)]	Loss: 0.350538
Train Epoch: 40 [7200/10000 (72%)]	Loss: 0.323226
Train Epoch: 40 [8000/10000 (80%)]	Loss: 0.282865
Train Epoch: 40 [8800/10000 (88%)]	Loss: 0.313913
Train Epoch: 40 [9600/10000 (96%)]	Loss: 0.313680
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 53.7
Visual Event Detection Segment-level F1: 56.4
Audio-Visual Event Detection Segment-level F1: 48.0
Segment-levelType@Avg. F1: 52.7
Segment-level Event@Avg. F1: 54.7
Audio Event Detection Event-level F1: 45.9
Visual Event Detection Event-level F1: 53.1
Audio-Visual Event Detection Event-level F1: 43.5
Event-level Type@Avg. F1: 47.5
Event-level Event@Avg. F1: 47.1
CUDA extension for cauchy multiplication not found. Install by going to extensions/cauchy/ and running `python setup.py install`. This should speed up end-to-end training by 10-50%
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/modules/transformer.py:282: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/people/cs/w/wxz220013/anaconda3/envs/llp/lib/python3.10/site-packages/torch/nn/functional.py:1352: UserWarning: dropout2d: Received a 3D input to dropout2d and assuming that channel-wise 1D dropout behavior is desired - input is interpreted as shape (N, C, L), where C is the channel dim. This behavior will change in a future release to interpret the input as one without a batch dimension, i.e. shape (C, H, W). To maintain the 1D channel-wise dropout behavior, please switch to using dropout1d instead.
  warnings.warn("dropout2d: Received a 3D input to dropout2d and assuming that channel-wise "
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:84: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_a = df_a.loc[df_a['filename'] == df.iloc[batch_idx, :][0]]
/people/cs/w/wxz220013/AVVP-ECCV20/main_avvp.py:100: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df_vid_v = df_v.loc[df_v['filename'] == df.iloc[batch_idx, :][0]]
Audio Event Detection Segment-level F1: 56.9
Visual Event Detection Segment-level F1: 56.4
Audio-Visual Event Detection Segment-level F1: 49.5
Segment-levelType@Avg. F1: 54.3
Segment-level Event@Avg. F1: 55.5
Audio Event Detection Event-level F1: 48.2
Visual Event Detection Event-level F1: 53.3
Audio-Visual Event Detection Event-level F1: 44.1
Event-level Type@Avg. F1: 48.5
Event-level Event@Avg. F1: 48.1
